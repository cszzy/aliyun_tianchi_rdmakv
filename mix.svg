<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>mark_wake_futex (117 samples, 0.05%)</title><rect x="941.3" y="213" width="0.5" height="15.0" fill="rgb(217,185,26)" rx="2" ry="2" />
<text  x="944.30" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (126 samples, 0.05%)</title><rect x="1187.5" y="325" width="0.6" height="15.0" fill="rgb(250,164,38)" rx="2" ry="2" />
<text  x="1190.49" y="335.5" ></text>
</g>
<g >
<title>__handle_mm_fault (666 samples, 0.27%)</title><rect x="1029.7" y="245" width="3.2" height="15.0" fill="rgb(238,195,29)" rx="2" ry="2" />
<text  x="1032.73" y="255.5" ></text>
</g>
<g >
<title>__do_page_fault (205 samples, 0.08%)</title><rect x="1186.4" y="293" width="0.9" height="15.0" fill="rgb(241,217,44)" rx="2" ry="2" />
<text  x="1189.38" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (630 samples, 0.25%)</title><rect x="1169.0" y="325" width="3.0" height="15.0" fill="rgb(226,141,42)" rx="2" ry="2" />
<text  x="1172.04" y="335.5" ></text>
</g>
<g >
<title>futex_wait (170 samples, 0.07%)</title><rect x="951.0" y="213" width="0.8" height="15.0" fill="rgb(230,214,28)" rx="2" ry="2" />
<text  x="953.96" y="223.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_write (662 samples, 0.26%)</title><rect x="1023.1" y="309" width="3.1" height="15.0" fill="rgb(251,20,43)" rx="2" ry="2" />
<text  x="1026.11" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (89 samples, 0.04%)</title><rect x="1175.3" y="309" width="0.4" height="15.0" fill="rgb(244,141,48)" rx="2" ry="2" />
<text  x="1178.26" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (284 samples, 0.11%)</title><rect x="932.2" y="277" width="1.4" height="15.0" fill="rgb(227,103,29)" rx="2" ry="2" />
<text  x="935.25" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.01%)</title><rect x="1187.3" y="325" width="0.2" height="15.0" fill="rgb(222,18,25)" rx="2" ry="2" />
<text  x="1190.34" y="335.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (133 samples, 0.05%)</title><rect x="14.1" y="213" width="0.6" height="15.0" fill="rgb(219,78,29)" rx="2" ry="2" />
<text  x="17.06" y="223.5" ></text>
</g>
<g >
<title>change_pte_range (110 samples, 0.04%)</title><rect x="1041.6" y="197" width="0.5" height="15.0" fill="rgb(248,206,23)" rx="2" ry="2" />
<text  x="1044.62" y="207.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (181 samples, 0.07%)</title><rect x="1011.5" y="309" width="0.9" height="15.0" fill="rgb(225,99,0)" rx="2" ry="2" />
<text  x="1014.55" y="319.5" ></text>
</g>
<g >
<title>kv::LocalEngine::write (31,104 samples, 12.41%)</title><rect x="1042.2" y="341" width="146.4" height="15.0" fill="rgb(207,119,29)" rx="2" ry="2" />
<text  x="1045.15" y="351.5" >kv::LocalEngine::w..</text>
</g>
<g >
<title>do_page_fault (1,508 samples, 0.60%)</title><rect x="1026.2" y="309" width="7.1" height="15.0" fill="rgb(215,223,27)" rx="2" ry="2" />
<text  x="1029.24" y="319.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (40 samples, 0.02%)</title><rect x="14.4" y="53" width="0.2" height="15.0" fill="rgb(208,57,26)" rx="2" ry="2" />
<text  x="17.44" y="63.5" ></text>
</g>
<g >
<title>pthread_spin_lock (397 samples, 0.16%)</title><rect x="989.2" y="261" width="1.9" height="15.0" fill="rgb(254,171,34)" rx="2" ry="2" />
<text  x="992.19" y="271.5" ></text>
</g>
<g >
<title>try_to_unmap_one (58 samples, 0.02%)</title><rect x="14.4" y="133" width="0.3" height="15.0" fill="rgb(214,20,44)" rx="2" ry="2" />
<text  x="17.38" y="143.5" ></text>
</g>
<g >
<title>std::error_code::default_error_condition (250,567 samples, 99.99%)</title><rect x="10.0" y="373" width="1179.8" height="15.0" fill="rgb(244,160,54)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >std::error_code::default_error_condition</text>
</g>
<g >
<title>do_syscall_64 (185 samples, 0.07%)</title><rect x="950.9" y="261" width="0.9" height="15.0" fill="rgb(239,141,39)" rx="2" ry="2" />
<text  x="953.89" y="271.5" ></text>
</g>
<g >
<title>get_futex_key (77 samples, 0.03%)</title><rect x="940.9" y="213" width="0.4" height="15.0" fill="rgb(207,70,6)" rx="2" ry="2" />
<text  x="943.93" y="223.5" ></text>
</g>
<g >
<title>[[vdso]] (128 samples, 0.05%)</title><rect x="1185.3" y="245" width="0.6" height="15.0" fill="rgb(247,66,37)" rx="2" ry="2" />
<text  x="1188.32" y="255.5" ></text>
</g>
<g >
<title>do_page_fault (131 samples, 0.05%)</title><rect x="1189.1" y="325" width="0.6" height="15.0" fill="rgb(223,162,48)" rx="2" ry="2" />
<text  x="1192.11" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (3,076 samples, 1.23%)</title><rect x="996.1" y="229" width="14.4" height="15.0" fill="rgb(251,84,44)" rx="2" ry="2" />
<text  x="999.06" y="239.5" ></text>
</g>
<g >
<title>try_to_wake_up (96 samples, 0.04%)</title><rect x="954.6" y="181" width="0.5" height="15.0" fill="rgb(245,212,26)" rx="2" ry="2" />
<text  x="957.61" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (306 samples, 0.12%)</title><rect x="1175.7" y="293" width="1.5" height="15.0" fill="rgb(212,108,21)" rx="2" ry="2" />
<text  x="1178.74" y="303.5" ></text>
</g>
<g >
<title>__lock_text_start (96 samples, 0.04%)</title><rect x="954.6" y="165" width="0.5" height="15.0" fill="rgb(228,136,41)" rx="2" ry="2" />
<text  x="957.61" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (187 samples, 0.07%)</title><rect x="950.9" y="277" width="0.9" height="15.0" fill="rgb(252,97,8)" rx="2" ry="2" />
<text  x="953.88" y="287.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (44 samples, 0.02%)</title><rect x="14.4" y="69" width="0.2" height="15.0" fill="rgb(250,127,15)" rx="2" ry="2" />
<text  x="17.44" y="79.5" ></text>
</g>
<g >
<title>page_fault (1,509 samples, 0.60%)</title><rect x="1026.2" y="325" width="7.1" height="15.0" fill="rgb(229,224,52)" rx="2" ry="2" />
<text  x="1029.23" y="335.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_read (11,774 samples, 4.70%)</title><rect x="955.1" y="309" width="55.5" height="15.0" fill="rgb(230,52,53)" rx="2" ry="2" />
<text  x="958.11" y="319.5" >kv::R..</text>
</g>
<g >
<title>migrate_misplaced_page (82 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.4" height="15.0" fill="rgb(251,30,27)" rx="2" ry="2" />
<text  x="1192.30" y="239.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (134 samples, 0.05%)</title><rect x="1041.5" y="293" width="0.7" height="15.0" fill="rgb(248,121,24)" rx="2" ry="2" />
<text  x="1044.52" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1,164 samples, 0.46%)</title><rect x="939.8" y="293" width="5.5" height="15.0" fill="rgb(247,49,1)" rx="2" ry="2" />
<text  x="942.81" y="303.5" ></text>
</g>
<g >
<title>futex_wake (144 samples, 0.06%)</title><rect x="1173.6" y="229" width="0.6" height="15.0" fill="rgb(232,25,44)" rx="2" ry="2" />
<text  x="1176.55" y="239.5" ></text>
</g>
<g >
<title>__lll_lock_wait (391 samples, 0.16%)</title><rect x="931.7" y="309" width="1.9" height="15.0" fill="rgb(220,211,29)" rx="2" ry="2" />
<text  x="934.74" y="319.5" ></text>
</g>
<g >
<title>irq_exit (55 samples, 0.02%)</title><rect x="945.3" y="293" width="0.3" height="15.0" fill="rgb(238,98,21)" rx="2" ry="2" />
<text  x="948.30" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (2,043 samples, 0.82%)</title><rect x="955.5" y="293" width="9.6" height="15.0" fill="rgb(243,210,44)" rx="2" ry="2" />
<text  x="958.50" y="303.5" ></text>
</g>
<g >
<title>[[vdso]] (448 samples, 0.18%)</title><rect x="1181.8" y="229" width="2.1" height="15.0" fill="rgb(220,22,26)" rx="2" ry="2" />
<text  x="1184.76" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (63 samples, 0.03%)</title><rect x="1188.8" y="325" width="0.3" height="15.0" fill="rgb(214,173,18)" rx="2" ry="2" />
<text  x="1191.81" y="335.5" ></text>
</g>
<g >
<title>pthread_spin_lock (113 samples, 0.05%)</title><rect x="1017.9" y="277" width="0.5" height="15.0" fill="rgb(229,27,3)" rx="2" ry="2" />
<text  x="1020.91" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (172 samples, 0.07%)</title><rect x="951.0" y="245" width="0.8" height="15.0" fill="rgb(236,164,27)" rx="2" ry="2" />
<text  x="953.95" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (69 samples, 0.03%)</title><rect x="1012.1" y="261" width="0.3" height="15.0" fill="rgb(250,92,36)" rx="2" ry="2" />
<text  x="1015.07" y="271.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (29 samples, 0.01%)</title><rect x="1188.5" y="325" width="0.1" height="15.0" fill="rgb(246,229,28)" rx="2" ry="2" />
<text  x="1191.47" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (22 samples, 0.01%)</title><rect x="1032.4" y="213" width="0.1" height="15.0" fill="rgb(236,75,44)" rx="2" ry="2" />
<text  x="1035.39" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (104 samples, 0.04%)</title><rect x="1189.2" y="277" width="0.5" height="15.0" fill="rgb(207,157,34)" rx="2" ry="2" />
<text  x="1192.23" y="287.5" ></text>
</g>
<g >
<title>do_futex (262 samples, 0.10%)</title><rect x="953.8" y="229" width="1.3" height="15.0" fill="rgb(254,153,17)" rx="2" ry="2" />
<text  x="956.84" y="239.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (55 samples, 0.02%)</title><rect x="945.3" y="325" width="0.3" height="15.0" fill="rgb(206,163,13)" rx="2" ry="2" />
<text  x="948.30" y="335.5" ></text>
</g>
<g >
<title>mpol_misplaced (40 samples, 0.02%)</title><rect x="1032.5" y="213" width="0.2" height="15.0" fill="rgb(254,93,33)" rx="2" ry="2" />
<text  x="1035.52" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (2,485 samples, 0.99%)</title><rect x="933.6" y="325" width="11.7" height="15.0" fill="rgb(225,38,16)" rx="2" ry="2" />
<text  x="936.59" y="335.5" ></text>
</g>
<g >
<title>__lll_lock_wait (242 samples, 0.10%)</title><rect x="950.6" y="293" width="1.2" height="15.0" fill="rgb(223,196,49)" rx="2" ry="2" />
<text  x="953.62" y="303.5" ></text>
</g>
<g >
<title>try_to_unmap (52 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.3" height="15.0" fill="rgb(254,164,51)" rx="2" ry="2" />
<text  x="1192.43" y="207.5" ></text>
</g>
<g >
<title>do_futex (148 samples, 0.06%)</title><rect x="1173.5" y="245" width="0.7" height="15.0" fill="rgb(238,222,36)" rx="2" ry="2" />
<text  x="1176.53" y="255.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_read (9,648 samples, 3.85%)</title><rect x="965.1" y="293" width="45.5" height="15.0" fill="rgb(210,25,17)" rx="2" ry="2" />
<text  x="968.12" y="303.5" >kv::..</text>
</g>
<g >
<title>__GI___clone (250,567 samples, 99.99%)</title><rect x="10.0" y="405" width="1179.8" height="15.0" fill="rgb(239,145,16)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >__GI___clone</text>
</g>
<g >
<title>__lock_text_start (683 samples, 0.27%)</title><rect x="942.0" y="181" width="3.2" height="15.0" fill="rgb(219,129,23)" rx="2" ry="2" />
<text  x="945.01" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (31 samples, 0.01%)</title><rect x="1184.0" y="309" width="0.1" height="15.0" fill="rgb(221,104,34)" rx="2" ry="2" />
<text  x="1187.00" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (25 samples, 0.01%)</title><rect x="1183.9" y="309" width="0.1" height="15.0" fill="rgb(234,0,2)" rx="2" ry="2" />
<text  x="1186.88" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (162 samples, 0.06%)</title><rect x="1010.8" y="309" width="0.7" height="15.0" fill="rgb(251,217,31)" rx="2" ry="2" />
<text  x="1013.78" y="319.5" ></text>
</g>
<g >
<title>rmap_walk_anon (51 samples, 0.02%)</title><rect x="1189.4" y="165" width="0.3" height="15.0" fill="rgb(235,96,19)" rx="2" ry="2" />
<text  x="1192.43" y="175.5" ></text>
</g>
<g >
<title>do_numa_page (92 samples, 0.04%)</title><rect x="1189.3" y="245" width="0.4" height="15.0" fill="rgb(252,45,9)" rx="2" ry="2" />
<text  x="1192.28" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (101 samples, 0.04%)</title><rect x="1189.2" y="261" width="0.5" height="15.0" fill="rgb(224,44,32)" rx="2" ry="2" />
<text  x="1192.24" y="271.5" ></text>
</g>
<g >
<title>change_protection_range (29 samples, 0.01%)</title><rect x="1188.5" y="213" width="0.1" height="15.0" fill="rgb(243,152,18)" rx="2" ry="2" />
<text  x="1191.47" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (211 samples, 0.08%)</title><rect x="13.8" y="261" width="1.0" height="15.0" fill="rgb(214,96,5)" rx="2" ry="2" />
<text  x="16.82" y="271.5" ></text>
</g>
<g >
<title>kv::LocalEngine::read (218,089 samples, 87.03%)</title><rect x="15.2" y="341" width="1027.0" height="15.0" fill="rgb(206,87,42)" rx="2" ry="2" />
<text  x="18.24" y="351.5" >kv::LocalEngine::read</text>
</g>
<g >
<title>__x64_sys_futex (272 samples, 0.11%)</title><rect x="953.8" y="245" width="1.3" height="15.0" fill="rgb(232,29,10)" rx="2" ry="2" />
<text  x="956.80" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_futex (42 samples, 0.02%)</title><rect x="1171.8" y="261" width="0.2" height="15.0" fill="rgb(220,111,10)" rx="2" ry="2" />
<text  x="1174.80" y="271.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_write (377 samples, 0.15%)</title><rect x="1184.1" y="309" width="1.8" height="15.0" fill="rgb(254,192,54)" rx="2" ry="2" />
<text  x="1187.15" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (297 samples, 0.12%)</title><rect x="953.7" y="261" width="1.4" height="15.0" fill="rgb(217,62,12)" rx="2" ry="2" />
<text  x="956.69" y="271.5" ></text>
</g>
<g >
<title>do_page_fault (282 samples, 0.11%)</title><rect x="13.5" y="309" width="1.3" height="15.0" fill="rgb(252,100,34)" rx="2" ry="2" />
<text  x="16.50" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (703 samples, 0.28%)</title><rect x="951.8" y="293" width="3.3" height="15.0" fill="rgb(242,177,31)" rx="2" ry="2" />
<text  x="954.78" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock (170 samples, 0.07%)</title><rect x="1030.3" y="229" width="0.8" height="15.0" fill="rgb(222,107,5)" rx="2" ry="2" />
<text  x="1033.28" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (292 samples, 0.12%)</title><rect x="932.2" y="293" width="1.4" height="15.0" fill="rgb(242,6,1)" rx="2" ry="2" />
<text  x="935.21" y="303.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (149 samples, 0.06%)</title><rect x="1184.2" y="293" width="0.7" height="15.0" fill="rgb(253,125,33)" rx="2" ry="2" />
<text  x="1187.21" y="303.5" ></text>
</g>
<g >
<title>futex_wait (39 samples, 0.02%)</title><rect x="1011.4" y="213" width="0.1" height="15.0" fill="rgb(246,144,10)" rx="2" ry="2" />
<text  x="1014.36" y="223.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (40 samples, 0.02%)</title><rect x="954.3" y="181" width="0.2" height="15.0" fill="rgb(242,165,52)" rx="2" ry="2" />
<text  x="957.30" y="191.5" ></text>
</g>
<g >
<title>task_work_run (134 samples, 0.05%)</title><rect x="1041.5" y="277" width="0.7" height="15.0" fill="rgb(251,96,3)" rx="2" ry="2" />
<text  x="1044.52" y="287.5" ></text>
</g>
<g >
<title>operator new (92 samples, 0.04%)</title><rect x="1188.7" y="341" width="0.4" height="15.0" fill="rgb(246,182,13)" rx="2" ry="2" />
<text  x="1191.68" y="351.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (830 samples, 0.33%)</title><rect x="1019.2" y="261" width="3.9" height="15.0" fill="rgb(243,23,48)" rx="2" ry="2" />
<text  x="1022.20" y="271.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (584 samples, 0.23%)</title><rect x="1181.1" y="277" width="2.8" height="15.0" fill="rgb(243,216,46)" rx="2" ry="2" />
<text  x="1184.11" y="287.5" ></text>
</g>
<g >
<title>rmap_walk (52 samples, 0.02%)</title><rect x="1189.4" y="181" width="0.3" height="15.0" fill="rgb(211,65,25)" rx="2" ry="2" />
<text  x="1192.43" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (79 samples, 0.03%)</title><rect x="1188.1" y="325" width="0.4" height="15.0" fill="rgb(227,36,18)" rx="2" ry="2" />
<text  x="1191.08" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (97 samples, 0.04%)</title><rect x="954.6" y="197" width="0.5" height="15.0" fill="rgb(253,130,32)" rx="2" ry="2" />
<text  x="957.60" y="207.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (134 samples, 0.05%)</title><rect x="1041.5" y="309" width="0.7" height="15.0" fill="rgb(242,148,47)" rx="2" ry="2" />
<text  x="1044.52" y="319.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_read (13,811 samples, 5.51%)</title><rect x="945.6" y="325" width="65.0" height="15.0" fill="rgb(234,82,38)" rx="2" ry="2" />
<text  x="948.56" y="335.5" >kv::Con..</text>
</g>
<g >
<title>futex_wait_setup (145 samples, 0.06%)</title><rect x="932.7" y="213" width="0.7" height="15.0" fill="rgb(242,146,12)" rx="2" ry="2" />
<text  x="935.71" y="223.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (56 samples, 0.02%)</title><rect x="977.9" y="261" width="0.3" height="15.0" fill="rgb(217,147,53)" rx="2" ry="2" />
<text  x="980.91" y="271.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (53 samples, 0.02%)</title><rect x="14.4" y="101" width="0.3" height="15.0" fill="rgb(209,220,53)" rx="2" ry="2" />
<text  x="17.41" y="111.5" ></text>
</g>
<g >
<title>futex_wake (1,049 samples, 0.42%)</title><rect x="940.3" y="229" width="4.9" height="15.0" fill="rgb(212,58,30)" rx="2" ry="2" />
<text  x="943.29" y="239.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (140 samples, 0.06%)</title><rect x="1185.3" y="261" width="0.6" height="15.0" fill="rgb(251,135,25)" rx="2" ry="2" />
<text  x="1188.26" y="271.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (474 samples, 0.19%)</title><rect x="1172.0" y="325" width="2.2" height="15.0" fill="rgb(225,84,50)" rx="2" ry="2" />
<text  x="1175.00" y="335.5" ></text>
</g>
<g >
<title>mlx5dv_open_device (42 samples, 0.02%)</title><rect x="1184.9" y="293" width="0.2" height="15.0" fill="rgb(231,31,54)" rx="2" ry="2" />
<text  x="1187.94" y="303.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (502 samples, 0.20%)</title><rect x="1181.5" y="245" width="2.4" height="15.0" fill="rgb(253,166,12)" rx="2" ry="2" />
<text  x="1184.50" y="255.5" ></text>
</g>
<g >
<title>run_rebalance_domains (46 samples, 0.02%)</title><rect x="945.3" y="261" width="0.3" height="15.0" fill="rgb(246,229,4)" rx="2" ry="2" />
<text  x="948.35" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (472 samples, 0.19%)</title><rect x="1172.0" y="309" width="2.2" height="15.0" fill="rgb(212,91,0)" rx="2" ry="2" />
<text  x="1175.01" y="319.5" ></text>
</g>
<g >
<title>do_futex (1,107 samples, 0.44%)</title><rect x="940.1" y="245" width="5.2" height="15.0" fill="rgb(216,31,24)" rx="2" ry="2" />
<text  x="943.07" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (31 samples, 0.01%)</title><rect x="1184.0" y="293" width="0.1" height="15.0" fill="rgb(205,6,20)" rx="2" ry="2" />
<text  x="1187.00" y="303.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (68 samples, 0.03%)</title><rect x="941.0" y="197" width="0.3" height="15.0" fill="rgb(238,27,18)" rx="2" ry="2" />
<text  x="943.97" y="207.5" ></text>
</g>
<g >
<title>swapgs_restore_regs_and_return_to_usermode (134 samples, 0.05%)</title><rect x="1041.5" y="325" width="0.7" height="15.0" fill="rgb(226,210,49)" rx="2" ry="2" />
<text  x="1044.52" y="335.5" ></text>
</g>
<g >
<title>[[vdso]] (728 samples, 0.29%)</title><rect x="1019.7" y="245" width="3.4" height="15.0" fill="rgb(227,206,35)" rx="2" ry="2" />
<text  x="1022.68" y="255.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (157 samples, 0.06%)</title><rect x="1185.2" y="277" width="0.7" height="15.0" fill="rgb(242,151,14)" rx="2" ry="2" />
<text  x="1188.18" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (720 samples, 0.29%)</title><rect x="1029.5" y="261" width="3.4" height="15.0" fill="rgb(210,152,38)" rx="2" ry="2" />
<text  x="1032.49" y="271.5" ></text>
</g>
<g >
<title>mlx5dv_open_device (127 samples, 0.05%)</title><rect x="1180.5" y="277" width="0.6" height="15.0" fill="rgb(246,90,35)" rx="2" ry="2" />
<text  x="1183.52" y="287.5" ></text>
</g>
<g >
<title>task_numa_fault (27 samples, 0.01%)</title><rect x="1032.7" y="213" width="0.1" height="15.0" fill="rgb(210,202,19)" rx="2" ry="2" />
<text  x="1035.71" y="223.5" ></text>
</g>
<g >
<title>down_read_trylock (84 samples, 0.03%)</title><rect x="1029.0" y="261" width="0.4" height="15.0" fill="rgb(253,206,43)" rx="2" ry="2" />
<text  x="1032.01" y="271.5" ></text>
</g>
<g >
<title>pthread_spin_lock (1,701 samples, 0.68%)</title><rect x="978.7" y="261" width="8.0" height="15.0" fill="rgb(233,49,4)" rx="2" ry="2" />
<text  x="981.72" y="271.5" ></text>
</g>
<g >
<title>page_fault (131 samples, 0.05%)</title><rect x="1189.1" y="341" width="0.6" height="15.0" fill="rgb(218,118,38)" rx="2" ry="2" />
<text  x="1192.11" y="351.5" ></text>
</g>
<g >
<title>__lll_lock_wait (23 samples, 0.01%)</title><rect x="1175.2" y="293" width="0.1" height="15.0" fill="rgb(228,81,16)" rx="2" ry="2" />
<text  x="1178.15" y="303.5" ></text>
</g>
<g >
<title>get_futex_value_locked (41 samples, 0.02%)</title><rect x="951.5" y="181" width="0.2" height="15.0" fill="rgb(238,130,13)" rx="2" ry="2" />
<text  x="954.53" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (4,473 samples, 1.78%)</title><rect x="912.5" y="325" width="21.1" height="15.0" fill="rgb(252,196,22)" rx="2" ry="2" />
<text  x="915.53" y="335.5" ></text>
</g>
<g >
<title>do_futex (39 samples, 0.02%)</title><rect x="1011.4" y="229" width="0.1" height="15.0" fill="rgb(224,142,46)" rx="2" ry="2" />
<text  x="1014.36" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (47 samples, 0.02%)</title><rect x="1171.8" y="277" width="0.2" height="15.0" fill="rgb(235,54,52)" rx="2" ry="2" />
<text  x="1174.78" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (1,164 samples, 0.46%)</title><rect x="946.3" y="309" width="5.5" height="15.0" fill="rgb(247,166,36)" rx="2" ry="2" />
<text  x="949.28" y="319.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_write (96 samples, 0.04%)</title><rect x="1185.9" y="309" width="0.5" height="15.0" fill="rgb(237,120,33)" rx="2" ry="2" />
<text  x="1188.92" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (99 samples, 0.04%)</title><rect x="1186.8" y="261" width="0.5" height="15.0" fill="rgb(249,213,25)" rx="2" ry="2" />
<text  x="1189.81" y="271.5" ></text>
</g>
<g >
<title>pthread_spin_lock (71 samples, 0.03%)</title><rect x="1184.6" y="277" width="0.3" height="15.0" fill="rgb(229,195,21)" rx="2" ry="2" />
<text  x="1187.58" y="287.5" ></text>
</g>
<g >
<title>pthread_spin_lock (356 samples, 0.14%)</title><rect x="1015.7" y="277" width="1.7" height="15.0" fill="rgb(214,178,53)" rx="2" ry="2" />
<text  x="1018.71" y="287.5" ></text>
</g>
<g >
<title>pthread_spin_lock (60 samples, 0.02%)</title><rect x="1180.8" y="261" width="0.3" height="15.0" fill="rgb(235,156,38)" rx="2" ry="2" />
<text  x="1183.83" y="271.5" ></text>
</g>
<g >
<title>change_prot_numa (29 samples, 0.01%)</title><rect x="1188.5" y="245" width="0.1" height="15.0" fill="rgb(218,224,25)" rx="2" ry="2" />
<text  x="1191.47" y="255.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_read (2,022 samples, 0.81%)</title><rect x="1174.3" y="325" width="9.6" height="15.0" fill="rgb(241,211,29)" rx="2" ry="2" />
<text  x="1177.34" y="335.5" ></text>
</g>
<g >
<title>wake_up_q (104 samples, 0.04%)</title><rect x="1173.7" y="213" width="0.5" height="15.0" fill="rgb(249,173,38)" rx="2" ry="2" />
<text  x="1176.74" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (180 samples, 0.07%)</title><rect x="1011.6" y="293" width="0.8" height="15.0" fill="rgb(207,164,49)" rx="2" ry="2" />
<text  x="1014.55" y="303.5" ></text>
</g>
<g >
<title>change_pte_range (27 samples, 0.01%)</title><rect x="1188.5" y="197" width="0.1" height="15.0" fill="rgb(205,68,50)" rx="2" ry="2" />
<text  x="1191.48" y="207.5" ></text>
</g>
<g >
<title>__GI___libc_free (60 samples, 0.02%)</title><rect x="11.3" y="341" width="0.3" height="15.0" fill="rgb(231,5,42)" rx="2" ry="2" />
<text  x="14.34" y="351.5" ></text>
</g>
<g >
<title>mlx5dv_open_device (856 samples, 0.34%)</title><rect x="987.0" y="277" width="4.1" height="15.0" fill="rgb(225,7,45)" rx="2" ry="2" />
<text  x="990.03" y="287.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (4,217 samples, 1.68%)</title><rect x="966.9" y="277" width="19.8" height="15.0" fill="rgb(230,202,44)" rx="2" ry="2" />
<text  x="969.87" y="287.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (48 samples, 0.02%)</title><rect x="1189.4" y="117" width="0.3" height="15.0" fill="rgb(226,4,50)" rx="2" ry="2" />
<text  x="1192.45" y="127.5" ></text>
</g>
<g >
<title>_raw_spin_lock (40 samples, 0.02%)</title><rect x="940.1" y="229" width="0.2" height="15.0" fill="rgb(230,192,5)" rx="2" ry="2" />
<text  x="943.10" y="239.5" ></text>
</g>
<g >
<title>futex_wake (238 samples, 0.09%)</title><rect x="953.9" y="213" width="1.2" height="15.0" fill="rgb(222,126,4)" rx="2" ry="2" />
<text  x="956.94" y="223.5" ></text>
</g>
<g >
<title>do_futex (40 samples, 0.02%)</title><rect x="1171.8" y="245" width="0.2" height="15.0" fill="rgb(223,60,16)" rx="2" ry="2" />
<text  x="1174.81" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.01%)</title><rect x="1175.5" y="277" width="0.2" height="15.0" fill="rgb(242,139,39)" rx="2" ry="2" />
<text  x="1178.52" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (200 samples, 0.08%)</title><rect x="13.9" y="245" width="0.9" height="15.0" fill="rgb(226,174,47)" rx="2" ry="2" />
<text  x="16.87" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (654 samples, 0.26%)</title><rect x="1023.1" y="293" width="3.1" height="15.0" fill="rgb(210,209,41)" rx="2" ry="2" />
<text  x="1026.14" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (129 samples, 0.05%)</title><rect x="1189.1" y="293" width="0.6" height="15.0" fill="rgb(219,5,10)" rx="2" ry="2" />
<text  x="1192.11" y="303.5" ></text>
</g>
<g >
<title>try_to_unmap (59 samples, 0.02%)</title><rect x="14.4" y="181" width="0.3" height="15.0" fill="rgb(209,223,16)" rx="2" ry="2" />
<text  x="17.38" y="191.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_read (1,420 samples, 0.57%)</title><rect x="1177.2" y="293" width="6.7" height="15.0" fill="rgb(243,185,54)" rx="2" ry="2" />
<text  x="1180.18" y="303.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_read (1,738 samples, 0.69%)</title><rect x="1175.7" y="309" width="8.2" height="15.0" fill="rgb(235,121,51)" rx="2" ry="2" />
<text  x="1178.68" y="319.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (909 samples, 0.36%)</title><rect x="1018.8" y="277" width="4.3" height="15.0" fill="rgb(212,172,49)" rx="2" ry="2" />
<text  x="1021.83" y="287.5" ></text>
</g>
<g >
<title>rdma_client (250,601 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(237,183,3)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >rdma_client</text>
</g>
<g >
<title>smp_call_function_many (26 samples, 0.01%)</title><rect x="1189.5" y="53" width="0.2" height="15.0" fill="rgb(254,192,34)" rx="2" ry="2" />
<text  x="1192.53" y="63.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (3,840 samples, 1.53%)</title><rect x="992.5" y="261" width="18.0" height="15.0" fill="rgb(207,191,38)" rx="2" ry="2" />
<text  x="995.47" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (131 samples, 0.05%)</title><rect x="1189.1" y="309" width="0.6" height="15.0" fill="rgb(233,204,3)" rx="2" ry="2" />
<text  x="1192.11" y="319.5" ></text>
</g>
<g >
<title>page_fault (282 samples, 0.11%)</title><rect x="13.5" y="325" width="1.3" height="15.0" fill="rgb(254,62,35)" rx="2" ry="2" />
<text  x="16.50" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_futex (149 samples, 0.06%)</title><rect x="1173.5" y="261" width="0.7" height="15.0" fill="rgb(251,128,3)" rx="2" ry="2" />
<text  x="1176.53" y="271.5" ></text>
</g>
<g >
<title>rmap_walk_anon (59 samples, 0.02%)</title><rect x="14.4" y="149" width="0.3" height="15.0" fill="rgb(243,145,51)" rx="2" ry="2" />
<text  x="17.38" y="159.5" ></text>
</g>
<g >
<title>task_work_run (29 samples, 0.01%)</title><rect x="1188.5" y="277" width="0.1" height="15.0" fill="rgb(249,109,48)" rx="2" ry="2" />
<text  x="1191.47" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (69 samples, 0.03%)</title><rect x="1012.1" y="277" width="0.3" height="15.0" fill="rgb(213,204,2)" rx="2" ry="2" />
<text  x="1015.07" y="287.5" ></text>
</g>
<g >
<title>futex_wake (55 samples, 0.02%)</title><rect x="1012.1" y="213" width="0.3" height="15.0" fill="rgb(253,32,23)" rx="2" ry="2" />
<text  x="1015.13" y="223.5" ></text>
</g>
<g >
<title>start_thread (250,567 samples, 99.99%)</title><rect x="10.0" y="389" width="1179.8" height="15.0" fill="rgb(229,10,17)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >start_thread</text>
</g>
<g >
<title>rebalance_domains (45 samples, 0.02%)</title><rect x="945.3" y="245" width="0.3" height="15.0" fill="rgb(212,111,15)" rx="2" ry="2" />
<text  x="948.35" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (2,475 samples, 0.99%)</title><rect x="933.6" y="309" width="11.7" height="15.0" fill="rgb(217,143,19)" rx="2" ry="2" />
<text  x="936.64" y="319.5" ></text>
</g>
<g >
<title>pthread_spin_lock (29 samples, 0.01%)</title><rect x="1185.0" y="277" width="0.1" height="15.0" fill="rgb(240,45,18)" rx="2" ry="2" />
<text  x="1188.00" y="287.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_write (534 samples, 0.21%)</title><rect x="1183.9" y="325" width="2.5" height="15.0" fill="rgb(215,179,36)" rx="2" ry="2" />
<text  x="1186.86" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (40 samples, 0.02%)</title><rect x="954.3" y="197" width="0.2" height="15.0" fill="rgb(226,122,39)" rx="2" ry="2" />
<text  x="957.30" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (990 samples, 0.40%)</title><rect x="1018.4" y="293" width="4.7" height="15.0" fill="rgb(214,202,19)" rx="2" ry="2" />
<text  x="1021.44" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (24 samples, 0.01%)</title><rect x="1041.4" y="325" width="0.1" height="15.0" fill="rgb(218,138,7)" rx="2" ry="2" />
<text  x="1044.38" y="335.5" ></text>
</g>
<g >
<title>do_numa_page (176 samples, 0.07%)</title><rect x="14.0" y="229" width="0.8" height="15.0" fill="rgb(231,214,11)" rx="2" ry="2" />
<text  x="16.98" y="239.5" ></text>
</g>
<g >
<title>rmap_walk (59 samples, 0.02%)</title><rect x="14.4" y="165" width="0.3" height="15.0" fill="rgb(220,19,38)" rx="2" ry="2" />
<text  x="17.38" y="175.5" ></text>
</g>
<g >
<title>do_numa_page (376 samples, 0.15%)</title><rect x="1031.1" y="229" width="1.7" height="15.0" fill="rgb(217,16,18)" rx="2" ry="2" />
<text  x="1034.08" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,409 samples, 0.56%)</title><rect x="1026.3" y="277" width="6.6" height="15.0" fill="rgb(253,91,7)" rx="2" ry="2" />
<text  x="1029.26" y="287.5" ></text>
</g>
<g >
<title>futex_wait_setup (150 samples, 0.06%)</title><rect x="951.0" y="197" width="0.7" height="15.0" fill="rgb(250,66,53)" rx="2" ry="2" />
<text  x="954.02" y="207.5" ></text>
</g>
<g >
<title>wake_up_q (708 samples, 0.28%)</title><rect x="941.9" y="213" width="3.3" height="15.0" fill="rgb(231,4,29)" rx="2" ry="2" />
<text  x="944.89" y="223.5" ></text>
</g>
<g >
<title>pthread_spin_lock (260 samples, 0.10%)</title><rect x="1179.3" y="261" width="1.2" height="15.0" fill="rgb(226,67,38)" rx="2" ry="2" />
<text  x="1182.25" y="271.5" ></text>
</g>
<g >
<title>__lll_lock_wait (69 samples, 0.03%)</title><rect x="1011.2" y="293" width="0.3" height="15.0" fill="rgb(251,95,16)" rx="2" ry="2" />
<text  x="1014.22" y="303.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (22 samples, 0.01%)</title><rect x="1032.4" y="197" width="0.1" height="15.0" fill="rgb(231,7,5)" rx="2" ry="2" />
<text  x="1035.39" y="207.5" ></text>
</g>
<g >
<title>change_protection_range (134 samples, 0.05%)</title><rect x="1041.5" y="213" width="0.7" height="15.0" fill="rgb(220,87,17)" rx="2" ry="2" />
<text  x="1044.52" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (282 samples, 0.11%)</title><rect x="13.5" y="293" width="1.3" height="15.0" fill="rgb(221,72,46)" rx="2" ry="2" />
<text  x="16.50" y="303.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (35 samples, 0.01%)</title><rect x="1189.5" y="69" width="0.2" height="15.0" fill="rgb(227,77,17)" rx="2" ry="2" />
<text  x="1192.49" y="79.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (167 samples, 0.07%)</title><rect x="1185.1" y="293" width="0.8" height="15.0" fill="rgb(222,213,3)" rx="2" ry="2" />
<text  x="1188.14" y="303.5" ></text>
</g>
<g >
<title>task_numa_work (134 samples, 0.05%)</title><rect x="1041.5" y="261" width="0.7" height="15.0" fill="rgb(210,172,17)" rx="2" ry="2" />
<text  x="1044.52" y="271.5" ></text>
</g>
<g >
<title>up_read (91 samples, 0.04%)</title><rect x="1032.9" y="277" width="0.4" height="15.0" fill="rgb(253,146,24)" rx="2" ry="2" />
<text  x="1035.91" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait (65 samples, 0.03%)</title><rect x="1171.7" y="309" width="0.3" height="15.0" fill="rgb(216,47,38)" rx="2" ry="2" />
<text  x="1174.69" y="319.5" ></text>
</g>
<g >
<title>change_protection (134 samples, 0.05%)</title><rect x="1041.5" y="229" width="0.7" height="15.0" fill="rgb(253,176,54)" rx="2" ry="2" />
<text  x="1044.52" y="239.5" ></text>
</g>
<g >
<title>plist_add (24 samples, 0.01%)</title><rect x="933.4" y="213" width="0.2" height="15.0" fill="rgb(241,20,16)" rx="2" ry="2" />
<text  x="936.45" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,158 samples, 0.46%)</title><rect x="939.8" y="277" width="5.5" height="15.0" fill="rgb(218,21,46)" rx="2" ry="2" />
<text  x="942.84" y="287.5" ></text>
</g>
<g >
<title>ptep_clear_flush (48 samples, 0.02%)</title><rect x="1189.4" y="133" width="0.3" height="15.0" fill="rgb(212,32,50)" rx="2" ry="2" />
<text  x="1192.45" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::resize (102 samples, 0.04%)</title><rect x="1039.3" y="325" width="0.5" height="15.0" fill="rgb(232,87,51)" rx="2" ry="2" />
<text  x="1042.35" y="335.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (55 samples, 0.02%)</title><rect x="945.3" y="309" width="0.3" height="15.0" fill="rgb(216,58,11)" rx="2" ry="2" />
<text  x="948.30" y="319.5" ></text>
</g>
<g >
<title>do_page_fault (205 samples, 0.08%)</title><rect x="1186.4" y="309" width="0.9" height="15.0" fill="rgb(246,25,29)" rx="2" ry="2" />
<text  x="1189.38" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_futex (247 samples, 0.10%)</title><rect x="932.4" y="261" width="1.2" height="15.0" fill="rgb(210,194,53)" rx="2" ry="2" />
<text  x="935.41" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (35 samples, 0.01%)</title><rect x="1175.5" y="261" width="0.2" height="15.0" fill="rgb(226,41,8)" rx="2" ry="2" />
<text  x="1178.52" y="271.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (23 samples, 0.01%)</title><rect x="11.2" y="341" width="0.1" height="15.0" fill="rgb(226,59,14)" rx="2" ry="2" />
<text  x="14.15" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_free (24 samples, 0.01%)</title><rect x="1187.9" y="309" width="0.2" height="15.0" fill="rgb(218,219,14)" rx="2" ry="2" />
<text  x="1190.94" y="319.5" ></text>
</g>
<g >
<title>do_futex (60 samples, 0.02%)</title><rect x="1012.1" y="229" width="0.3" height="15.0" fill="rgb(241,24,25)" rx="2" ry="2" />
<text  x="1015.12" y="239.5" ></text>
</g>
<g >
<title>get_futex_key (23 samples, 0.01%)</title><rect x="933.1" y="197" width="0.1" height="15.0" fill="rgb(228,153,17)" rx="2" ry="2" />
<text  x="936.14" y="207.5" ></text>
</g>
<g >
<title>migrate_pages (80 samples, 0.03%)</title><rect x="1189.3" y="213" width="0.4" height="15.0" fill="rgb(240,228,21)" rx="2" ry="2" />
<text  x="1192.30" y="223.5" ></text>
</g>
<g >
<title>futex_wake (24 samples, 0.01%)</title><rect x="1175.6" y="213" width="0.1" height="15.0" fill="rgb(219,38,52)" rx="2" ry="2" />
<text  x="1178.57" y="223.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (189 samples, 0.08%)</title><rect x="1033.3" y="325" width="0.9" height="15.0" fill="rgb(232,75,24)" rx="2" ry="2" />
<text  x="1036.34" y="335.5" ></text>
</g>
<g >
<title>task_numa_work (29 samples, 0.01%)</title><rect x="1188.5" y="261" width="0.1" height="15.0" fill="rgb(212,26,36)" rx="2" ry="2" />
<text  x="1191.47" y="271.5" ></text>
</g>
<g >
<title>do_futex (170 samples, 0.07%)</title><rect x="951.0" y="229" width="0.8" height="15.0" fill="rgb(211,192,15)" rx="2" ry="2" />
<text  x="953.96" y="239.5" ></text>
</g>
<g >
<title>migrate_pages (125 samples, 0.05%)</title><rect x="14.1" y="197" width="0.6" height="15.0" fill="rgb(223,71,26)" rx="2" ry="2" />
<text  x="17.07" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_futex (28 samples, 0.01%)</title><rect x="1175.5" y="245" width="0.2" height="15.0" fill="rgb(248,89,9)" rx="2" ry="2" />
<text  x="1178.55" y="255.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (649 samples, 0.26%)</title><rect x="1177.4" y="277" width="3.1" height="15.0" fill="rgb(229,157,25)" rx="2" ry="2" />
<text  x="1180.42" y="287.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (34 samples, 0.01%)</title><rect x="1189.8" y="405" width="0.2" height="15.0" fill="rgb(211,37,39)" rx="2" ry="2" />
<text  x="1192.84" y="415.5" ></text>
</g>
<g >
<title>exit_to_usermode_loop (29 samples, 0.01%)</title><rect x="1188.5" y="293" width="0.1" height="15.0" fill="rgb(228,129,49)" rx="2" ry="2" />
<text  x="1191.47" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.02%)</title><rect x="1011.3" y="277" width="0.2" height="15.0" fill="rgb(235,213,27)" rx="2" ry="2" />
<text  x="1014.31" y="287.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (37 samples, 0.01%)</title><rect x="1189.5" y="85" width="0.2" height="15.0" fill="rgb(214,2,16)" rx="2" ry="2" />
<text  x="1192.48" y="95.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_write (3,321 samples, 1.33%)</title><rect x="1010.6" y="325" width="15.6" height="15.0" fill="rgb(227,64,18)" rx="2" ry="2" />
<text  x="1013.59" y="335.5" ></text>
</g>
<g >
<title>_int_free (23 samples, 0.01%)</title><rect x="1039.2" y="309" width="0.1" height="15.0" fill="rgb(236,34,13)" rx="2" ry="2" />
<text  x="1042.22" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (153 samples, 0.06%)</title><rect x="1173.5" y="277" width="0.7" height="15.0" fill="rgb(227,225,44)" rx="2" ry="2" />
<text  x="1176.51" y="287.5" ></text>
</g>
<g >
<title>prepare_exit_to_usermode (29 samples, 0.01%)</title><rect x="1188.5" y="309" width="0.1" height="15.0" fill="rgb(251,74,46)" rx="2" ry="2" />
<text  x="1191.47" y="319.5" ></text>
</g>
<g >
<title>futex_wait_setup (38 samples, 0.02%)</title><rect x="1011.4" y="197" width="0.1" height="15.0" fill="rgb(218,197,7)" rx="2" ry="2" />
<text  x="1014.36" y="207.5" ></text>
</g>
<g >
<title>_int_free (87 samples, 0.03%)</title><rect x="14.8" y="341" width="0.4" height="15.0" fill="rgb(231,183,25)" rx="2" ry="2" />
<text  x="17.83" y="351.5" ></text>
</g>
<g >
<title>__unqueue_futex (26 samples, 0.01%)</title><rect x="941.7" y="197" width="0.1" height="15.0" fill="rgb(216,67,11)" rx="2" ry="2" />
<text  x="944.72" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (24 samples, 0.01%)</title><rect x="1189.7" y="341" width="0.1" height="15.0" fill="rgb(215,228,9)" rx="2" ry="2" />
<text  x="1192.73" y="351.5" ></text>
</g>
<g >
<title>[rdma_client] (65 samples, 0.03%)</title><rect x="986.7" y="277" width="0.3" height="15.0" fill="rgb(211,109,45)" rx="2" ry="2" />
<text  x="989.73" y="287.5" ></text>
</g>
<g >
<title>page_fault (205 samples, 0.08%)</title><rect x="1186.4" y="325" width="0.9" height="15.0" fill="rgb(230,55,14)" rx="2" ry="2" />
<text  x="1189.38" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (706 samples, 0.28%)</title><rect x="951.8" y="309" width="3.3" height="15.0" fill="rgb(225,229,53)" rx="2" ry="2" />
<text  x="954.76" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (34 samples, 0.01%)</title><rect x="932.6" y="213" width="0.1" height="15.0" fill="rgb(223,103,11)" rx="2" ry="2" />
<text  x="935.55" y="223.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (43 samples, 0.02%)</title><rect x="1189.5" y="101" width="0.2" height="15.0" fill="rgb(231,1,46)" rx="2" ry="2" />
<text  x="1192.47" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (303 samples, 0.12%)</title><rect x="953.7" y="277" width="1.4" height="15.0" fill="rgb(233,154,54)" rx="2" ry="2" />
<text  x="956.66" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_futex (1,112 samples, 0.44%)</title><rect x="940.0" y="261" width="5.3" height="15.0" fill="rgb(206,122,10)" rx="2" ry="2" />
<text  x="943.04" y="271.5" ></text>
</g>
<g >
<title>pthread_spin_init (40 samples, 0.02%)</title><rect x="1015.5" y="277" width="0.2" height="15.0" fill="rgb(238,48,11)" rx="2" ry="2" />
<text  x="1018.52" y="287.5" ></text>
</g>
<g >
<title>change_prot_numa (134 samples, 0.05%)</title><rect x="1041.5" y="245" width="0.7" height="15.0" fill="rgb(252,120,45)" rx="2" ry="2" />
<text  x="1044.52" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (87 samples, 0.03%)</title><rect x="1186.9" y="245" width="0.4" height="15.0" fill="rgb(250,30,46)" rx="2" ry="2" />
<text  x="1189.86" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (47 samples, 0.02%)</title><rect x="1011.3" y="261" width="0.2" height="15.0" fill="rgb(248,229,47)" rx="2" ry="2" />
<text  x="1014.32" y="271.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_write (2,273 samples, 0.91%)</title><rect x="1012.4" y="309" width="10.7" height="15.0" fill="rgb(244,0,1)" rx="2" ry="2" />
<text  x="1015.40" y="319.5" ></text>
</g>
<g >
<title>try_to_unmap_one (51 samples, 0.02%)</title><rect x="1189.4" y="149" width="0.3" height="15.0" fill="rgb(251,5,50)" rx="2" ry="2" />
<text  x="1192.43" y="159.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (3,453 samples, 1.38%)</title><rect x="994.3" y="245" width="16.2" height="15.0" fill="rgb(229,20,52)" rx="2" ry="2" />
<text  x="997.29" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (684 samples, 0.27%)</title><rect x="942.0" y="197" width="3.2" height="15.0" fill="rgb(238,111,11)" rx="2" ry="2" />
<text  x="945.01" y="207.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (4,139 samples, 1.65%)</title><rect x="991.1" y="277" width="19.5" height="15.0" fill="rgb(234,52,11)" rx="2" ry="2" />
<text  x="994.06" y="287.5" ></text>
</g>
<g >
<title>__GI___libc_free (200 samples, 0.08%)</title><rect x="1038.3" y="309" width="0.9" height="15.0" fill="rgb(247,173,14)" rx="2" ry="2" />
<text  x="1041.28" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (55 samples, 0.02%)</title><rect x="945.3" y="277" width="0.3" height="15.0" fill="rgb(229,142,15)" rx="2" ry="2" />
<text  x="948.30" y="287.5" ></text>
</g>
<g >
<title>futex_wait (240 samples, 0.10%)</title><rect x="932.4" y="229" width="1.2" height="15.0" fill="rgb(231,20,9)" rx="2" ry="2" />
<text  x="935.43" y="239.5" ></text>
</g>
<g >
<title>ptep_clear_flush (54 samples, 0.02%)</title><rect x="14.4" y="117" width="0.3" height="15.0" fill="rgb(250,140,39)" rx="2" ry="2" />
<text  x="17.40" y="127.5" ></text>
</g>
<g >
<title>__lock_text_start (99 samples, 0.04%)</title><rect x="1173.8" y="181" width="0.4" height="15.0" fill="rgb(232,1,39)" rx="2" ry="2" />
<text  x="1176.76" y="191.5" ></text>
</g>
<g >
<title>all (250,601 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(215,184,21)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,087 samples, 0.43%)</title><rect x="1034.2" y="325" width="5.1" height="15.0" fill="rgb(235,124,28)" rx="2" ry="2" />
<text  x="1037.23" y="335.5" ></text>
</g>
<g >
<title>get_futex_value_locked (31 samples, 0.01%)</title><rect x="933.2" y="197" width="0.2" height="15.0" fill="rgb(207,8,9)" rx="2" ry="2" />
<text  x="936.25" y="207.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (47 samples, 0.02%)</title><rect x="14.4" y="85" width="0.3" height="15.0" fill="rgb(236,185,2)" rx="2" ry="2" />
<text  x="17.44" y="95.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (539 samples, 0.22%)</title><rect x="1181.3" y="261" width="2.6" height="15.0" fill="rgb(215,164,27)" rx="2" ry="2" />
<text  x="1184.33" y="271.5" ></text>
</g>
<g >
<title>smp_call_function_many (31 samples, 0.01%)</title><rect x="14.5" y="37" width="0.1" height="15.0" fill="rgb(224,193,54)" rx="2" ry="2" />
<text  x="17.48" y="47.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (682 samples, 0.27%)</title><rect x="11.6" y="341" width="3.2" height="15.0" fill="rgb(223,120,39)" rx="2" ry="2" />
<text  x="14.62" y="351.5" ></text>
</g>
<g >
<title>try_to_wake_up (99 samples, 0.04%)</title><rect x="1173.8" y="197" width="0.4" height="15.0" fill="rgb(242,224,8)" rx="2" ry="2" />
<text  x="1176.76" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_futex (40 samples, 0.02%)</title><rect x="1011.4" y="245" width="0.1" height="15.0" fill="rgb(250,53,17)" rx="2" ry="2" />
<text  x="1014.35" y="255.5" ></text>
</g>
<g >
<title>pthread_spin_init (23 samples, 0.01%)</title><rect x="1179.1" y="261" width="0.2" height="15.0" fill="rgb(216,30,51)" rx="2" ry="2" />
<text  x="1182.15" y="271.5" ></text>
</g>
<g >
<title>mlx5dv_open_device (209 samples, 0.08%)</title><rect x="1017.5" y="293" width="0.9" height="15.0" fill="rgb(210,130,10)" rx="2" ry="2" />
<text  x="1020.46" y="303.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (975 samples, 0.39%)</title><rect x="1012.8" y="293" width="4.6" height="15.0" fill="rgb(237,107,45)" rx="2" ry="2" />
<text  x="1015.79" y="303.5" ></text>
</g>
<g >
<title>futex_wait_setup (25 samples, 0.01%)</title><rect x="1171.9" y="213" width="0.1" height="15.0" fill="rgb(213,123,47)" rx="2" ry="2" />
<text  x="1174.86" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (95 samples, 0.04%)</title><rect x="1185.9" y="293" width="0.5" height="15.0" fill="rgb(214,190,39)" rx="2" ry="2" />
<text  x="1188.93" y="303.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (250,567 samples, 99.99%)</title><rect x="10.0" y="357" width="1179.8" height="15.0" fill="rgb(221,70,13)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.02%)</title><rect x="1171.8" y="293" width="0.2" height="15.0" fill="rgb(235,181,10)" rx="2" ry="2" />
<text  x="1174.78" y="303.5" ></text>
</g>
<g >
<title>do_futex (244 samples, 0.10%)</title><rect x="932.4" y="245" width="1.2" height="15.0" fill="rgb(213,18,37)" rx="2" ry="2" />
<text  x="935.42" y="255.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (170 samples, 0.07%)</title><rect x="1174.5" y="309" width="0.8" height="15.0" fill="rgb(211,187,24)" rx="2" ry="2" />
<text  x="1177.46" y="319.5" ></text>
</g>
<g >
<title>do_user_addr_fault (278 samples, 0.11%)</title><rect x="13.5" y="277" width="1.3" height="15.0" fill="rgb(226,152,38)" rx="2" ry="2" />
<text  x="16.50" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (45 samples, 0.02%)</title><rect x="945.3" y="229" width="0.3" height="15.0" fill="rgb(234,182,1)" rx="2" ry="2" />
<text  x="948.35" y="239.5" ></text>
</g>
<g >
<title>pthread_spin_init (114 samples, 0.05%)</title><rect x="978.2" y="261" width="0.5" height="15.0" fill="rgb(236,191,8)" rx="2" ry="2" />
<text  x="981.18" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (155 samples, 0.06%)</title><rect x="1173.5" y="293" width="0.7" height="15.0" fill="rgb(210,117,39)" rx="2" ry="2" />
<text  x="1176.51" y="303.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (89 samples, 0.04%)</title><rect x="1175.3" y="293" width="0.4" height="15.0" fill="rgb(213,117,10)" rx="2" ry="2" />
<text  x="1178.26" y="303.5" ></text>
</g>
<g >
<title>futex_wait (39 samples, 0.02%)</title><rect x="1171.8" y="229" width="0.2" height="15.0" fill="rgb(230,37,10)" rx="2" ry="2" />
<text  x="1174.81" y="239.5" ></text>
</g>
<g >
<title>__do_page_fault (1,507 samples, 0.60%)</title><rect x="1026.2" y="293" width="7.1" height="15.0" fill="rgb(225,140,1)" rx="2" ry="2" />
<text  x="1029.24" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (329 samples, 0.13%)</title><rect x="1039.8" y="325" width="1.6" height="15.0" fill="rgb(237,110,0)" rx="2" ry="2" />
<text  x="1042.83" y="335.5" ></text>
</g>
<g >
<title>should_numa_migrate_memory (23 samples, 0.01%)</title><rect x="1032.6" y="197" width="0.1" height="15.0" fill="rgb(227,97,12)" rx="2" ry="2" />
<text  x="1035.60" y="207.5" ></text>
</g>
<g >
<title>do_numa_page (54 samples, 0.02%)</title><rect x="1187.0" y="229" width="0.3" height="15.0" fill="rgb(242,223,41)" rx="2" ry="2" />
<text  x="1190.02" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (60 samples, 0.02%)</title><rect x="1012.1" y="245" width="0.3" height="15.0" fill="rgb(227,17,49)" rx="2" ry="2" />
<text  x="1015.12" y="255.5" ></text>
</g>
<g >
<title>change_protection (29 samples, 0.01%)</title><rect x="1188.5" y="229" width="0.1" height="15.0" fill="rgb(219,157,3)" rx="2" ry="2" />
<text  x="1191.47" y="239.5" ></text>
</g>
<g >
<title>do_futex (27 samples, 0.01%)</title><rect x="1175.6" y="229" width="0.1" height="15.0" fill="rgb(244,153,34)" rx="2" ry="2" />
<text  x="1178.55" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (190 samples, 0.08%)</title><rect x="1186.4" y="277" width="0.9" height="15.0" fill="rgb(205,129,13)" rx="2" ry="2" />
<text  x="1189.38" y="287.5" ></text>
</g>
</g>
</svg>
