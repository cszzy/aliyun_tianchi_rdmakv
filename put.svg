<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="582" onload="init(evt)" viewBox="0 0 1200 582" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="582.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="565" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="565" > </text>
<g id="frames">
<g >
<title>[rdma_client] (158 samples, 0.04%)</title><rect x="923.8" y="325" width="0.5" height="15.0" fill="rgb(238,0,7)" rx="2" ry="2" />
<text  x="926.82" y="335.5" ></text>
</g>
<g >
<title>move_to_new_page (40 samples, 0.01%)</title><rect x="1173.4" y="181" width="0.1" height="15.0" fill="rgb(241,66,37)" rx="2" ry="2" />
<text  x="1176.36" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2,059 samples, 0.55%)</title><rect x="892.2" y="277" width="6.6" height="15.0" fill="rgb(233,182,15)" rx="2" ry="2" />
<text  x="895.24" y="287.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;int&gt;::fetch_add (758 samples, 0.20%)</title><rect x="1175.7" y="341" width="2.4" height="15.0" fill="rgb(249,176,40)" rx="2" ry="2" />
<text  x="1178.73" y="351.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (137 samples, 0.04%)</title><rect x="1181.9" y="469" width="0.4" height="15.0" fill="rgb(241,107,46)" rx="2" ry="2" />
<text  x="1184.85" y="479.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (35 samples, 0.01%)</title><rect x="415.8" y="213" width="0.1" height="15.0" fill="rgb(234,47,54)" rx="2" ry="2" />
<text  x="418.78" y="223.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (4,405 samples, 1.18%)</title><rect x="846.3" y="325" width="13.9" height="15.0" fill="rgb(240,122,22)" rx="2" ry="2" />
<text  x="849.27" y="335.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::find (987 samples, 0.26%)</title><rect x="833.5" y="309" width="3.2" height="15.0" fill="rgb(211,185,34)" rx="2" ry="2" />
<text  x="836.54" y="319.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (210 samples, 0.06%)</title><rect x="453.2" y="101" width="0.6" height="15.0" fill="rgb(223,1,37)" rx="2" ry="2" />
<text  x="456.15" y="111.5" ></text>
</g>
<g >
<title>get_futex_key (52 samples, 0.01%)</title><rect x="852.8" y="165" width="0.2" height="15.0" fill="rgb(237,76,30)" rx="2" ry="2" />
<text  x="855.82" y="175.5" ></text>
</g>
<g >
<title>std::mutex::unlock (183 samples, 0.05%)</title><rect x="402.8" y="277" width="0.6" height="15.0" fill="rgb(242,6,9)" rx="2" ry="2" />
<text  x="405.84" y="287.5" ></text>
</g>
<g >
<title>plist_add (145 samples, 0.04%)</title><rect x="616.7" y="101" width="0.4" height="15.0" fill="rgb(242,15,54)" rx="2" ry="2" />
<text  x="619.69" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (1,904 samples, 0.51%)</title><rect x="878.6" y="277" width="6.0" height="15.0" fill="rgb(211,29,4)" rx="2" ry="2" />
<text  x="881.59" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (73 samples, 0.02%)</title><rect x="838.5" y="213" width="0.2" height="15.0" fill="rgb(242,59,19)" rx="2" ry="2" />
<text  x="841.47" y="223.5" ></text>
</g>
<g >
<title>__GI___libc_free (248 samples, 0.07%)</title><rect x="418.1" y="181" width="0.8" height="15.0" fill="rgb(237,76,1)" rx="2" ry="2" />
<text  x="421.13" y="191.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, void&gt; (406 samples, 0.11%)</title><rect x="377.4" y="213" width="1.2" height="15.0" fill="rgb(236,98,7)" rx="2" ry="2" />
<text  x="380.36" y="223.5" ></text>
</g>
<g >
<title>__GI___clone (369,476 samples, 99.10%)</title><rect x="10.0" y="501" width="1169.3" height="15.0" fill="rgb(241,70,14)" rx="2" ry="2" />
<text  x="13.01" y="511.5" >__GI___clone</text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::front (346 samples, 0.09%)</title><rect x="25.7" y="245" width="1.1" height="15.0" fill="rgb(252,65,16)" rx="2" ry="2" />
<text  x="28.73" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (140 samples, 0.04%)</title><rect x="885.6" y="245" width="0.4" height="15.0" fill="rgb(225,88,21)" rx="2" ry="2" />
<text  x="888.58" y="255.5" ></text>
</g>
<g >
<title>get_futex_key (454 samples, 0.12%)</title><rect x="612.0" y="85" width="1.5" height="15.0" fill="rgb(216,196,47)" rx="2" ry="2" />
<text  x="615.02" y="95.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::operator[] (846 samples, 0.23%)</title><rect x="836.7" y="309" width="2.6" height="15.0" fill="rgb(227,213,0)" rx="2" ry="2" />
<text  x="839.66" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock (129 samples, 0.03%)</title><rect x="1174.6" y="181" width="0.4" height="15.0" fill="rgb(250,110,34)" rx="2" ry="2" />
<text  x="1177.62" y="191.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_write (37,764 samples, 10.13%)</title><rect x="280.7" y="261" width="119.5" height="15.0" fill="rgb(250,68,27)" rx="2" ry="2" />
<text  x="283.72" y="271.5" >kv::RDMAConnec..</text>
</g>
<g >
<title>__x64_sys_futex (17,855 samples, 4.79%)</title><rect x="497.9" y="149" width="56.5" height="15.0" fill="rgb(239,109,38)" rx="2" ry="2" />
<text  x="500.94" y="159.5" >__x64..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (54 samples, 0.01%)</title><rect x="886.3" y="293" width="0.2" height="15.0" fill="rgb(212,22,21)" rx="2" ry="2" />
<text  x="889.35" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::_M_deallocate_node (740 samples, 0.20%)</title><rect x="417.3" y="245" width="2.4" height="15.0" fill="rgb(251,11,41)" rx="2" ry="2" />
<text  x="420.34" y="255.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_deallocate_node (47 samples, 0.01%)</title><rect x="440.1" y="229" width="0.1" height="15.0" fill="rgb(208,129,45)" rx="2" ry="2" />
<text  x="443.05" y="239.5" ></text>
</g>
<g >
<title>futex_wait_setup (12,810 samples, 3.44%)</title><rect x="575.9" y="101" width="40.5" height="15.0" fill="rgb(223,67,30)" rx="2" ry="2" />
<text  x="578.89" y="111.5" >fut..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (119 samples, 0.03%)</title><rect x="1186.7" y="485" width="0.3" height="15.0" fill="rgb(252,65,50)" rx="2" ry="2" />
<text  x="1189.66" y="495.5" ></text>
</g>
<g >
<title>kv::hash_map_t::find (41 samples, 0.01%)</title><rect x="1183.2" y="501" width="0.1" height="15.0" fill="rgb(239,67,49)" rx="2" ry="2" />
<text  x="1186.17" y="511.5" ></text>
</g>
<g >
<title>std::mutex::lock (17,095 samples, 4.58%)</title><rect x="141.8" y="229" width="54.1" height="15.0" fill="rgb(252,96,35)" rx="2" ry="2" />
<text  x="144.76" y="239.5" >std::..</text>
</g>
<g >
<title>plist_add (145 samples, 0.04%)</title><rect x="79.1" y="85" width="0.4" height="15.0" fill="rgb(215,87,49)" rx="2" ry="2" />
<text  x="82.05" y="95.5" ></text>
</g>
<g >
<title>hash_futex (53 samples, 0.01%)</title><rect x="139.2" y="101" width="0.1" height="15.0" fill="rgb(254,184,44)" rx="2" ry="2" />
<text  x="142.16" y="111.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (175 samples, 0.05%)</title><rect x="1172.3" y="197" width="0.5" height="15.0" fill="rgb(219,81,28)" rx="2" ry="2" />
<text  x="1175.27" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (58 samples, 0.02%)</title><rect x="410.7" y="261" width="0.2" height="15.0" fill="rgb(219,72,13)" rx="2" ry="2" />
<text  x="413.67" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (153 samples, 0.04%)</title><rect x="1178.1" y="341" width="0.5" height="15.0" fill="rgb(249,202,37)" rx="2" ry="2" />
<text  x="1181.14" y="351.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (49 samples, 0.01%)</title><rect x="913.3" y="293" width="0.1" height="15.0" fill="rgb(219,28,12)" rx="2" ry="2" />
<text  x="916.29" y="303.5" ></text>
</g>
<g >
<title>ibv_post_send (3,991 samples, 1.07%)</title><rect x="326.4" y="245" width="12.7" height="15.0" fill="rgb(229,53,19)" rx="2" ry="2" />
<text  x="329.44" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (44 samples, 0.01%)</title><rect x="141.1" y="149" width="0.1" height="15.0" fill="rgb(211,110,54)" rx="2" ry="2" />
<text  x="144.07" y="159.5" ></text>
</g>
<g >
<title>std::__invoke&lt;main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="405" width="1169.3" height="15.0" fill="rgb(242,0,12)" rx="2" ry="2" />
<text  x="13.01" y="415.5" >std::__invoke&lt;main::{lambda</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (943 samples, 0.25%)</title><rect x="898.8" y="325" width="3.0" height="15.0" fill="rgb(216,183,25)" rx="2" ry="2" />
<text  x="901.78" y="335.5" ></text>
</g>
<g >
<title>__unqueue_futex (288 samples, 0.08%)</title><rect x="541.5" y="85" width="0.9" height="15.0" fill="rgb(246,123,29)" rx="2" ry="2" />
<text  x="544.51" y="95.5" ></text>
</g>
<g >
<title>get_futex_key (379 samples, 0.10%)</title><rect x="125.5" y="85" width="1.2" height="15.0" fill="rgb(240,201,49)" rx="2" ry="2" />
<text  x="128.51" y="95.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::construct&lt;kv::RDMAConnection*, kv::RDMAConnection* const&amp;&gt; (70 samples, 0.02%)</title><rect x="556.2" y="229" width="0.2" height="15.0" fill="rgb(224,208,0)" rx="2" ry="2" />
<text  x="559.19" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_pop_front_aux (73 samples, 0.02%)</title><rect x="28.0" y="229" width="0.2" height="15.0" fill="rgb(239,130,9)" rx="2" ry="2" />
<text  x="31.01" y="239.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::empty (711 samples, 0.19%)</title><rect x="435.1" y="261" width="2.3" height="15.0" fill="rgb(211,171,40)" rx="2" ry="2" />
<text  x="438.11" y="271.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (411 samples, 0.11%)</title><rect x="875.3" y="229" width="1.3" height="15.0" fill="rgb(223,107,51)" rx="2" ry="2" />
<text  x="878.32" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (2,193 samples, 0.59%)</title><rect x="902.8" y="293" width="7.0" height="15.0" fill="rgb(234,180,53)" rx="2" ry="2" />
<text  x="905.84" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (3,527 samples, 0.95%)</title><rect x="865.6" y="277" width="11.1" height="15.0" fill="rgb(225,134,24)" rx="2" ry="2" />
<text  x="868.59" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (284 samples, 0.08%)</title><rect x="901.9" y="293" width="0.9" height="15.0" fill="rgb(212,145,7)" rx="2" ry="2" />
<text  x="904.94" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::ListNode*&gt; &gt;::deallocate (40 samples, 0.01%)</title><rect x="427.3" y="245" width="0.1" height="15.0" fill="rgb(210,208,11)" rx="2" ry="2" />
<text  x="430.28" y="255.5" ></text>
</g>
<g >
<title>__unqueue_futex (277 samples, 0.07%)</title><rect x="248.3" y="69" width="0.9" height="15.0" fill="rgb(250,157,8)" rx="2" ry="2" />
<text  x="251.35" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (50 samples, 0.01%)</title><rect x="887.1" y="277" width="0.2" height="15.0" fill="rgb(244,158,54)" rx="2" ry="2" />
<text  x="890.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (39 samples, 0.01%)</title><rect x="906.1" y="197" width="0.1" height="15.0" fill="rgb(222,81,53)" rx="2" ry="2" />
<text  x="909.10" y="207.5" ></text>
</g>
<g >
<title>hash_futex (69 samples, 0.02%)</title><rect x="258.9" y="101" width="0.2" height="15.0" fill="rgb(251,102,1)" rx="2" ry="2" />
<text  x="261.93" y="111.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, kv::ListNode*&gt; (57 samples, 0.02%)</title><rect x="875.1" y="213" width="0.2" height="15.0" fill="rgb(254,107,5)" rx="2" ry="2" />
<text  x="878.14" y="223.5" ></text>
</g>
<g >
<title>std::mutex::unlock (937 samples, 0.25%)</title><rect x="898.8" y="309" width="3.0" height="15.0" fill="rgb(227,5,52)" rx="2" ry="2" />
<text  x="901.80" y="319.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, unsigned int&gt; (59 samples, 0.02%)</title><rect x="406.4" y="181" width="0.2" height="15.0" fill="rgb(232,98,6)" rx="2" ry="2" />
<text  x="409.38" y="191.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (539 samples, 0.14%)</title><rect x="415.3" y="245" width="1.7" height="15.0" fill="rgb(249,34,20)" rx="2" ry="2" />
<text  x="418.31" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,774 samples, 0.74%)</title><rect x="669.2" y="85" width="8.8" height="15.0" fill="rgb(235,29,19)" rx="2" ry="2" />
<text  x="672.20" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock (675 samples, 0.18%)</title><rect x="85.2" y="101" width="2.1" height="15.0" fill="rgb(206,191,9)" rx="2" ry="2" />
<text  x="88.17" y="111.5" ></text>
</g>
<g >
<title>futex_wake (16,332 samples, 4.38%)</title><rect x="207.2" y="101" width="51.7" height="15.0" fill="rgb(213,172,23)" rx="2" ry="2" />
<text  x="210.22" y="111.5" >futex..</text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_read (39,332 samples, 10.55%)</title><rect x="705.7" y="277" width="124.5" height="15.0" fill="rgb(218,98,51)" rx="2" ry="2" />
<text  x="708.69" y="287.5" >kv::RDMAConnect..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (1,350 samples, 0.36%)</title><rect x="403.6" y="277" width="4.3" height="15.0" fill="rgb(222,99,36)" rx="2" ry="2" />
<text  x="406.60" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (726 samples, 0.19%)</title><rect x="204.9" y="101" width="2.3" height="15.0" fill="rgb(252,13,25)" rx="2" ry="2" />
<text  x="207.89" y="111.5" ></text>
</g>
<g >
<title>pthread_spin_lock (3,215 samples, 0.86%)</title><rect x="316.3" y="213" width="10.1" height="15.0" fill="rgb(223,85,50)" rx="2" ry="2" />
<text  x="319.27" y="223.5" ></text>
</g>
<g >
<title>futex_wait_setup (11,768 samples, 3.16%)</title><rect x="41.5" y="85" width="37.3" height="15.0" fill="rgb(228,98,22)" rx="2" ry="2" />
<text  x="44.55" y="95.5" >fut..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (4,321 samples, 1.16%)</title><rect x="846.5" y="277" width="13.7" height="15.0" fill="rgb(233,47,34)" rx="2" ry="2" />
<text  x="849.52" y="287.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (18,871 samples, 5.06%)</title><rect x="79.7" y="245" width="59.7" height="15.0" fill="rgb(250,95,50)" rx="2" ry="2" />
<text  x="82.70" y="255.5" >std::u..</text>
</g>
<g >
<title>std::_Deque_base&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::_M_allocate_node (54 samples, 0.01%)</title><rect x="412.3" y="261" width="0.2" height="15.0" fill="rgb(227,57,41)" rx="2" ry="2" />
<text  x="415.31" y="271.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,165 samples, 0.58%)</title><rect x="839.4" y="325" width="6.9" height="15.0" fill="rgb(231,17,9)" rx="2" ry="2" />
<text  x="842.42" y="335.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (169 samples, 0.05%)</title><rect x="1173.7" y="101" width="0.6" height="15.0" fill="rgb(221,43,22)" rx="2" ry="2" />
<text  x="1176.75" y="111.5" ></text>
</g>
<g >
<title>plist_add (131 samples, 0.04%)</title><rect x="491.8" y="101" width="0.4" height="15.0" fill="rgb(207,95,25)" rx="2" ry="2" />
<text  x="494.80" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::deallocate (409 samples, 0.11%)</title><rect x="417.9" y="213" width="1.3" height="15.0" fill="rgb(219,196,41)" rx="2" ry="2" />
<text  x="420.91" y="223.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_read (125,951 samples, 33.78%)</title><rect x="431.6" y="309" width="398.6" height="15.0" fill="rgb(221,109,46)" rx="2" ry="2" />
<text  x="434.55" y="319.5" >kv::ConnectionManager::remote_read</text>
</g>
<g >
<title>migration_entry_wait (167 samples, 0.04%)</title><rect x="1174.6" y="213" width="0.5" height="15.0" fill="rgb(216,4,22)" rx="2" ry="2" />
<text  x="1177.56" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (227 samples, 0.06%)</title><rect x="19.0" y="325" width="0.7" height="15.0" fill="rgb(232,9,40)" rx="2" ry="2" />
<text  x="22.02" y="335.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::ListNode*, std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt; &gt;::front (118 samples, 0.03%)</title><rect x="426.7" y="309" width="0.3" height="15.0" fill="rgb(233,213,51)" rx="2" ry="2" />
<text  x="429.66" y="319.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (744 samples, 0.20%)</title><rect x="405.2" y="245" width="2.4" height="15.0" fill="rgb(231,163,15)" rx="2" ry="2" />
<text  x="408.23" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_futex (39 samples, 0.01%)</title><rect x="203.7" y="149" width="0.1" height="15.0" fill="rgb(249,48,16)" rx="2" ry="2" />
<text  x="206.68" y="159.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_push_back_aux&lt;kv::RDMAConnection* const&amp;&gt; (113 samples, 0.03%)</title><rect x="556.4" y="245" width="0.4" height="15.0" fill="rgb(229,227,33)" rx="2" ry="2" />
<text  x="559.45" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (130 samples, 0.03%)</title><rect x="882.9" y="229" width="0.4" height="15.0" fill="rgb(241,154,52)" rx="2" ry="2" />
<text  x="885.94" y="239.5" ></text>
</g>
<g >
<title>do_futex (13,527 samples, 3.63%)</title><rect x="153.0" y="117" width="42.8" height="15.0" fill="rgb(231,81,32)" rx="2" ry="2" />
<text  x="156.00" y="127.5" >do_f..</text>
</g>
<g >
<title>do_futex (13,715 samples, 3.68%)</title><rect x="573.8" y="133" width="43.4" height="15.0" fill="rgb(253,0,19)" rx="2" ry="2" />
<text  x="576.77" y="143.5" >do_f..</text>
</g>
<g >
<title>__GI___libc_malloc (49 samples, 0.01%)</title><rect x="556.5" y="165" width="0.1" height="15.0" fill="rgb(219,125,43)" rx="2" ry="2" />
<text  x="559.47" y="175.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (33 samples, 0.01%)</title><rect x="1172.8" y="197" width="0.1" height="15.0" fill="rgb(236,167,39)" rx="2" ry="2" />
<text  x="1175.83" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;&amp;&gt; (39 samples, 0.01%)</title><rect x="421.0" y="197" width="0.1" height="15.0" fill="rgb(250,78,28)" rx="2" ry="2" />
<text  x="423.98" y="207.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::empty (725 samples, 0.19%)</title><rect x="435.1" y="277" width="2.3" height="15.0" fill="rgb(250,157,5)" rx="2" ry="2" />
<text  x="438.07" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false, false&gt;::_Node_iterator (46 samples, 0.01%)</title><rect x="860.4" y="293" width="0.2" height="15.0" fill="rgb(217,227,14)" rx="2" ry="2" />
<text  x="863.44" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (417 samples, 0.11%)</title><rect x="409.4" y="245" width="1.3" height="15.0" fill="rgb(220,110,13)" rx="2" ry="2" />
<text  x="412.35" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::begin (313 samples, 0.08%)</title><rect x="25.8" y="229" width="1.0" height="15.0" fill="rgb(244,28,48)" rx="2" ry="2" />
<text  x="28.83" y="239.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (18,927 samples, 5.08%)</title><rect x="557.4" y="261" width="59.9" height="15.0" fill="rgb(216,102,45)" rx="2" ry="2" />
<text  x="560.38" y="271.5" >std::u..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (19,645 samples, 5.27%)</title><rect x="492.3" y="277" width="62.2" height="15.0" fill="rgb(221,217,3)" rx="2" ry="2" />
<text  x="495.30" y="287.5" >std::u..</text>
</g>
<g >
<title>unlock_page (60 samples, 0.02%)</title><rect x="1174.3" y="181" width="0.2" height="15.0" fill="rgb(227,197,20)" rx="2" ry="2" />
<text  x="1177.29" y="191.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (40 samples, 0.01%)</title><rect x="845.9" y="133" width="0.1" height="15.0" fill="rgb(207,31,14)" rx="2" ry="2" />
<text  x="848.86" y="143.5" ></text>
</g>
<g >
<title>do_page_fault (1,267 samples, 0.34%)</title><rect x="1171.3" y="309" width="4.0" height="15.0" fill="rgb(247,10,5)" rx="2" ry="2" />
<text  x="1174.30" y="319.5" ></text>
</g>
<g >
<title>get_futex_key (436 samples, 0.12%)</title><rect x="74.6" y="69" width="1.3" height="15.0" fill="rgb(245,181,21)" rx="2" ry="2" />
<text  x="77.57" y="79.5" ></text>
</g>
<g >
<title>hash_futex (66 samples, 0.02%)</title><rect x="78.8" y="85" width="0.3" height="15.0" fill="rgb(238,96,34)" rx="2" ry="2" />
<text  x="81.84" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (58 samples, 0.02%)</title><rect x="410.9" y="245" width="0.2" height="15.0" fill="rgb(254,127,13)" rx="2" ry="2" />
<text  x="413.87" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (50 samples, 0.01%)</title><rect x="884.0" y="213" width="0.2" height="15.0" fill="rgb(220,33,29)" rx="2" ry="2" />
<text  x="887.03" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_ebo_helper&lt;0, std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt;, true&gt;::_S_get (40 samples, 0.01%)</title><rect x="887.4" y="261" width="0.1" height="15.0" fill="rgb(214,128,42)" rx="2" ry="2" />
<text  x="890.41" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (45 samples, 0.01%)</title><rect x="1186.5" y="501" width="0.1" height="15.0" fill="rgb(233,11,22)" rx="2" ry="2" />
<text  x="1189.48" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (43 samples, 0.01%)</title><rect x="410.9" y="229" width="0.2" height="15.0" fill="rgb(217,153,30)" rx="2" ry="2" />
<text  x="413.92" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (19,864 samples, 5.33%)</title><rect x="196.3" y="181" width="62.9" height="15.0" fill="rgb(235,37,50)" rx="2" ry="2" />
<text  x="199.33" y="191.5" >__pthr..</text>
</g>
<g >
<title>__gthread_mutex_lock (17,051 samples, 4.57%)</title><rect x="141.9" y="213" width="54.0" height="15.0" fill="rgb(213,32,50)" rx="2" ry="2" />
<text  x="144.90" y="223.5" >__gth..</text>
</g>
<g >
<title>std::_Deque_iterator&lt;kv::ListNode*, kv::ListNode*&amp;, kv::ListNode**&gt;::_Deque_iterator (58 samples, 0.02%)</title><rect x="426.9" y="261" width="0.1" height="15.0" fill="rgb(239,62,19)" rx="2" ry="2" />
<text  x="429.85" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::construct&lt;kv::RDMAConnection*, kv::RDMAConnection* const&amp;&gt; (102 samples, 0.03%)</title><rect x="556.1" y="245" width="0.3" height="15.0" fill="rgb(226,111,44)" rx="2" ry="2" />
<text  x="559.12" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="389" width="1169.3" height="15.0" fill="rgb(245,77,49)" rx="2" ry="2" />
<text  x="13.01" y="399.5" >std::__invoke_impl&lt;void, main::{lambda</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, void&gt; (411 samples, 0.11%)</title><rect x="806.8" y="229" width="1.3" height="15.0" fill="rgb(244,68,30)" rx="2" ry="2" />
<text  x="809.78" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (18,747 samples, 5.03%)</title><rect x="557.9" y="229" width="59.4" height="15.0" fill="rgb(208,87,36)" rx="2" ry="2" />
<text  x="560.95" y="239.5" >__gthr..</text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (311 samples, 0.08%)</title><rect x="539.3" y="85" width="1.0" height="15.0" fill="rgb(248,33,39)" rx="2" ry="2" />
<text  x="542.31" y="95.5" ></text>
</g>
<g >
<title>std::mutex::lock (611 samples, 0.16%)</title><rect x="830.8" y="293" width="1.9" height="15.0" fill="rgb(242,22,3)" rx="2" ry="2" />
<text  x="833.76" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_eq (35 samples, 0.01%)</title><rect x="422.3" y="229" width="0.1" height="15.0" fill="rgb(240,137,23)" rx="2" ry="2" />
<text  x="425.26" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13,570 samples, 3.64%)</title><rect x="152.9" y="133" width="42.9" height="15.0" fill="rgb(251,31,24)" rx="2" ry="2" />
<text  x="155.88" y="143.5" >__x6..</text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::push_back (598 samples, 0.16%)</title><rect x="554.9" y="261" width="1.9" height="15.0" fill="rgb(242,153,4)" rx="2" ry="2" />
<text  x="557.91" y="271.5" ></text>
</g>
<g >
<title>TestKey::to_string[abi:cxx11] (322 samples, 0.09%)</title><rect x="11.4" y="357" width="1.0" height="15.0" fill="rgb(233,71,12)" rx="2" ry="2" />
<text  x="14.40" y="367.5" ></text>
</g>
<g >
<title>try_to_unmap_one (57 samples, 0.02%)</title><rect x="1178.9" y="165" width="0.2" height="15.0" fill="rgb(245,200,45)" rx="2" ry="2" />
<text  x="1181.94" y="175.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (584 samples, 0.16%)</title><rect x="830.8" y="277" width="1.9" height="15.0" fill="rgb(229,208,1)" rx="2" ry="2" />
<text  x="833.85" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (104 samples, 0.03%)</title><rect x="874.2" y="229" width="0.3" height="15.0" fill="rgb(215,156,26)" rx="2" ry="2" />
<text  x="877.18" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (51 samples, 0.01%)</title><rect x="1186.1" y="501" width="0.1" height="15.0" fill="rgb(238,9,44)" rx="2" ry="2" />
<text  x="1189.07" y="511.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (19,142 samples, 5.13%)</title><rect x="617.7" y="197" width="60.6" height="15.0" fill="rgb(213,80,27)" rx="2" ry="2" />
<text  x="620.72" y="207.5" >__pthr..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_state (32 samples, 0.01%)</title><rect x="886.2" y="277" width="0.1" height="15.0" fill="rgb(228,208,32)" rx="2" ry="2" />
<text  x="889.25" y="287.5" ></text>
</g>
<g >
<title>try_to_unmap (193 samples, 0.05%)</title><rect x="1173.7" y="181" width="0.6" height="15.0" fill="rgb(249,108,34)" rx="2" ry="2" />
<text  x="1176.68" y="191.5" ></text>
</g>
<g >
<title>do_page_fault (152 samples, 0.04%)</title><rect x="1178.7" y="341" width="0.5" height="15.0" fill="rgb(234,45,17)" rx="2" ry="2" />
<text  x="1181.71" y="351.5" ></text>
</g>
<g >
<title>start_thread (369,476 samples, 99.10%)</title><rect x="10.0" y="485" width="1169.3" height="15.0" fill="rgb(222,183,4)" rx="2" ry="2" />
<text  x="13.01" y="495.5" >start_thread</text>
</g>
<g >
<title>operator new (53 samples, 0.01%)</title><rect x="412.3" y="213" width="0.2" height="15.0" fill="rgb(232,124,6)" rx="2" ry="2" />
<text  x="415.31" y="223.5" ></text>
</g>
<g >
<title>kv::RDMAMemPool::get_rkey (3,418 samples, 0.92%)</title><rect x="400.2" y="309" width="10.9" height="15.0" fill="rgb(222,59,20)" rx="2" ry="2" />
<text  x="403.24" y="319.5" ></text>
</g>
<g >
<title>do_futex (12,734 samples, 3.42%)</title><rect x="451.9" y="133" width="40.3" height="15.0" fill="rgb(247,172,25)" rx="2" ry="2" />
<text  x="454.93" y="143.5" >do_..</text>
</g>
<g >
<title>std::__pair_get&lt;0ul&gt;::__get&lt;unsigned long const, unsigned int&gt; (44 samples, 0.01%)</title><rect x="406.4" y="165" width="0.2" height="15.0" fill="rgb(245,42,30)" rx="2" ry="2" />
<text  x="409.43" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (238 samples, 0.06%)</title><rect x="11.6" y="341" width="0.8" height="15.0" fill="rgb(212,163,49)" rx="2" ry="2" />
<text  x="14.62" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,168 samples, 0.85%)</title><rect x="850.2" y="229" width="10.0" height="15.0" fill="rgb(249,25,34)" rx="2" ry="2" />
<text  x="853.17" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (77 samples, 0.02%)</title><rect x="901.5" y="245" width="0.2" height="15.0" fill="rgb(220,68,4)" rx="2" ry="2" />
<text  x="904.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (60 samples, 0.02%)</title><rect x="874.8" y="229" width="0.2" height="15.0" fill="rgb(247,76,33)" rx="2" ry="2" />
<text  x="877.83" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::pop (448 samples, 0.12%)</title><rect x="26.8" y="261" width="1.4" height="15.0" fill="rgb(236,96,37)" rx="2" ry="2" />
<text  x="29.82" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9,530 samples, 2.56%)</title><rect x="581.9" y="85" width="30.1" height="15.0" fill="rgb(224,16,26)" rx="2" ry="2" />
<text  x="584.85" y="95.5" >_r..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (19,497 samples, 5.23%)</title><rect x="492.8" y="197" width="61.7" height="15.0" fill="rgb(235,34,1)" rx="2" ry="2" />
<text  x="495.76" y="207.5" >__pthr..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (282 samples, 0.08%)</title><rect x="883.7" y="261" width="0.9" height="15.0" fill="rgb(228,13,49)" rx="2" ry="2" />
<text  x="886.72" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,405 samples, 2.79%)</title><rect x="633.0" y="101" width="32.9" height="15.0" fill="rgb(206,206,47)" rx="2" ry="2" />
<text  x="635.98" y="111.5" >_r..</text>
</g>
<g >
<title>mark_wake_futex (531 samples, 0.14%)</title><rect x="667.2" y="101" width="1.7" height="15.0" fill="rgb(246,125,36)" rx="2" ry="2" />
<text  x="670.20" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.01%)</title><rect x="898.6" y="245" width="0.2" height="15.0" fill="rgb(229,40,30)" rx="2" ry="2" />
<text  x="901.65" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (37 samples, 0.01%)</title><rect x="874.9" y="213" width="0.1" height="15.0" fill="rgb(209,10,53)" rx="2" ry="2" />
<text  x="877.90" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (683 samples, 0.18%)</title><rect x="874.6" y="261" width="2.1" height="15.0" fill="rgb(251,97,14)" rx="2" ry="2" />
<text  x="877.59" y="271.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (7,840 samples, 2.10%)</title><rect x="769.7" y="245" width="24.8" height="15.0" fill="rgb(219,78,20)" rx="2" ry="2" />
<text  x="772.71" y="255.5" >_..</text>
</g>
<g >
<title>std::mutex::lock (2,119 samples, 0.57%)</title><rect x="839.6" y="309" width="6.7" height="15.0" fill="rgb(211,60,44)" rx="2" ry="2" />
<text  x="842.57" y="319.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::push (562 samples, 0.15%)</title><rect x="139.6" y="261" width="1.8" height="15.0" fill="rgb(242,184,38)" rx="2" ry="2" />
<text  x="142.61" y="271.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (102 samples, 0.03%)</title><rect x="1164.2" y="309" width="0.3" height="15.0" fill="rgb(221,61,8)" rx="2" ry="2" />
<text  x="1167.19" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (990 samples, 0.27%)</title><rect x="1172.0" y="245" width="3.1" height="15.0" fill="rgb(222,91,7)" rx="2" ry="2" />
<text  x="1174.96" y="255.5" ></text>
</g>
<g >
<title>std::__deque_buf_size (110 samples, 0.03%)</title><rect x="430.9" y="245" width="0.4" height="15.0" fill="rgb(243,58,16)" rx="2" ry="2" />
<text  x="433.91" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (106 samples, 0.03%)</title><rect x="873.4" y="213" width="0.3" height="15.0" fill="rgb(229,75,24)" rx="2" ry="2" />
<text  x="876.39" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::allocate (46 samples, 0.01%)</title><rect x="141.1" y="197" width="0.1" height="15.0" fill="rgb(252,87,5)" rx="2" ry="2" />
<text  x="144.07" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (123 samples, 0.03%)</title><rect x="837.2" y="245" width="0.4" height="15.0" fill="rgb(215,144,6)" rx="2" ry="2" />
<text  x="840.23" y="255.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, unsigned int&gt; (54 samples, 0.01%)</title><rect x="410.3" y="181" width="0.1" height="15.0" fill="rgb(221,133,8)" rx="2" ry="2" />
<text  x="413.26" y="191.5" ></text>
</g>
<g >
<title>page_vma_mapped_walk (35 samples, 0.01%)</title><rect x="1173.6" y="117" width="0.1" height="15.0" fill="rgb(237,138,36)" rx="2" ry="2" />
<text  x="1176.57" y="127.5" ></text>
</g>
<g >
<title>std::forward&lt;std::tuple&lt;unsigned long const&amp;&gt; &gt; (59 samples, 0.02%)</title><rect x="891.0" y="261" width="0.2" height="15.0" fill="rgb(233,187,26)" rx="2" ry="2" />
<text  x="894.05" y="271.5" ></text>
</g>
<g >
<title>kv::RDMAMemPool::get_rkey (2,898 samples, 0.78%)</title><rect x="830.2" y="325" width="9.1" height="15.0" fill="rgb(222,141,12)" rx="2" ry="2" />
<text  x="833.17" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (90 samples, 0.02%)</title><rect x="860.3" y="309" width="0.3" height="15.0" fill="rgb(234,36,30)" rx="2" ry="2" />
<text  x="863.30" y="319.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (2,014 samples, 0.54%)</title><rect x="839.9" y="277" width="6.3" height="15.0" fill="rgb(218,48,22)" rx="2" ry="2" />
<text  x="842.87" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::construct&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (668 samples, 0.18%)</title><rect x="889.1" y="277" width="2.1" height="15.0" fill="rgb(225,52,23)" rx="2" ry="2" />
<text  x="892.12" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (47 samples, 0.01%)</title><rect x="838.3" y="197" width="0.2" height="15.0" fill="rgb(250,48,9)" rx="2" ry="2" />
<text  x="841.32" y="207.5" ></text>
</g>
<g >
<title>rdma_client (372,847 samples, 100.00%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(246,33,13)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >rdma_client</text>
</g>
<g >
<title>std::__get_helper&lt;0ul, unsigned long const&amp;&gt; (55 samples, 0.01%)</title><rect x="890.3" y="197" width="0.2" height="15.0" fill="rgb(214,103,49)" rx="2" ry="2" />
<text  x="893.28" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_futex (588 samples, 0.16%)</title><rect x="844.4" y="213" width="1.8" height="15.0" fill="rgb(214,142,18)" rx="2" ry="2" />
<text  x="847.38" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::pop_front (434 samples, 0.12%)</title><rect x="26.9" y="245" width="1.3" height="15.0" fill="rgb(217,184,24)" rx="2" ry="2" />
<text  x="29.87" y="255.5" ></text>
</g>
<g >
<title>futex_wait_setup (11,909 samples, 3.19%)</title><rect x="453.8" y="101" width="37.7" height="15.0" fill="rgb(243,81,47)" rx="2" ry="2" />
<text  x="456.82" y="111.5" >fut..</text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::pop_front (119 samples, 0.03%)</title><rect x="427.1" y="293" width="0.4" height="15.0" fill="rgb(238,217,12)" rx="2" ry="2" />
<text  x="430.09" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_ptr (48 samples, 0.01%)</title><rect x="873.6" y="197" width="0.1" height="15.0" fill="rgb(205,80,44)" rx="2" ry="2" />
<text  x="876.57" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (83 samples, 0.02%)</title><rect x="910.8" y="229" width="0.3" height="15.0" fill="rgb(253,155,46)" rx="2" ry="2" />
<text  x="913.79" y="239.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (257 samples, 0.07%)</title><rect x="575.1" y="101" width="0.8" height="15.0" fill="rgb(248,92,4)" rx="2" ry="2" />
<text  x="578.08" y="111.5" ></text>
</g>
<g >
<title>page_fault (1,268 samples, 0.34%)</title><rect x="1171.3" y="325" width="4.0" height="15.0" fill="rgb(240,53,21)" rx="2" ry="2" />
<text  x="1174.29" y="335.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (19,191 samples, 5.15%)</title><rect x="617.6" y="229" width="60.7" height="15.0" fill="rgb(238,39,48)" rx="2" ry="2" />
<text  x="620.60" y="239.5" >__gthr..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (19,292 samples, 5.17%)</title><rect x="617.3" y="277" width="61.0" height="15.0" fill="rgb(233,110,17)" rx="2" ry="2" />
<text  x="620.28" y="287.5" >std::u..</text>
</g>
<g >
<title>rmap_walk (56 samples, 0.02%)</title><rect x="1173.5" y="165" width="0.2" height="15.0" fill="rgb(222,164,42)" rx="2" ry="2" />
<text  x="1176.50" y="175.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::duration&lt;long, void&gt; (33 samples, 0.01%)</title><rect x="1187.0" y="485" width="0.1" height="15.0" fill="rgb(232,52,20)" rx="2" ry="2" />
<text  x="1190.04" y="495.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::push (617 samples, 0.17%)</title><rect x="554.9" y="277" width="1.9" height="15.0" fill="rgb(213,71,1)" rx="2" ry="2" />
<text  x="557.85" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::construct&lt;kv::RDMAConnection*, kv::RDMAConnection* const&amp;&gt; (85 samples, 0.02%)</title><rect x="140.8" y="229" width="0.2" height="15.0" fill="rgb(251,132,15)" rx="2" ry="2" />
<text  x="143.76" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_allocate_node (48 samples, 0.01%)</title><rect x="141.1" y="213" width="0.1" height="15.0" fill="rgb(248,125,0)" rx="2" ry="2" />
<text  x="144.06" y="223.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (43 samples, 0.01%)</title><rect x="838.7" y="213" width="0.1" height="15.0" fill="rgb(210,49,43)" rx="2" ry="2" />
<text  x="841.70" y="223.5" ></text>
</g>
<g >
<title>kv::ConnQue::dequeue (37,136 samples, 9.96%)</title><rect x="21.9" y="277" width="117.5" height="15.0" fill="rgb(223,17,36)" rx="2" ry="2" />
<text  x="24.89" y="287.5" >kv::ConnQue::d..</text>
</g>
<g >
<title>__lock_text_start (60 samples, 0.02%)</title><rect x="1174.3" y="149" width="0.2" height="15.0" fill="rgb(239,125,36)" rx="2" ry="2" />
<text  x="1177.29" y="159.5" ></text>
</g>
<g >
<title>all (372,847 samples, 100%)</title><rect x="10.0" y="533" width="1180.0" height="15.0" fill="rgb(234,167,50)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>kv::RDMAMemPool::get_remote_mem (6,928 samples, 1.86%)</title><rect x="891.8" y="341" width="21.9" height="15.0" fill="rgb(212,116,17)" rx="2" ry="2" />
<text  x="894.78" y="351.5" >k..</text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="421" width="1169.3" height="15.0" fill="rgb(232,80,27)" rx="2" ry="2" />
<text  x="13.01" y="431.5" >std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>__gthread_mutex_lock (2,067 samples, 0.55%)</title><rect x="839.7" y="293" width="6.6" height="15.0" fill="rgb(237,114,24)" rx="2" ry="2" />
<text  x="842.73" y="303.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;kv::RDMAConnection*, kv::RDMAConnection*&amp;, kv::RDMAConnection**&gt;::_Deque_iterator (325 samples, 0.09%)</title><rect x="437.5" y="229" width="1.1" height="15.0" fill="rgb(249,150,38)" rx="2" ry="2" />
<text  x="440.52" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt;::deallocate (377 samples, 0.10%)</title><rect x="418.0" y="197" width="1.2" height="15.0" fill="rgb(229,117,45)" rx="2" ry="2" />
<text  x="421.01" y="207.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (161 samples, 0.04%)</title><rect x="1173.8" y="85" width="0.5" height="15.0" fill="rgb(212,202,3)" rx="2" ry="2" />
<text  x="1176.77" y="95.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (35 samples, 0.01%)</title><rect x="891.7" y="277" width="0.1" height="15.0" fill="rgb(205,145,4)" rx="2" ry="2" />
<text  x="894.67" y="287.5" ></text>
</g>
<g >
<title>kv::Spinlock::lock (1,573 samples, 0.42%)</title><rect x="1165.6" y="325" width="5.0" height="15.0" fill="rgb(208,185,50)" rx="2" ry="2" />
<text  x="1168.61" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (146 samples, 0.04%)</title><rect x="873.7" y="229" width="0.5" height="15.0" fill="rgb(227,151,1)" rx="2" ry="2" />
<text  x="876.72" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,799 samples, 2.36%)</title><rect x="459.2" y="85" width="27.9" height="15.0" fill="rgb(244,16,19)" rx="2" ry="2" />
<text  x="462.20" y="95.5" >_..</text>
</g>
<g >
<title>__gthread_mutex_unlock (931 samples, 0.25%)</title><rect x="898.8" y="293" width="3.0" height="15.0" fill="rgb(219,86,10)" rx="2" ry="2" />
<text  x="901.82" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (481 samples, 0.13%)</title><rect x="409.2" y="261" width="1.5" height="15.0" fill="rgb(217,65,8)" rx="2" ry="2" />
<text  x="412.15" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, kv::ListNode*&gt; (38 samples, 0.01%)</title><rect x="883.5" y="213" width="0.1" height="15.0" fill="rgb(254,147,27)" rx="2" ry="2" />
<text  x="886.48" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::size (1,158 samples, 0.31%)</title><rect x="427.6" y="293" width="3.7" height="15.0" fill="rgb(210,128,27)" rx="2" ry="2" />
<text  x="430.59" y="303.5" ></text>
</g>
<g >
<title>hash_futex (60 samples, 0.02%)</title><rect x="195.2" y="85" width="0.2" height="15.0" fill="rgb(240,217,14)" rx="2" ry="2" />
<text  x="198.18" y="95.5" ></text>
</g>
<g >
<title>get_futex_value_locked (924 samples, 0.25%)</title><rect x="613.5" y="85" width="2.9" height="15.0" fill="rgb(221,191,10)" rx="2" ry="2" />
<text  x="616.48" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (1,936 samples, 0.52%)</title><rect x="878.5" y="293" width="6.1" height="15.0" fill="rgb(208,78,38)" rx="2" ry="2" />
<text  x="881.49" y="303.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (790 samples, 0.21%)</title><rect x="827.7" y="245" width="2.5" height="15.0" fill="rgb(214,58,40)" rx="2" ry="2" />
<text  x="830.67" y="255.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (20,029 samples, 5.37%)</title><rect x="195.9" y="261" width="63.3" height="15.0" fill="rgb(211,116,45)" rx="2" ry="2" />
<text  x="198.86" y="271.5" >std::u..</text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (8,558 samples, 2.30%)</title><rect x="767.4" y="261" width="27.1" height="15.0" fill="rgb(248,80,25)" rx="2" ry="2" />
<text  x="770.44" y="271.5" >s..</text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6,980 samples, 1.87%)</title><rect x="808.1" y="261" width="22.1" height="15.0" fill="rgb(232,157,6)" rx="2" ry="2" />
<text  x="811.08" y="271.5" >s..</text>
</g>
<g >
<title>std::_Hash_impl::hash (87 samples, 0.02%)</title><rect x="1175.4" y="309" width="0.3" height="15.0" fill="rgb(211,75,16)" rx="2" ry="2" />
<text  x="1178.43" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,553 samples, 4.71%)</title><rect x="83.8" y="165" width="55.6" height="15.0" fill="rgb(248,105,48)" rx="2" ry="2" />
<text  x="86.84" y="175.5" >entry..</text>
</g>
<g >
<title>main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="373" width="1169.3" height="15.0" fill="rgb(222,152,40)" rx="2" ry="2" />
<text  x="13.01" y="383.5" >main::{lambda</text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (37 samples, 0.01%)</title><rect x="406.1" y="165" width="0.1" height="15.0" fill="rgb(252,139,18)" rx="2" ry="2" />
<text  x="409.13" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (37 samples, 0.01%)</title><rect x="1186.2" y="501" width="0.1" height="15.0" fill="rgb(216,200,29)" rx="2" ry="2" />
<text  x="1189.23" y="511.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1l, 1000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (212 samples, 0.06%)</title><rect x="1187.1" y="485" width="0.7" height="15.0" fill="rgb(219,2,26)" rx="2" ry="2" />
<text  x="1190.14" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (70 samples, 0.02%)</title><rect x="906.2" y="229" width="0.2" height="15.0" fill="rgb(214,71,38)" rx="2" ry="2" />
<text  x="909.23" y="239.5" ></text>
</g>
<g >
<title>__lll_lock_wait (13,983 samples, 3.75%)</title><rect x="35.3" y="181" width="44.3" height="15.0" fill="rgb(231,68,43)" rx="2" ry="2" />
<text  x="38.31" y="191.5" >__ll..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (129 samples, 0.03%)</title><rect x="1174.6" y="165" width="0.4" height="15.0" fill="rgb(209,55,26)" rx="2" ry="2" />
<text  x="1177.62" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (67 samples, 0.02%)</title><rect x="838.3" y="213" width="0.2" height="15.0" fill="rgb(228,66,7)" rx="2" ry="2" />
<text  x="841.26" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (825 samples, 0.22%)</title><rect x="419.8" y="261" width="2.6" height="15.0" fill="rgb(205,142,24)" rx="2" ry="2" />
<text  x="422.76" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (245 samples, 0.07%)</title><rect x="833.9" y="277" width="0.7" height="15.0" fill="rgb(213,173,5)" rx="2" ry="2" />
<text  x="836.85" y="287.5" ></text>
</g>
<g >
<title>kv::LRUCache::allocate_node (2,605 samples, 0.70%)</title><rect x="423.0" y="325" width="8.3" height="15.0" fill="rgb(247,18,33)" rx="2" ry="2" />
<text  x="426.01" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (37 samples, 0.01%)</title><rect x="839.2" y="245" width="0.1" height="15.0" fill="rgb(229,33,15)" rx="2" ry="2" />
<text  x="842.22" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (42 samples, 0.01%)</title><rect x="1184.4" y="485" width="0.1" height="15.0" fill="rgb(228,94,33)" rx="2" ry="2" />
<text  x="1187.37" y="495.5" ></text>
</g>
<g >
<title>kv::RDMAMemPool::get_rkey (83 samples, 0.02%)</title><rect x="1182.9" y="501" width="0.3" height="15.0" fill="rgb(210,191,19)" rx="2" ry="2" />
<text  x="1185.90" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (88 samples, 0.02%)</title><rect x="410.1" y="197" width="0.3" height="15.0" fill="rgb(244,111,45)" rx="2" ry="2" />
<text  x="413.15" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (44 samples, 0.01%)</title><rect x="890.3" y="181" width="0.2" height="15.0" fill="rgb(219,57,40)" rx="2" ry="2" />
<text  x="893.31" y="191.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_read (47,975 samples, 12.87%)</title><rect x="678.3" y="293" width="151.9" height="15.0" fill="rgb(211,39,44)" rx="2" ry="2" />
<text  x="681.33" y="303.5" >kv::RDMAConnection:..</text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (4,863 samples, 1.30%)</title><rect x="382.4" y="229" width="15.3" height="15.0" fill="rgb(233,65,17)" rx="2" ry="2" />
<text  x="385.35" y="239.5" ></text>
</g>
<g >
<title>kv::ConnectionManager::remote_write (119,843 samples, 32.14%)</title><rect x="21.0" y="293" width="379.2" height="15.0" fill="rgb(209,87,50)" rx="2" ry="2" />
<text  x="23.96" y="303.5" >kv::ConnectionManager::remote_write</text>
</g>
<g >
<title>std::mutex::unlock (19,205 samples, 5.15%)</title><rect x="617.6" y="245" width="60.7" height="15.0" fill="rgb(247,5,22)" rx="2" ry="2" />
<text  x="620.55" y="255.5" >std::m..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (54 samples, 0.01%)</title><rect x="833.4" y="293" width="0.1" height="15.0" fill="rgb(228,155,7)" rx="2" ry="2" />
<text  x="836.37" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h2 (34 samples, 0.01%)</title><rect x="408.5" y="229" width="0.1" height="15.0" fill="rgb(252,226,49)" rx="2" ry="2" />
<text  x="411.50" y="239.5" ></text>
</g>
<g >
<title>std::atomic_flag::clear (827 samples, 0.22%)</title><rect x="1160.9" y="309" width="2.6" height="15.0" fill="rgb(219,56,48)" rx="2" ry="2" />
<text  x="1163.93" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt;::_Node_iterator_base (32 samples, 0.01%)</title><rect x="860.5" y="277" width="0.1" height="15.0" fill="rgb(208,89,25)" rx="2" ry="2" />
<text  x="863.48" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::empty (638 samples, 0.17%)</title><rect x="23.7" y="261" width="2.0" height="15.0" fill="rgb(246,37,34)" rx="2" ry="2" />
<text  x="26.66" y="271.5" ></text>
</g>
<g >
<title>page_fault (47 samples, 0.01%)</title><rect x="910.3" y="197" width="0.1" height="15.0" fill="rgb(208,96,39)" rx="2" ry="2" />
<text  x="913.29" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::ListNode*&gt;::allocate (53 samples, 0.01%)</title><rect x="412.3" y="229" width="0.2" height="15.0" fill="rgb(211,191,43)" rx="2" ry="2" />
<text  x="415.31" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_futex (45 samples, 0.01%)</title><rect x="496.9" y="165" width="0.1" height="15.0" fill="rgb(244,201,26)" rx="2" ry="2" />
<text  x="499.88" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (67 samples, 0.02%)</title><rect x="835.3" y="213" width="0.2" height="15.0" fill="rgb(213,175,15)" rx="2" ry="2" />
<text  x="838.30" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3,180 samples, 0.85%)</title><rect x="850.1" y="245" width="10.1" height="15.0" fill="rgb(234,179,17)" rx="2" ry="2" />
<text  x="853.13" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (1,526 samples, 0.41%)</title><rect x="886.5" y="293" width="4.8" height="15.0" fill="rgb(206,138,40)" rx="2" ry="2" />
<text  x="889.52" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (16,276 samples, 4.37%)</title><rect x="440.8" y="213" width="51.5" height="15.0" fill="rgb(250,136,43)" rx="2" ry="2" />
<text  x="443.76" y="223.5" >__GI_..</text>
</g>
<g >
<title>migrate_page (39 samples, 0.01%)</title><rect x="1173.4" y="165" width="0.1" height="15.0" fill="rgb(221,158,21)" rx="2" ry="2" />
<text  x="1176.36" y="175.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (19,108 samples, 5.12%)</title><rect x="556.8" y="277" width="60.5" height="15.0" fill="rgb(220,29,6)" rx="2" ry="2" />
<text  x="559.80" y="287.5" >std::u..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (68 samples, 0.02%)</title><rect x="1184.2" y="485" width="0.2" height="15.0" fill="rgb(223,16,39)" rx="2" ry="2" />
<text  x="1187.16" y="495.5" ></text>
</g>
<g >
<title>futex_wait (13,489 samples, 3.62%)</title><rect x="153.1" y="101" width="42.7" height="15.0" fill="rgb(242,51,49)" rx="2" ry="2" />
<text  x="156.12" y="111.5" >fute..</text>
</g>
<g >
<title>futex_wait (12,707 samples, 3.41%)</title><rect x="452.0" y="117" width="40.2" height="15.0" fill="rgb(227,83,36)" rx="2" ry="2" />
<text  x="455.00" y="127.5" >fut..</text>
</g>
<g >
<title>__GI___clock_gettime (148 samples, 0.04%)</title><rect x="1180.9" y="469" width="0.5" height="15.0" fill="rgb(224,59,23)" rx="2" ry="2" />
<text  x="1183.91" y="479.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::allocate (49 samples, 0.01%)</title><rect x="556.5" y="197" width="0.1" height="15.0" fill="rgb(216,20,1)" rx="2" ry="2" />
<text  x="559.47" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, kv::ListNode*, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt; &gt;::operator[] (4,611 samples, 1.24%)</title><rect x="877.2" y="325" width="14.6" height="15.0" fill="rgb(221,225,1)" rx="2" ry="2" />
<text  x="880.19" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock (142 samples, 0.04%)</title><rect x="850.6" y="181" width="0.5" height="15.0" fill="rgb(254,142,4)" rx="2" ry="2" />
<text  x="853.61" y="191.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (19,869 samples, 5.33%)</title><rect x="196.3" y="197" width="62.9" height="15.0" fill="rgb(210,160,42)" rx="2" ry="2" />
<text  x="199.31" y="207.5" >__GI__..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (898 samples, 0.24%)</title><rect x="392.7" y="213" width="2.8" height="15.0" fill="rgb(237,134,16)" rx="2" ry="2" />
<text  x="395.70" y="223.5" ></text>
</g>
<g >
<title>wake_up_q (36 samples, 0.01%)</title><rect x="901.6" y="165" width="0.1" height="15.0" fill="rgb(223,157,32)" rx="2" ry="2" />
<text  x="904.61" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,505 samples, 4.69%)</title><rect x="84.0" y="149" width="55.4" height="15.0" fill="rgb(249,5,2)" rx="2" ry="2" />
<text  x="86.99" y="159.5" >do_sy..</text>
</g>
<g >
<title>wake_q_add_safe (41 samples, 0.01%)</title><rect x="542.5" y="101" width="0.1" height="15.0" fill="rgb(230,49,16)" rx="2" ry="2" />
<text  x="545.46" y="111.5" ></text>
</g>
<g >
<title>_int_malloc (33 samples, 0.01%)</title><rect x="141.1" y="133" width="0.1" height="15.0" fill="rgb(222,88,46)" rx="2" ry="2" />
<text  x="144.10" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,543 samples, 4.71%)</title><rect x="203.7" y="165" width="55.5" height="15.0" fill="rgb(243,218,1)" rx="2" ry="2" />
<text  x="206.68" y="175.5" >entry..</text>
</g>
<g >
<title>pthread_spin_lock (3,199 samples, 0.86%)</title><rect x="744.2" y="229" width="10.1" height="15.0" fill="rgb(219,42,17)" rx="2" ry="2" />
<text  x="747.16" y="239.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (217 samples, 0.06%)</title><rect x="1188.3" y="501" width="0.7" height="15.0" fill="rgb(220,121,48)" rx="2" ry="2" />
<text  x="1191.32" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::ListNode*&gt; &gt;::construct&lt;kv::ListNode*, kv::ListNode* const&amp;&gt; (125 samples, 0.03%)</title><rect x="411.9" y="277" width="0.4" height="15.0" fill="rgb(252,163,14)" rx="2" ry="2" />
<text  x="414.89" y="287.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (137 samples, 0.04%)</title><rect x="1181.9" y="485" width="0.4" height="15.0" fill="rgb(237,79,49)" rx="2" ry="2" />
<text  x="1184.85" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (39 samples, 0.01%)</title><rect x="1179.2" y="357" width="0.1" height="15.0" fill="rgb(233,112,40)" rx="2" ry="2" />
<text  x="1182.21" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (14,009 samples, 3.76%)</title><rect x="572.9" y="165" width="44.3" height="15.0" fill="rgb(224,46,7)" rx="2" ry="2" />
<text  x="575.88" y="175.5" >do_s..</text>
</g>
<g >
<title>__memset_avx2_erms (53 samples, 0.01%)</title><rect x="910.3" y="213" width="0.1" height="15.0" fill="rgb(243,194,34)" rx="2" ry="2" />
<text  x="913.27" y="223.5" ></text>
</g>
<g >
<title>mark_wake_futex (637 samples, 0.17%)</title><rect x="126.7" y="85" width="2.0" height="15.0" fill="rgb(234,120,15)" rx="2" ry="2" />
<text  x="129.73" y="95.5" ></text>
</g>
<g >
<title>kv::Spinlock::unlock (224 samples, 0.06%)</title><rect x="1170.6" y="325" width="0.7" height="15.0" fill="rgb(211,145,51)" rx="2" ry="2" />
<text  x="1173.58" y="335.5" ></text>
</g>
<g >
<title>_int_free (62 samples, 0.02%)</title><rect x="12.6" y="357" width="0.2" height="15.0" fill="rgb(241,156,12)" rx="2" ry="2" />
<text  x="15.62" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (57 samples, 0.02%)</title><rect x="835.3" y="197" width="0.2" height="15.0" fill="rgb(220,215,29)" rx="2" ry="2" />
<text  x="838.33" y="207.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash (1,028 samples, 0.28%)</title><rect x="909.9" y="277" width="3.3" height="15.0" fill="rgb(231,229,14)" rx="2" ry="2" />
<text  x="912.92" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,854 samples, 3.72%)</title><rect x="152.0" y="165" width="43.8" height="15.0" fill="rgb(245,107,25)" rx="2" ry="2" />
<text  x="154.99" y="175.5" >entr..</text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (331 samples, 0.09%)</title><rect x="125.7" y="69" width="1.0" height="15.0" fill="rgb(217,101,25)" rx="2" ry="2" />
<text  x="128.66" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::_M_deallocate_node_ptr (547 samples, 0.15%)</title><rect x="417.7" y="229" width="1.7" height="15.0" fill="rgb(234,166,36)" rx="2" ry="2" />
<text  x="420.65" y="239.5" ></text>
</g>
<g >
<title>[[vdso]] (6,486 samples, 1.74%)</title><rect x="774.0" y="213" width="20.5" height="15.0" fill="rgb(207,125,11)" rx="2" ry="2" />
<text  x="777.00" y="223.5" ></text>
</g>
<g >
<title>up_read (44 samples, 0.01%)</title><rect x="1175.2" y="277" width="0.1" height="15.0" fill="rgb(231,9,49)" rx="2" ry="2" />
<text  x="1178.17" y="287.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, unsigned int&gt; (55 samples, 0.01%)</title><rect x="835.6" y="197" width="0.2" height="15.0" fill="rgb(249,143,0)" rx="2" ry="2" />
<text  x="838.64" y="207.5" ></text>
</g>
<g >
<title>kv::LRUCache::Evict (127,304 samples, 34.14%)</title><rect x="19.7" y="325" width="402.9" height="15.0" fill="rgb(240,11,45)" rx="2" ry="2" />
<text  x="22.74" y="335.5" >kv::LRUCache::Evict</text>
</g>
<g >
<title>get_futex_key (445 samples, 0.12%)</title><rect x="190.7" y="69" width="1.4" height="15.0" fill="rgb(211,149,48)" rx="2" ry="2" />
<text  x="193.70" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (34 samples, 0.01%)</title><rect x="1183.9" y="501" width="0.1" height="15.0" fill="rgb(222,180,47)" rx="2" ry="2" />
<text  x="1186.90" y="511.5" ></text>
</g>
<g >
<title>do_anonymous_page (297 samples, 0.08%)</title><rect x="1172.2" y="229" width="1.0" height="15.0" fill="rgb(247,150,32)" rx="2" ry="2" />
<text  x="1175.22" y="239.5" ></text>
</g>
<g >
<title>do_futex (12,634 samples, 3.39%)</title><rect x="39.5" y="117" width="40.0" height="15.0" fill="rgb(232,66,53)" rx="2" ry="2" />
<text  x="42.55" y="127.5" >do_..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (430 samples, 0.12%)</title><rect x="835.1" y="245" width="1.4" height="15.0" fill="rgb(232,4,43)" rx="2" ry="2" />
<text  x="838.11" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,576 samples, 0.96%)</title><rect x="542.9" y="85" width="11.3" height="15.0" fill="rgb(226,149,44)" rx="2" ry="2" />
<text  x="545.88" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (71 samples, 0.02%)</title><rect x="906.0" y="213" width="0.2" height="15.0" fill="rgb(209,200,2)" rx="2" ry="2" />
<text  x="909.00" y="223.5" ></text>
</g>
<g >
<title>smp_call_function_many (106 samples, 0.03%)</title><rect x="1173.9" y="37" width="0.3" height="15.0" fill="rgb(232,18,44)" rx="2" ry="2" />
<text  x="1176.89" y="47.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (267 samples, 0.07%)</title><rect x="877.6" y="293" width="0.9" height="15.0" fill="rgb(233,212,35)" rx="2" ry="2" />
<text  x="880.64" y="303.5" ></text>
</g>
<g >
<title>__migration_entry_wait (152 samples, 0.04%)</title><rect x="1174.6" y="197" width="0.4" height="15.0" fill="rgb(208,58,41)" rx="2" ry="2" />
<text  x="1177.56" y="207.5" ></text>
</g>
<g >
<title>pthread_spin_init (233 samples, 0.06%)</title><rect x="743.4" y="229" width="0.8" height="15.0" fill="rgb(237,149,40)" rx="2" ry="2" />
<text  x="746.42" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (468 samples, 0.13%)</title><rect x="413.3" y="245" width="1.5" height="15.0" fill="rgb(216,85,32)" rx="2" ry="2" />
<text  x="416.30" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::empty (619 samples, 0.17%)</title><rect x="23.7" y="245" width="2.0" height="15.0" fill="rgb(212,202,5)" rx="2" ry="2" />
<text  x="26.72" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (84 samples, 0.02%)</title><rect x="422.4" y="261" width="0.2" height="15.0" fill="rgb(235,223,7)" rx="2" ry="2" />
<text  x="425.37" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, unsigned int&gt;, false&gt;::_M_next (601 samples, 0.16%)</title><rect x="911.3" y="245" width="1.9" height="15.0" fill="rgb(232,166,33)" rx="2" ry="2" />
<text  x="914.27" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,480 samples, 2.81%)</title><rect x="92.3" y="85" width="33.2" height="15.0" fill="rgb(247,38,36)" rx="2" ry="2" />
<text  x="95.34" y="95.5" >_r..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (104 samples, 0.03%)</title><rect x="409.8" y="197" width="0.3" height="15.0" fill="rgb(224,38,26)" rx="2" ry="2" />
<text  x="412.82" y="207.5" ></text>
</g>
<g >
<title>kv::LocalEngine::write (368,363 samples, 98.80%)</title><rect x="12.8" y="357" width="1165.8" height="15.0" fill="rgb(223,86,28)" rx="2" ry="2" />
<text  x="15.82" y="367.5" >kv::LocalEngine::write</text>
</g>
<g >
<title>operator new (45 samples, 0.01%)</title><rect x="141.1" y="165" width="0.1" height="15.0" fill="rgb(212,66,1)" rx="2" ry="2" />
<text  x="144.07" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (14,049 samples, 3.77%)</title><rect x="572.7" y="181" width="44.5" height="15.0" fill="rgb(231,112,33)" rx="2" ry="2" />
<text  x="575.75" y="191.5" >entr..</text>
</g>
<g >
<title>schedule (33 samples, 0.01%)</title><rect x="453.7" y="85" width="0.1" height="15.0" fill="rgb(216,203,11)" rx="2" ry="2" />
<text  x="456.71" y="95.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (34 samples, 0.01%)</title><rect x="1189.4" y="485" width="0.1" height="15.0" fill="rgb(229,152,54)" rx="2" ry="2" />
<text  x="1192.36" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (724 samples, 0.19%)</title><rect x="825.4" y="229" width="2.3" height="15.0" fill="rgb(205,187,5)" rx="2" ry="2" />
<text  x="828.38" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (120 samples, 0.03%)</title><rect x="403.0" y="229" width="0.4" height="15.0" fill="rgb(224,6,18)" rx="2" ry="2" />
<text  x="406.01" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (16,067 samples, 4.31%)</title><rect x="28.7" y="213" width="50.9" height="15.0" fill="rgb(245,36,14)" rx="2" ry="2" />
<text  x="31.75" y="223.5" >__gth..</text>
</g>
<g >
<title>wake_up_q (3,669 samples, 0.98%)</title><rect x="542.6" y="101" width="11.6" height="15.0" fill="rgb(219,19,38)" rx="2" ry="2" />
<text  x="545.59" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (47 samples, 0.01%)</title><rect x="910.3" y="149" width="0.1" height="15.0" fill="rgb(233,172,25)" rx="2" ry="2" />
<text  x="913.29" y="159.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (125 samples, 0.03%)</title><rect x="1181.4" y="485" width="0.4" height="15.0" fill="rgb(225,29,41)" rx="2" ry="2" />
<text  x="1184.44" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (149 samples, 0.04%)</title><rect x="865.0" y="261" width="0.5" height="15.0" fill="rgb(219,118,7)" rx="2" ry="2" />
<text  x="868.00" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (96 samples, 0.03%)</title><rect x="875.0" y="229" width="0.3" height="15.0" fill="rgb(247,205,40)" rx="2" ry="2" />
<text  x="878.02" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (19,908 samples, 5.34%)</title><rect x="196.2" y="213" width="63.0" height="15.0" fill="rgb(216,59,41)" rx="2" ry="2" />
<text  x="199.24" y="223.5" >__gthr..</text>
</g>
<g >
<title>std::__detail::_Select1st::operator (93 samples, 0.02%)</title><rect x="420.9" y="213" width="0.3" height="15.0" fill="rgb(248,11,15)" rx="2" ry="2" />
<text  x="423.93" y="223.5" ></text>
</g>
<g >
<title>std::operator-&lt;kv::ListNode*, kv::ListNode*&amp;, kv::ListNode**&gt; (1,130 samples, 0.30%)</title><rect x="427.7" y="277" width="3.6" height="15.0" fill="rgb(225,94,39)" rx="2" ry="2" />
<text  x="430.68" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (567 samples, 0.15%)</title><rect x="400.9" y="245" width="1.8" height="15.0" fill="rgb(219,38,39)" rx="2" ry="2" />
<text  x="403.91" y="255.5" ></text>
</g>
<g >
<title>kv::hash_map_t::insert (3,534 samples, 0.95%)</title><rect x="1164.5" y="341" width="11.2" height="15.0" fill="rgb(240,58,42)" rx="2" ry="2" />
<text  x="1167.55" y="351.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.28] (32 samples, 0.01%)</title><rect x="341.0" y="229" width="0.1" height="15.0" fill="rgb(228,134,46)" rx="2" ry="2" />
<text  x="343.97" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_rehash_aux (1,028 samples, 0.28%)</title><rect x="909.9" y="261" width="3.3" height="15.0" fill="rgb(250,10,15)" rx="2" ry="2" />
<text  x="912.92" y="271.5" ></text>
</g>
<g >
<title>[rdma_client] (111 samples, 0.03%)</title><rect x="712.2" y="261" width="0.3" height="15.0" fill="rgb(218,89,7)" rx="2" ry="2" />
<text  x="715.18" y="271.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::pop_front (518 samples, 0.14%)</title><rect x="438.6" y="261" width="1.6" height="15.0" fill="rgb(247,27,28)" rx="2" ry="2" />
<text  x="441.59" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (1,109 samples, 0.30%)</title><rect x="909.8" y="293" width="3.5" height="15.0" fill="rgb(249,188,2)" rx="2" ry="2" />
<text  x="912.78" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const&amp;&gt; (65 samples, 0.02%)</title><rect x="890.2" y="213" width="0.3" height="15.0" fill="rgb(233,23,41)" rx="2" ry="2" />
<text  x="893.25" y="223.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (127 samples, 0.03%)</title><rect x="1175.3" y="325" width="0.4" height="15.0" fill="rgb(207,174,14)" rx="2" ry="2" />
<text  x="1178.33" y="335.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::_M_push_back_aux&lt;kv::ListNode* const&amp;&gt; (75 samples, 0.02%)</title><rect x="412.3" y="277" width="0.2" height="15.0" fill="rgb(242,13,30)" rx="2" ry="2" />
<text  x="415.28" y="287.5" ></text>
</g>
<g >
<title>get_futex_key (545 samples, 0.15%)</title><rect x="487.1" y="85" width="1.7" height="15.0" fill="rgb(250,100,33)" rx="2" ry="2" />
<text  x="490.05" y="95.5" ></text>
</g>
<g >
<title>try_to_unmap_one (188 samples, 0.05%)</title><rect x="1173.7" y="133" width="0.6" height="15.0" fill="rgb(241,203,8)" rx="2" ry="2" />
<text  x="1176.69" y="143.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (235 samples, 0.06%)</title><rect x="154.2" y="85" width="0.8" height="15.0" fill="rgb(230,147,45)" rx="2" ry="2" />
<text  x="157.23" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (12,929 samples, 3.47%)</title><rect x="38.6" y="165" width="41.0" height="15.0" fill="rgb(222,76,6)" rx="2" ry="2" />
<text  x="41.64" y="175.5" >ent..</text>
</g>
<g >
<title>__lock_text_start (2,768 samples, 0.74%)</title><rect x="669.2" y="69" width="8.8" height="15.0" fill="rgb(221,94,41)" rx="2" ry="2" />
<text  x="672.22" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (198 samples, 0.05%)</title><rect x="834.0" y="261" width="0.6" height="15.0" fill="rgb(212,180,22)" rx="2" ry="2" />
<text  x="837.00" y="271.5" ></text>
</g>
<g >
<title>std::hash&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::operator (140 samples, 0.04%)</title><rect x="1164.1" y="325" width="0.4" height="15.0" fill="rgb(226,114,45)" rx="2" ry="2" />
<text  x="1167.10" y="335.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (499 samples, 0.13%)</title><rect x="413.2" y="261" width="1.6" height="15.0" fill="rgb(232,73,11)" rx="2" ry="2" />
<text  x="416.20" y="271.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (221 samples, 0.06%)</title><rect x="402.7" y="293" width="0.7" height="15.0" fill="rgb(206,158,13)" rx="2" ry="2" />
<text  x="405.72" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (54 samples, 0.01%)</title><rect x="624.5" y="165" width="0.1" height="15.0" fill="rgb(238,180,27)" rx="2" ry="2" />
<text  x="627.46" y="175.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (17,211 samples, 4.62%)</title><rect x="141.4" y="261" width="54.5" height="15.0" fill="rgb(247,215,54)" rx="2" ry="2" />
<text  x="144.39" y="271.5" >std::..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (583 samples, 0.16%)</title><rect x="834.6" y="277" width="1.9" height="15.0" fill="rgb(215,158,3)" rx="2" ry="2" />
<text  x="837.63" y="287.5" ></text>
</g>
<g >
<title>kv::LRUCache::Insert (63 samples, 0.02%)</title><rect x="1180.6" y="501" width="0.2" height="15.0" fill="rgb(248,164,15)" rx="2" ry="2" />
<text  x="1183.63" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_deallocate_node (46 samples, 0.01%)</title><rect x="28.1" y="213" width="0.1" height="15.0" fill="rgb(222,202,34)" rx="2" ry="2" />
<text  x="31.06" y="223.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,607 samples, 0.97%)</title><rect x="367.2" y="245" width="11.4" height="15.0" fill="rgb(245,72,37)" rx="2" ry="2" />
<text  x="370.23" y="255.5" ></text>
</g>
<g >
<title>futex_wait (13,665 samples, 3.67%)</title><rect x="573.9" y="117" width="43.3" height="15.0" fill="rgb(246,95,10)" rx="2" ry="2" />
<text  x="576.90" y="127.5" >fute..</text>
</g>
<g >
<title>kv::ListNode::remote_write (119,960 samples, 32.17%)</title><rect x="20.6" y="309" width="379.6" height="15.0" fill="rgb(247,101,39)" rx="2" ry="2" />
<text  x="23.59" y="319.5" >kv::ListNode::remote_write</text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, unsigned int&gt;, false&gt; &gt; &gt;::_M_allocate_buckets (63 samples, 0.02%)</title><rect x="910.3" y="229" width="0.2" height="15.0" fill="rgb(250,62,0)" rx="2" ry="2" />
<text  x="913.27" y="239.5" ></text>
</g>
<g >
<title>futex_wait (12,599 samples, 3.38%)</title><rect x="39.6" y="101" width="39.9" height="15.0" fill="rgb(230,216,7)" rx="2" ry="2" />
<text  x="42.64" y="111.5" >fut..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (891 samples, 0.24%)</title><rect x="898.9" y="277" width="2.8" height="15.0" fill="rgb(254,77,4)" rx="2" ry="2" />
<text  x="901.91" y="287.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple&lt;void, true&gt; (54 samples, 0.01%)</title><rect x="891.6" y="293" width="0.2" height="15.0" fill="rgb(210,194,24)" rx="2" ry="2" />
<text  x="894.61" y="303.5" ></text>
</g>
<g >
<title>futex_wake (67 samples, 0.02%)</title><rect x="901.5" y="181" width="0.2" height="15.0" fill="rgb(238,10,33)" rx="2" ry="2" />
<text  x="904.51" y="191.5" ></text>
</g>
<g >
<title>kv::Spinlock::lock (2,028 samples, 0.54%)</title><rect x="1154.4" y="325" width="6.4" height="15.0" fill="rgb(214,174,18)" rx="2" ry="2" />
<text  x="1157.35" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false, false&gt;::operator (84 samples, 0.02%)</title><rect x="891.3" y="293" width="0.3" height="15.0" fill="rgb(250,147,2)" rx="2" ry="2" />
<text  x="894.35" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, kv::ListNode*&gt;::pair&lt;unsigned long const&amp;&gt; (200 samples, 0.05%)</title><rect x="889.8" y="245" width="0.7" height="15.0" fill="rgb(252,50,54)" rx="2" ry="2" />
<text  x="892.82" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (724 samples, 0.19%)</title><rect x="625.9" y="117" width="2.3" height="15.0" fill="rgb(239,219,27)" rx="2" ry="2" />
<text  x="628.87" y="127.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (56 samples, 0.02%)</title><rect x="1188.3" y="485" width="0.2" height="15.0" fill="rgb(226,86,39)" rx="2" ry="2" />
<text  x="1191.32" y="495.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (10,626 samples, 2.85%)</title><rect x="505.5" y="85" width="33.6" height="15.0" fill="rgb(229,18,50)" rx="2" ry="2" />
<text  x="508.50" y="95.5" >na..</text>
</g>
<g >
<title>_raw_spin_lock (248 samples, 0.07%)</title><rect x="452.4" y="101" width="0.7" height="15.0" fill="rgb(229,161,44)" rx="2" ry="2" />
<text  x="455.36" y="111.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (16,227 samples, 4.35%)</title><rect x="28.2" y="261" width="51.4" height="15.0" fill="rgb(213,91,35)" rx="2" ry="2" />
<text  x="31.24" y="271.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (347 samples, 0.09%)</title><rect x="409.6" y="229" width="1.1" height="15.0" fill="rgb(245,164,0)" rx="2" ry="2" />
<text  x="412.58" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::ListNode*&gt;::deallocate (40 samples, 0.01%)</title><rect x="427.3" y="229" width="0.1" height="15.0" fill="rgb(208,118,46)" rx="2" ry="2" />
<text  x="430.28" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::allocate (46 samples, 0.01%)</title><rect x="141.1" y="181" width="0.1" height="15.0" fill="rgb(237,215,34)" rx="2" ry="2" />
<text  x="144.07" y="191.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (10,405 samples, 2.79%)</title><rect x="633.0" y="85" width="32.9" height="15.0" fill="rgb(222,71,4)" rx="2" ry="2" />
<text  x="635.98" y="95.5" >na..</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::deallocate (45 samples, 0.01%)</title><rect x="440.1" y="197" width="0.1" height="15.0" fill="rgb(242,4,14)" rx="2" ry="2" />
<text  x="443.06" y="207.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::_M_pop_front_aux (62 samples, 0.02%)</title><rect x="427.3" y="277" width="0.2" height="15.0" fill="rgb(212,34,23)" rx="2" ry="2" />
<text  x="430.27" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (614 samples, 0.16%)</title><rect x="405.6" y="229" width="2.0" height="15.0" fill="rgb(218,188,45)" rx="2" ry="2" />
<text  x="408.65" y="239.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (1,019 samples, 0.27%)</title><rect x="906.4" y="229" width="3.3" height="15.0" fill="rgb(207,107,8)" rx="2" ry="2" />
<text  x="909.45" y="239.5" ></text>
</g>
<g >
<title>__GI___clock_gettime (7,561 samples, 2.03%)</title><rect x="341.1" y="229" width="23.9" height="15.0" fill="rgb(217,41,38)" rx="2" ry="2" />
<text  x="344.07" y="239.5" >_..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (17,135 samples, 4.60%)</title><rect x="141.6" y="245" width="54.3" height="15.0" fill="rgb(221,164,19)" rx="2" ry="2" />
<text  x="144.63" y="255.5" >std::..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (176 samples, 0.05%)</title><rect x="837.1" y="261" width="0.5" height="15.0" fill="rgb(237,20,36)" rx="2" ry="2" />
<text  x="840.06" y="271.5" ></text>
</g>
<g >
<title>mark_wake_futex (344 samples, 0.09%)</title><rect x="853.0" y="165" width="1.1" height="15.0" fill="rgb(225,140,53)" rx="2" ry="2" />
<text  x="855.99" y="175.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_remove_bucket_begin (55 samples, 0.01%)</title><rect x="417.0" y="245" width="0.2" height="15.0" fill="rgb(238,202,37)" rx="2" ry="2" />
<text  x="420.02" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (110 samples, 0.03%)</title><rect x="1178.8" y="277" width="0.4" height="15.0" fill="rgb(237,66,38)" rx="2" ry="2" />
<text  x="1181.83" y="287.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (16,399 samples, 4.40%)</title><rect x="440.4" y="261" width="51.9" height="15.0" fill="rgb(205,190,40)" rx="2" ry="2" />
<text  x="443.40" y="271.5" >std::..</text>
</g>
<g >
<title>__x64_sys_futex (38 samples, 0.01%)</title><rect x="451.0" y="165" width="0.1" height="15.0" fill="rgb(213,143,24)" rx="2" ry="2" />
<text  x="454.00" y="175.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (139 samples, 0.04%)</title><rect x="1173.8" y="53" width="0.4" height="15.0" fill="rgb(211,59,8)" rx="2" ry="2" />
<text  x="1176.79" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (234 samples, 0.06%)</title><rect x="408.4" y="245" width="0.8" height="15.0" fill="rgb(219,131,25)" rx="2" ry="2" />
<text  x="411.41" y="255.5" ></text>
</g>
<g >
<title>wake_up_q (3,020 samples, 0.81%)</title><rect x="249.4" y="85" width="9.5" height="15.0" fill="rgb(234,164,32)" rx="2" ry="2" />
<text  x="252.35" y="95.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (215 samples, 0.06%)</title><rect x="838.2" y="229" width="0.6" height="15.0" fill="rgb(219,127,53)" rx="2" ry="2" />
<text  x="841.16" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (5,233 samples, 1.40%)</title><rect x="860.6" y="309" width="16.6" height="15.0" fill="rgb(241,159,12)" rx="2" ry="2" />
<text  x="863.63" y="319.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (421 samples, 0.11%)</title><rect x="612.1" y="69" width="1.4" height="15.0" fill="rgb(235,200,9)" rx="2" ry="2" />
<text  x="615.12" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (76 samples, 0.02%)</title><rect x="901.5" y="229" width="0.2" height="15.0" fill="rgb(214,12,3)" rx="2" ry="2" />
<text  x="904.49" y="239.5" ></text>
</g>
<g >
<title>__schedule (35 samples, 0.01%)</title><rect x="844.8" y="133" width="0.1" height="15.0" fill="rgb(219,146,38)" rx="2" ry="2" />
<text  x="847.82" y="143.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (259 samples, 0.07%)</title><rect x="404.3" y="245" width="0.8" height="15.0" fill="rgb(229,4,40)" rx="2" ry="2" />
<text  x="407.26" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (35 samples, 0.01%)</title><rect x="1184.0" y="501" width="0.2" height="15.0" fill="rgb(215,8,46)" rx="2" ry="2" />
<text  x="1187.05" y="511.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, kv::ListNode*&gt; (44 samples, 0.01%)</title><rect x="874.4" y="213" width="0.1" height="15.0" fill="rgb(246,106,45)" rx="2" ry="2" />
<text  x="877.37" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12,665 samples, 3.40%)</title><rect x="39.5" y="133" width="40.1" height="15.0" fill="rgb(234,57,52)" rx="2" ry="2" />
<text  x="42.47" y="143.5" >__x..</text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_ptr (32 samples, 0.01%)</title><rect x="417.6" y="213" width="0.1" height="15.0" fill="rgb(253,54,51)" rx="2" ry="2" />
<text  x="420.55" y="223.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::operator[] (1,005 samples, 0.27%)</title><rect x="407.9" y="293" width="3.2" height="15.0" fill="rgb(252,97,3)" rx="2" ry="2" />
<text  x="410.88" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, unsigned int&gt; (43 samples, 0.01%)</title><rect x="906.3" y="213" width="0.1" height="15.0" fill="rgb(226,43,33)" rx="2" ry="2" />
<text  x="909.31" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (145 samples, 0.04%)</title><rect x="416.2" y="213" width="0.5" height="15.0" fill="rgb(205,156,21)" rx="2" ry="2" />
<text  x="419.21" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (115 samples, 0.03%)</title><rect x="1178.8" y="293" width="0.4" height="15.0" fill="rgb(238,46,11)" rx="2" ry="2" />
<text  x="1181.82" y="303.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (61 samples, 0.02%)</title><rect x="1188.1" y="485" width="0.2" height="15.0" fill="rgb(221,122,49)" rx="2" ry="2" />
<text  x="1191.12" y="495.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (746 samples, 0.20%)</title><rect x="375.0" y="213" width="2.4" height="15.0" fill="rgb(213,63,36)" rx="2" ry="2" />
<text  x="378.00" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (544 samples, 0.15%)</title><rect x="405.7" y="213" width="1.8" height="15.0" fill="rgb(251,224,47)" rx="2" ry="2" />
<text  x="408.74" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (38 samples, 0.01%)</title><rect x="905.6" y="261" width="0.1" height="15.0" fill="rgb(254,207,21)" rx="2" ry="2" />
<text  x="908.61" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (37 samples, 0.01%)</title><rect x="910.3" y="117" width="0.1" height="15.0" fill="rgb(207,30,49)" rx="2" ry="2" />
<text  x="913.32" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (68 samples, 0.02%)</title><rect x="1185.3" y="501" width="0.3" height="15.0" fill="rgb(249,83,20)" rx="2" ry="2" />
<text  x="1188.34" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (53 samples, 0.01%)</title><rect x="839.2" y="261" width="0.1" height="15.0" fill="rgb(254,11,50)" rx="2" ry="2" />
<text  x="842.17" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (250 samples, 0.07%)</title><rect x="910.5" y="245" width="0.8" height="15.0" fill="rgb(214,171,0)" rx="2" ry="2" />
<text  x="913.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (37 samples, 0.01%)</title><rect x="873.2" y="229" width="0.1" height="15.0" fill="rgb(236,120,3)" rx="2" ry="2" />
<text  x="876.18" y="239.5" ></text>
</g>
<g >
<title>futex_wake (15,733 samples, 4.22%)</title><rect x="628.2" y="117" width="49.8" height="15.0" fill="rgb(220,36,36)" rx="2" ry="2" />
<text  x="631.19" y="127.5" >futex..</text>
</g>
<g >
<title>std::mutex::unlock (18,830 samples, 5.05%)</title><rect x="79.8" y="229" width="59.6" height="15.0" fill="rgb(224,26,45)" rx="2" ry="2" />
<text  x="82.83" y="239.5" >std::m..</text>
</g>
<g >
<title>__gthread_mutex_lock (588 samples, 0.16%)</title><rect x="400.9" y="261" width="1.8" height="15.0" fill="rgb(246,228,46)" rx="2" ry="2" />
<text  x="403.86" y="271.5" ></text>
</g>
<g >
<title>hash_futex (52 samples, 0.01%)</title><rect x="554.3" y="117" width="0.1" height="15.0" fill="rgb(207,13,39)" rx="2" ry="2" />
<text  x="557.25" y="127.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, kv::ListNode*&gt; (45 samples, 0.01%)</title><rect x="416.8" y="197" width="0.2" height="15.0" fill="rgb(208,132,11)" rx="2" ry="2" />
<text  x="419.84" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (187 samples, 0.05%)</title><rect x="864.9" y="277" width="0.6" height="15.0" fill="rgb(225,114,53)" rx="2" ry="2" />
<text  x="867.88" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (148 samples, 0.04%)</title><rect x="1178.7" y="309" width="0.5" height="15.0" fill="rgb(245,57,19)" rx="2" ry="2" />
<text  x="1181.71" y="319.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (32 samples, 0.01%)</title><rect x="1173.6" y="85" width="0.1" height="15.0" fill="rgb(227,110,7)" rx="2" ry="2" />
<text  x="1176.57" y="95.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::ListNode*, std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt; &gt;::push (462 samples, 0.12%)</title><rect x="411.1" y="309" width="1.4" height="15.0" fill="rgb(247,209,25)" rx="2" ry="2" />
<text  x="414.06" y="319.5" ></text>
</g>
<g >
<title>std::mutex::unlock (19,920 samples, 5.34%)</title><rect x="196.2" y="229" width="63.0" height="15.0" fill="rgb(214,115,30)" rx="2" ry="2" />
<text  x="199.21" y="239.5" >std::m..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (2,128 samples, 0.57%)</title><rect x="892.0" y="325" width="6.8" height="15.0" fill="rgb(234,227,26)" rx="2" ry="2" />
<text  x="895.05" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (18,149 samples, 4.87%)</title><rect x="497.0" y="165" width="57.5" height="15.0" fill="rgb(239,106,8)" rx="2" ry="2" />
<text  x="500.02" y="175.5" >do_sys..</text>
</g>
<g >
<title>do_syscall_64 (13,825 samples, 3.71%)</title><rect x="152.1" y="149" width="43.7" height="15.0" fill="rgb(240,216,43)" rx="2" ry="2" />
<text  x="155.08" y="159.5" >do_s..</text>
</g>
<g >
<title>schedule (38 samples, 0.01%)</title><rect x="41.4" y="69" width="0.1" height="15.0" fill="rgb(208,189,30)" rx="2" ry="2" />
<text  x="44.43" y="79.5" ></text>
</g>
<g >
<title>[rdma_client] (122 samples, 0.03%)</title><rect x="287.0" y="245" width="0.4" height="15.0" fill="rgb(235,22,3)" rx="2" ry="2" />
<text  x="290.00" y="255.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (178 samples, 0.05%)</title><rect x="402.9" y="261" width="0.5" height="15.0" fill="rgb(208,198,26)" rx="2" ry="2" />
<text  x="405.86" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_free (52 samples, 0.01%)</title><rect x="12.5" y="357" width="0.1" height="15.0" fill="rgb(208,178,19)" rx="2" ry="2" />
<text  x="15.46" y="367.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (631 samples, 0.17%)</title><rect x="420.4" y="245" width="2.0" height="15.0" fill="rgb(212,57,15)" rx="2" ry="2" />
<text  x="423.37" y="255.5" ></text>
</g>
<g >
<title>remove_migration_ptes (56 samples, 0.02%)</title><rect x="1173.5" y="181" width="0.2" height="15.0" fill="rgb(251,112,16)" rx="2" ry="2" />
<text  x="1176.50" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_futex (72 samples, 0.02%)</title><rect x="901.5" y="213" width="0.2" height="15.0" fill="rgb(214,46,52)" rx="2" ry="2" />
<text  x="904.50" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;kv::RDMAConnection*, kv::RDMAConnection*&amp;, kv::RDMAConnection**&gt; (569 samples, 0.15%)</title><rect x="23.9" y="229" width="1.8" height="15.0" fill="rgb(238,19,22)" rx="2" ry="2" />
<text  x="26.88" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (4,318 samples, 1.16%)</title><rect x="846.5" y="261" width="13.7" height="15.0" fill="rgb(252,13,6)" rx="2" ry="2" />
<text  x="849.53" y="271.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (91 samples, 0.02%)</title><rect x="844.6" y="165" width="0.3" height="15.0" fill="rgb(226,203,40)" rx="2" ry="2" />
<text  x="847.65" y="175.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (704 samples, 0.19%)</title><rect x="365.0" y="245" width="2.2" height="15.0" fill="rgb(248,1,45)" rx="2" ry="2" />
<text  x="368.00" y="255.5" ></text>
</g>
<g >
<title>schedule (51 samples, 0.01%)</title><rect x="844.8" y="149" width="0.1" height="15.0" fill="rgb(247,132,22)" rx="2" ry="2" />
<text  x="847.77" y="159.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (283 samples, 0.08%)</title><rect x="406.6" y="197" width="0.9" height="15.0" fill="rgb(218,201,48)" rx="2" ry="2" />
<text  x="409.57" y="207.5" ></text>
</g>
<g >
<title>__unqueue_futex (81 samples, 0.02%)</title><rect x="853.8" y="149" width="0.3" height="15.0" fill="rgb(230,48,12)" rx="2" ry="2" />
<text  x="856.82" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_h1 (38 samples, 0.01%)</title><rect x="877.0" y="277" width="0.2" height="15.0" fill="rgb(212,48,26)" rx="2" ry="2" />
<text  x="880.04" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (67 samples, 0.02%)</title><rect x="407.6" y="261" width="0.2" height="15.0" fill="rgb(237,158,25)" rx="2" ry="2" />
<text  x="410.59" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (81 samples, 0.02%)</title><rect x="906.0" y="229" width="0.2" height="15.0" fill="rgb(210,61,30)" rx="2" ry="2" />
<text  x="908.97" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (672 samples, 0.18%)</title><rect x="844.1" y="245" width="2.1" height="15.0" fill="rgb(207,227,38)" rx="2" ry="2" />
<text  x="847.12" y="255.5" ></text>
</g>
<g >
<title>wake_up_page_bit (60 samples, 0.02%)</title><rect x="1174.3" y="165" width="0.2" height="15.0" fill="rgb(207,34,4)" rx="2" ry="2" />
<text  x="1177.29" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (223 samples, 0.06%)</title><rect x="877.8" y="277" width="0.7" height="15.0" fill="rgb(251,47,50)" rx="2" ry="2" />
<text  x="880.78" y="287.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="437" width="1169.3" height="15.0" fill="rgb(246,83,50)" rx="2" ry="2" />
<text  x="13.01" y="447.5" >std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (60 samples, 0.02%)</title><rect x="839.1" y="277" width="0.2" height="15.0" fill="rgb(248,119,41)" rx="2" ry="2" />
<text  x="842.15" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (63 samples, 0.02%)</title><rect x="410.9" y="261" width="0.2" height="15.0" fill="rgb(211,42,10)" rx="2" ry="2" />
<text  x="413.86" y="271.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda (369,476 samples, 99.10%)</title><rect x="10.0" y="453" width="1169.3" height="15.0" fill="rgb(240,62,44)" rx="2" ry="2" />
<text  x="13.01" y="463.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;main::{lambda</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::~unique_lock (18,903 samples, 5.07%)</title><rect x="79.6" y="261" width="59.8" height="15.0" fill="rgb(205,115,16)" rx="2" ry="2" />
<text  x="82.60" y="271.5" >std::u..</text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (87 samples, 0.02%)</title><rect x="406.0" y="181" width="0.2" height="15.0" fill="rgb(246,172,12)" rx="2" ry="2" />
<text  x="408.97" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (72 samples, 0.02%)</title><rect x="838.9" y="277" width="0.2" height="15.0" fill="rgb(232,131,48)" rx="2" ry="2" />
<text  x="841.92" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (980 samples, 0.26%)</title><rect x="408.0" y="277" width="3.1" height="15.0" fill="rgb(238,32,27)" rx="2" ry="2" />
<text  x="410.96" y="287.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_pop_front_aux (66 samples, 0.02%)</title><rect x="440.0" y="245" width="0.2" height="15.0" fill="rgb(206,115,7)" rx="2" ry="2" />
<text  x="443.02" y="255.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (98 samples, 0.03%)</title><rect x="1187.8" y="485" width="0.3" height="15.0" fill="rgb(250,56,53)" rx="2" ry="2" />
<text  x="1190.81" y="495.5" ></text>
</g>
<g >
<title>kv::ListNode::remote_read (126,044 samples, 33.81%)</title><rect x="431.3" y="325" width="398.9" height="15.0" fill="rgb(230,228,47)" rx="2" ry="2" />
<text  x="434.26" y="335.5" >kv::ListNode::remote_read</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (38 samples, 0.01%)</title><rect x="836.5" y="277" width="0.1" height="15.0" fill="rgb(213,28,26)" rx="2" ry="2" />
<text  x="839.47" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (65 samples, 0.02%)</title><rect x="420.7" y="197" width="0.2" height="15.0" fill="rgb(249,45,38)" rx="2" ry="2" />
<text  x="423.72" y="207.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_Tuple_impl (135 samples, 0.04%)</title><rect x="890.5" y="229" width="0.5" height="15.0" fill="rgb(232,161,30)" rx="2" ry="2" />
<text  x="893.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (39 samples, 0.01%)</title><rect x="910.7" y="229" width="0.1" height="15.0" fill="rgb(248,134,21)" rx="2" ry="2" />
<text  x="913.67" y="239.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (144 samples, 0.04%)</title><rect x="832.9" y="277" width="0.4" height="15.0" fill="rgb(244,19,51)" rx="2" ry="2" />
<text  x="835.88" y="287.5" ></text>
</g>
<g >
<title>futex_wait_setup (12,683 samples, 3.40%)</title><rect x="155.0" y="85" width="40.1" height="15.0" fill="rgb(244,134,24)" rx="2" ry="2" />
<text  x="157.97" y="95.5" >fut..</text>
</g>
<g >
<title>__gthread_mutex_unlock (4,355 samples, 1.17%)</title><rect x="846.4" y="293" width="13.8" height="15.0" fill="rgb(231,104,43)" rx="2" ry="2" />
<text  x="849.43" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_futex (40 samples, 0.01%)</title><rect x="572.7" y="165" width="0.2" height="15.0" fill="rgb(209,211,32)" rx="2" ry="2" />
<text  x="575.75" y="175.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (54 samples, 0.01%)</title><rect x="416.0" y="197" width="0.2" height="15.0" fill="rgb(249,132,47)" rx="2" ry="2" />
<text  x="419.04" y="207.5" ></text>
</g>
<g >
<title>__schedule (32 samples, 0.01%)</title><rect x="154.9" y="53" width="0.1" height="15.0" fill="rgb(233,154,9)" rx="2" ry="2" />
<text  x="157.87" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (101 samples, 0.03%)</title><rect x="406.2" y="197" width="0.4" height="15.0" fill="rgb(215,112,33)" rx="2" ry="2" />
<text  x="409.25" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (421 samples, 0.11%)</title><rect x="882.3" y="245" width="1.3" height="15.0" fill="rgb(224,59,38)" rx="2" ry="2" />
<text  x="885.31" y="255.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (202 samples, 0.05%)</title><rect x="837.0" y="277" width="0.6" height="15.0" fill="rgb(237,197,38)" rx="2" ry="2" />
<text  x="839.98" y="287.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;::count (694 samples, 0.19%)</title><rect x="794.5" y="261" width="2.2" height="15.0" fill="rgb(236,14,46)" rx="2" ry="2" />
<text  x="797.53" y="271.5" ></text>
</g>
<g >
<title>do_numa_page (101 samples, 0.03%)</title><rect x="1178.9" y="261" width="0.3" height="15.0" fill="rgb(230,161,11)" rx="2" ry="2" />
<text  x="1181.86" y="271.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (52 samples, 0.01%)</title><rect x="412.3" y="197" width="0.2" height="15.0" fill="rgb(251,164,13)" rx="2" ry="2" />
<text  x="415.31" y="207.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (410 samples, 0.11%)</title><rect x="190.8" y="53" width="1.3" height="15.0" fill="rgb(253,195,31)" rx="2" ry="2" />
<text  x="193.81" y="63.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,899 samples, 3.46%)</title><rect x="38.7" y="149" width="40.9" height="15.0" fill="rgb(224,26,3)" rx="2" ry="2" />
<text  x="41.74" y="159.5" >do_..</text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (40 samples, 0.01%)</title><rect x="410.4" y="197" width="0.2" height="15.0" fill="rgb(206,190,27)" rx="2" ry="2" />
<text  x="413.43" y="207.5" ></text>
</g>
<g >
<title>__lock_text_start (3,566 samples, 0.96%)</title><rect x="542.9" y="69" width="11.3" height="15.0" fill="rgb(230,25,12)" rx="2" ry="2" />
<text  x="545.91" y="79.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (549 samples, 0.15%)</title><rect x="830.9" y="261" width="1.8" height="15.0" fill="rgb(211,70,4)" rx="2" ry="2" />
<text  x="833.91" y="271.5" ></text>
</g>
<g >
<title>kv::ConnQue::enqueue (39,136 samples, 10.50%)</title><rect x="554.5" y="293" width="123.8" height="15.0" fill="rgb(236,162,46)" rx="2" ry="2" />
<text  x="557.48" y="303.5" >kv::ConnQue::en..</text>
</g>
<g >
<title>pthread_spin_init (258 samples, 0.07%)</title><rect x="315.5" y="213" width="0.8" height="15.0" fill="rgb(229,221,5)" rx="2" ry="2" />
<text  x="318.45" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (68 samples, 0.02%)</title><rect x="1185.3" y="485" width="0.3" height="15.0" fill="rgb(250,71,16)" rx="2" ry="2" />
<text  x="1188.34" y="495.5" ></text>
</g>
<g >
<title>down_read_trylock (34 samples, 0.01%)</title><rect x="1171.7" y="261" width="0.1" height="15.0" fill="rgb(230,27,8)" rx="2" ry="2" />
<text  x="1174.71" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (8,820 samples, 2.37%)</title><rect x="46.7" y="53" width="27.9" height="15.0" fill="rgb(211,178,16)" rx="2" ry="2" />
<text  x="49.66" y="63.5" >n..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_allocate_buckets (63 samples, 0.02%)</title><rect x="910.3" y="245" width="0.2" height="15.0" fill="rgb(240,179,1)" rx="2" ry="2" />
<text  x="913.27" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (36 samples, 0.01%)</title><rect x="1184.8" y="501" width="0.1" height="15.0" fill="rgb(244,81,48)" rx="2" ry="2" />
<text  x="1187.83" y="511.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (127 samples, 0.03%)</title><rect x="743.0" y="229" width="0.4" height="15.0" fill="rgb(211,39,34)" rx="2" ry="2" />
<text  x="746.02" y="239.5" ></text>
</g>
<g >
<title>std::mutex::unlock (39 samples, 0.01%)</title><rect x="1189.8" y="485" width="0.1" height="15.0" fill="rgb(230,1,38)" rx="2" ry="2" />
<text  x="1192.80" y="495.5" ></text>
</g>
<g >
<title>std::_Hash_impl::hash (101 samples, 0.03%)</title><rect x="1178.2" y="325" width="0.4" height="15.0" fill="rgb(226,213,45)" rx="2" ry="2" />
<text  x="1181.25" y="335.5" ></text>
</g>
<g >
<title>do_futex (70 samples, 0.02%)</title><rect x="901.5" y="197" width="0.2" height="15.0" fill="rgb(252,137,8)" rx="2" ry="2" />
<text  x="904.50" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::_M_node_allocator (39 samples, 0.01%)</title><rect x="419.4" y="229" width="0.1" height="15.0" fill="rgb(230,171,18)" rx="2" ry="2" />
<text  x="422.38" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (188 samples, 0.05%)</title><rect x="414.2" y="229" width="0.6" height="15.0" fill="rgb(213,148,33)" rx="2" ry="2" />
<text  x="417.19" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (53 samples, 0.01%)</title><rect x="891.4" y="277" width="0.2" height="15.0" fill="rgb(206,204,46)" rx="2" ry="2" />
<text  x="894.45" y="287.5" ></text>
</g>
<g >
<title>get_futex_value_locked (881 samples, 0.24%)</title><rect x="76.0" y="69" width="2.8" height="15.0" fill="rgb(225,49,52)" rx="2" ry="2" />
<text  x="78.96" y="79.5" ></text>
</g>
<g >
<title>do_futex (16,597 samples, 4.45%)</title><rect x="625.7" y="133" width="52.6" height="15.0" fill="rgb(211,165,32)" rx="2" ry="2" />
<text  x="628.73" y="143.5" >do_fu..</text>
</g>
<g >
<title>__x64_sys_futex (16,645 samples, 4.46%)</title><rect x="625.6" y="149" width="52.7" height="15.0" fill="rgb(223,125,19)" rx="2" ry="2" />
<text  x="628.59" y="159.5" >__x64..</text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,588 samples, 0.96%)</title><rect x="796.7" y="261" width="11.4" height="15.0" fill="rgb(210,175,5)" rx="2" ry="2" />
<text  x="799.72" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (413 samples, 0.11%)</title><rect x="837.6" y="277" width="1.3" height="15.0" fill="rgb(206,177,41)" rx="2" ry="2" />
<text  x="840.61" y="287.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::front (375 samples, 0.10%)</title><rect x="437.4" y="277" width="1.2" height="15.0" fill="rgb(208,31,31)" rx="2" ry="2" />
<text  x="440.36" y="287.5" ></text>
</g>
<g >
<title>try_to_unmap (58 samples, 0.02%)</title><rect x="1178.9" y="213" width="0.2" height="15.0" fill="rgb(242,67,3)" rx="2" ry="2" />
<text  x="1181.94" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (269 samples, 0.07%)</title><rect x="838.1" y="245" width="0.8" height="15.0" fill="rgb(254,121,25)" rx="2" ry="2" />
<text  x="841.07" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (85 samples, 0.02%)</title><rect x="415.9" y="213" width="0.3" height="15.0" fill="rgb(219,157,26)" rx="2" ry="2" />
<text  x="418.94" y="223.5" ></text>
</g>
<g >
<title>std::atomic_flag::clear (211 samples, 0.06%)</title><rect x="1170.6" y="309" width="0.7" height="15.0" fill="rgb(231,52,13)" rx="2" ry="2" />
<text  x="1173.62" y="319.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::front (102 samples, 0.03%)</title><rect x="426.7" y="293" width="0.3" height="15.0" fill="rgb(233,62,44)" rx="2" ry="2" />
<text  x="429.71" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (16,958 samples, 4.55%)</title><rect x="624.6" y="165" width="53.7" height="15.0" fill="rgb(232,133,35)" rx="2" ry="2" />
<text  x="627.63" y="175.5" >do_sy..</text>
</g>
<g >
<title>on_each_cpu_cond_mask (42 samples, 0.01%)</title><rect x="1179.0" y="101" width="0.1" height="15.0" fill="rgb(244,181,15)" rx="2" ry="2" />
<text  x="1181.97" y="111.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::pop (531 samples, 0.14%)</title><rect x="438.6" y="277" width="1.6" height="15.0" fill="rgb(247,62,14)" rx="2" ry="2" />
<text  x="441.55" y="287.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (18,516 samples, 4.97%)</title><rect x="558.6" y="213" width="58.6" height="15.0" fill="rgb(251,220,25)" rx="2" ry="2" />
<text  x="561.62" y="223.5" >__GI__..</text>
</g>
<g >
<title>__GI___pthread_mutex_lock (17,014 samples, 4.56%)</title><rect x="142.0" y="197" width="53.8" height="15.0" fill="rgb(221,141,24)" rx="2" ry="2" />
<text  x="144.99" y="207.5" >__GI_..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::destroy&lt;kv::RDMAConnection*&gt; (33 samples, 0.01%)</title><rect x="439.9" y="245" width="0.1" height="15.0" fill="rgb(231,61,24)" rx="2" ry="2" />
<text  x="442.92" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (175 samples, 0.05%)</title><rect x="1172.3" y="213" width="0.5" height="15.0" fill="rgb(243,135,4)" rx="2" ry="2" />
<text  x="1175.27" y="223.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (19,512 samples, 5.23%)</title><rect x="492.7" y="213" width="61.8" height="15.0" fill="rgb(250,89,39)" rx="2" ry="2" />
<text  x="495.71" y="223.5" >__GI__..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (3,564 samples, 0.96%)</title><rect x="865.5" y="293" width="11.2" height="15.0" fill="rgb(216,222,31)" rx="2" ry="2" />
<text  x="868.47" y="303.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_push_back_aux&lt;kv::RDMAConnection* const&amp;&gt; (113 samples, 0.03%)</title><rect x="141.0" y="229" width="0.4" height="15.0" fill="rgb(217,34,42)" rx="2" ry="2" />
<text  x="144.03" y="239.5" ></text>
</g>
<g >
<title>std::__addressof&lt;std::mutex&gt; (46 samples, 0.01%)</title><rect x="557.2" y="261" width="0.2" height="15.0" fill="rgb(250,132,48)" rx="2" ry="2" />
<text  x="560.23" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (17,501 samples, 4.69%)</title><rect x="203.8" y="149" width="55.4" height="15.0" fill="rgb(227,82,1)" rx="2" ry="2" />
<text  x="206.81" y="159.5" >do_sy..</text>
</g>
<g >
<title>get_futex_key (367 samples, 0.10%)</title><rect x="539.1" y="101" width="1.2" height="15.0" fill="rgb(210,80,37)" rx="2" ry="2" />
<text  x="542.13" y="111.5" ></text>
</g>
<g >
<title>rmap_walk (58 samples, 0.02%)</title><rect x="1178.9" y="197" width="0.2" height="15.0" fill="rgb(231,157,19)" rx="2" ry="2" />
<text  x="1181.94" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (1,280 samples, 0.34%)</title><rect x="905.7" y="261" width="4.1" height="15.0" fill="rgb(223,153,20)" rx="2" ry="2" />
<text  x="908.73" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (78 samples, 0.02%)</title><rect x="1178.9" y="229" width="0.2" height="15.0" fill="rgb(228,185,22)" rx="2" ry="2" />
<text  x="1181.87" y="239.5" ></text>
</g>
<g >
<title>std::queue&lt;kv::ListNode*, std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt; &gt;::size (1,198 samples, 0.32%)</title><rect x="427.5" y="309" width="3.8" height="15.0" fill="rgb(249,171,26)" rx="2" ry="2" />
<text  x="430.47" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (110 samples, 0.03%)</title><rect x="1184.2" y="501" width="0.3" height="15.0" fill="rgb(238,104,50)" rx="2" ry="2" />
<text  x="1187.16" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (810 samples, 0.22%)</title><rect x="872.0" y="245" width="2.5" height="15.0" fill="rgb(223,135,46)" rx="2" ry="2" />
<text  x="874.98" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (248 samples, 0.07%)</title><rect x="153.4" y="85" width="0.8" height="15.0" fill="rgb(245,0,43)" rx="2" ry="2" />
<text  x="156.43" y="95.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::find (1,371 samples, 0.37%)</title><rect x="403.5" y="293" width="4.4" height="15.0" fill="rgb(242,61,43)" rx="2" ry="2" />
<text  x="406.54" y="303.5" ></text>
</g>
<g >
<title>kv::Spinlock::unlock (878 samples, 0.24%)</title><rect x="1160.8" y="325" width="2.7" height="15.0" fill="rgb(233,32,20)" rx="2" ry="2" />
<text  x="1163.77" y="335.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_lock (16,031 samples, 4.30%)</title><rect x="28.8" y="197" width="50.8" height="15.0" fill="rgb(239,103,12)" rx="2" ry="2" />
<text  x="31.84" y="207.5" >__GI_..</text>
</g>
<g >
<title>alloc_pages_vma (38 samples, 0.01%)</title><rect x="1172.8" y="213" width="0.1" height="15.0" fill="rgb(238,183,44)" rx="2" ry="2" />
<text  x="1175.82" y="223.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (201 samples, 0.05%)</title><rect x="832.7" y="309" width="0.6" height="15.0" fill="rgb(218,224,39)" rx="2" ry="2" />
<text  x="835.70" y="319.5" ></text>
</g>
<g >
<title>kv::ConnQue::dequeue (46 samples, 0.01%)</title><rect x="1180.2" y="501" width="0.2" height="15.0" fill="rgb(215,118,40)" rx="2" ry="2" />
<text  x="1183.25" y="511.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_write (318 samples, 0.09%)</title><rect x="1181.8" y="501" width="1.0" height="15.0" fill="rgb(211,164,43)" rx="2" ry="2" />
<text  x="1184.83" y="511.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (37 samples, 0.01%)</title><rect x="11.9" y="325" width="0.1" height="15.0" fill="rgb(216,32,50)" rx="2" ry="2" />
<text  x="14.91" y="335.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (10,630 samples, 2.85%)</title><rect x="212.3" y="69" width="33.6" height="15.0" fill="rgb(243,200,43)" rx="2" ry="2" />
<text  x="215.28" y="79.5" >na..</text>
</g>
<g >
<title>std::queue&lt;kv::ListNode*, std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt; &gt;::pop (136 samples, 0.04%)</title><rect x="427.0" y="309" width="0.5" height="15.0" fill="rgb(247,121,10)" rx="2" ry="2" />
<text  x="430.04" y="319.5" ></text>
</g>
<g >
<title>ptep_clear_flush (174 samples, 0.05%)</title><rect x="1173.7" y="117" width="0.6" height="15.0" fill="rgb(248,132,28)" rx="2" ry="2" />
<text  x="1176.73" y="127.5" ></text>
</g>
<g >
<title>__lll_lock_wait (14,943 samples, 4.01%)</title><rect x="148.5" y="181" width="47.3" height="15.0" fill="rgb(221,166,40)" rx="2" ry="2" />
<text  x="151.54" y="191.5" >__ll..</text>
</g>
<g >
<title>std::mutex::lock (16,365 samples, 4.39%)</title><rect x="440.5" y="245" width="51.8" height="15.0" fill="rgb(241,144,38)" rx="2" ry="2" />
<text  x="443.51" y="255.5" >std::..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_unique_node (548 samples, 0.15%)</title><rect x="884.6" y="293" width="1.7" height="15.0" fill="rgb(234,97,35)" rx="2" ry="2" />
<text  x="887.61" y="303.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (8,193 samples, 2.20%)</title><rect x="339.1" y="245" width="25.9" height="15.0" fill="rgb(216,88,7)" rx="2" ry="2" />
<text  x="342.07" y="255.5" >s..</text>
</g>
<g >
<title>do_futex (17,805 samples, 4.78%)</title><rect x="498.1" y="133" width="56.3" height="15.0" fill="rgb(226,167,20)" rx="2" ry="2" />
<text  x="501.08" y="143.5" >do_fu..</text>
</g>
<g >
<title>std::__detail::_Prime_rehash_policy::_M_state (36 samples, 0.01%)</title><rect x="913.2" y="277" width="0.1" height="15.0" fill="rgb(227,135,2)" rx="2" ry="2" />
<text  x="916.18" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (35 samples, 0.01%)</title><rect x="901.6" y="149" width="0.1" height="15.0" fill="rgb(209,7,35)" rx="2" ry="2" />
<text  x="904.61" y="159.5" ></text>
</g>
<g >
<title>__lll_lock_wait (14,156 samples, 3.80%)</title><rect x="447.5" y="197" width="44.8" height="15.0" fill="rgb(240,97,16)" rx="2" ry="2" />
<text  x="450.47" y="207.5" >__ll..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::ListNode*&gt; &gt;::allocate (53 samples, 0.01%)</title><rect x="412.3" y="245" width="0.2" height="15.0" fill="rgb(210,41,32)" rx="2" ry="2" />
<text  x="415.31" y="255.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unique_lock (16,453 samples, 4.41%)</title><rect x="440.2" y="277" width="52.1" height="15.0" fill="rgb(229,4,6)" rx="2" ry="2" />
<text  x="443.23" y="287.5" >std::..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::allocate (49 samples, 0.01%)</title><rect x="556.5" y="213" width="0.1" height="15.0" fill="rgb(205,127,51)" rx="2" ry="2" />
<text  x="559.47" y="223.5" ></text>
</g>
<g >
<title>migrate_misplaced_page (92 samples, 0.02%)</title><rect x="1178.9" y="245" width="0.3" height="15.0" fill="rgb(217,174,23)" rx="2" ry="2" />
<text  x="1181.87" y="255.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::begin (68 samples, 0.02%)</title><rect x="426.8" y="277" width="0.2" height="15.0" fill="rgb(216,3,25)" rx="2" ry="2" />
<text  x="429.82" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock (9,380 samples, 2.52%)</title><rect x="161.0" y="69" width="29.7" height="15.0" fill="rgb(241,109,32)" rx="2" ry="2" />
<text  x="164.02" y="79.5" >_r..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (19,262 samples, 5.17%)</title><rect x="617.4" y="261" width="60.9" height="15.0" fill="rgb(217,209,53)" rx="2" ry="2" />
<text  x="620.37" y="271.5" >std::u..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (18,759 samples, 5.03%)</title><rect x="80.0" y="197" width="59.4" height="15.0" fill="rgb(230,159,20)" rx="2" ry="2" />
<text  x="83.02" y="207.5" >__GI__..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (357 samples, 0.10%)</title><rect x="403.9" y="261" width="1.2" height="15.0" fill="rgb(205,55,34)" rx="2" ry="2" />
<text  x="406.95" y="271.5" ></text>
</g>
<g >
<title>get_futex_value_locked (939 samples, 0.25%)</title><rect x="192.1" y="69" width="3.0" height="15.0" fill="rgb(232,12,12)" rx="2" ry="2" />
<text  x="195.12" y="79.5" ></text>
</g>
<g >
<title>on_each_cpu_mask (39 samples, 0.01%)</title><rect x="1179.0" y="85" width="0.1" height="15.0" fill="rgb(243,198,21)" rx="2" ry="2" />
<text  x="1181.98" y="95.5" ></text>
</g>
<g >
<title>rmap_walk_anon (190 samples, 0.05%)</title><rect x="1173.7" y="149" width="0.6" height="15.0" fill="rgb(243,137,46)" rx="2" ry="2" />
<text  x="1176.69" y="159.5" ></text>
</g>
<g >
<title>futex_wake (16,932 samples, 4.54%)</title><rect x="500.6" y="117" width="53.6" height="15.0" fill="rgb(209,159,12)" rx="2" ry="2" />
<text  x="503.61" y="127.5" >futex..</text>
</g>
<g >
<title>__x64_sys_futex (17,220 samples, 4.62%)</title><rect x="204.7" y="133" width="54.5" height="15.0" fill="rgb(208,24,32)" rx="2" ry="2" />
<text  x="207.67" y="143.5" >__x64..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (171 samples, 0.05%)</title><rect x="408.6" y="229" width="0.6" height="15.0" fill="rgb(223,143,44)" rx="2" ry="2" />
<text  x="411.61" y="239.5" ></text>
</g>
<g >
<title>do_futex (576 samples, 0.15%)</title><rect x="844.4" y="197" width="1.8" height="15.0" fill="rgb(210,37,31)" rx="2" ry="2" />
<text  x="847.41" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (54 samples, 0.01%)</title><rect x="417.5" y="229" width="0.2" height="15.0" fill="rgb(207,198,3)" rx="2" ry="2" />
<text  x="420.48" y="239.5" ></text>
</g>
<g >
<title>mark_wake_futex (661 samples, 0.18%)</title><rect x="540.3" y="101" width="2.1" height="15.0" fill="rgb(242,173,0)" rx="2" ry="2" />
<text  x="543.34" y="111.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::erase (3,158 samples, 0.85%)</title><rect x="412.6" y="293" width="10.0" height="15.0" fill="rgb(232,137,53)" rx="2" ry="2" />
<text  x="415.64" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, kv::ListNode*&gt; (37 samples, 0.01%)</title><rect x="421.1" y="197" width="0.1" height="15.0" fill="rgb(232,175,5)" rx="2" ry="2" />
<text  x="424.10" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_equals (33 samples, 0.01%)</title><rect x="1186.0" y="501" width="0.1" height="15.0" fill="rgb(214,122,35)" rx="2" ry="2" />
<text  x="1188.96" y="511.5" ></text>
</g>
<g >
<title>std::mutex::unlock (34 samples, 0.01%)</title><rect x="1189.4" y="501" width="0.1" height="15.0" fill="rgb(231,122,5)" rx="2" ry="2" />
<text  x="1192.36" y="511.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::push_back (425 samples, 0.11%)</title><rect x="411.2" y="293" width="1.3" height="15.0" fill="rgb(240,57,9)" rx="2" ry="2" />
<text  x="414.17" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::c_str (175 samples, 0.05%)</title><rect x="1163.5" y="325" width="0.6" height="15.0" fill="rgb(213,57,42)" rx="2" ry="2" />
<text  x="1166.55" y="335.5" ></text>
</g>
<g >
<title>std::mutex::unlock (19,557 samples, 5.25%)</title><rect x="492.6" y="245" width="61.9" height="15.0" fill="rgb(246,147,8)" rx="2" ry="2" />
<text  x="495.58" y="255.5" >std::m..</text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt;::_Hash_node (65 samples, 0.02%)</title><rect x="886.9" y="277" width="0.2" height="15.0" fill="rgb(246,65,18)" rx="2" ry="2" />
<text  x="889.92" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::end (69 samples, 0.02%)</title><rect x="876.7" y="293" width="0.3" height="15.0" fill="rgb(228,107,49)" rx="2" ry="2" />
<text  x="879.75" y="303.5" ></text>
</g>
<g >
<title>ibv_poll_cq (244 samples, 0.07%)</title><rect x="1179.4" y="501" width="0.8" height="15.0" fill="rgb(221,102,41)" rx="2" ry="2" />
<text  x="1182.45" y="511.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (79 samples, 0.02%)</title><rect x="1164.3" y="293" width="0.2" height="15.0" fill="rgb(221,175,46)" rx="2" ry="2" />
<text  x="1167.27" y="303.5" ></text>
</g>
<g >
<title>get_futex_key (398 samples, 0.11%)</title><rect x="665.9" y="101" width="1.3" height="15.0" fill="rgb(243,3,14)" rx="2" ry="2" />
<text  x="668.92" y="111.5" ></text>
</g>
<g >
<title>__lock_text_start (35 samples, 0.01%)</title><rect x="901.6" y="133" width="0.1" height="15.0" fill="rgb(245,19,44)" rx="2" ry="2" />
<text  x="904.61" y="143.5" ></text>
</g>
<g >
<title>do_futex (3,036 samples, 0.81%)</title><rect x="850.6" y="197" width="9.6" height="15.0" fill="rgb(226,220,3)" rx="2" ry="2" />
<text  x="853.57" y="207.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (11,205 samples, 3.01%)</title><rect x="718.8" y="245" width="35.5" height="15.0" fill="rgb(220,146,31)" rx="2" ry="2" />
<text  x="721.82" y="255.5" >[li..</text>
</g>
<g >
<title>kv::ConnQue::enqueue (46 samples, 0.01%)</title><rect x="1180.4" y="501" width="0.1" height="15.0" fill="rgb(242,121,51)" rx="2" ry="2" />
<text  x="1183.39" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false, false&gt;::_Node_iterator (35 samples, 0.01%)</title><rect x="886.1" y="277" width="0.1" height="15.0" fill="rgb(228,114,31)" rx="2" ry="2" />
<text  x="889.08" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (2,172 samples, 0.58%)</title><rect x="902.9" y="277" width="6.9" height="15.0" fill="rgb(205,100,26)" rx="2" ry="2" />
<text  x="905.91" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (8,186 samples, 2.20%)</title><rect x="679.8" y="277" width="25.9" height="15.0" fill="rgb(207,118,40)" rx="2" ry="2" />
<text  x="682.78" y="287.5" >_..</text>
</g>
<g >
<title>schedule (39 samples, 0.01%)</title><rect x="575.8" y="85" width="0.1" height="15.0" fill="rgb(250,43,8)" rx="2" ry="2" />
<text  x="578.77" y="95.5" ></text>
</g>
<g >
<title>std::atomic_flag::test_and_set (2,005 samples, 0.54%)</title><rect x="1154.4" y="309" width="6.4" height="15.0" fill="rgb(236,85,0)" rx="2" ry="2" />
<text  x="1157.42" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (37 samples, 0.01%)</title><rect x="410.0" y="165" width="0.1" height="15.0" fill="rgb(236,225,4)" rx="2" ry="2" />
<text  x="413.03" y="175.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt;*&gt;::pointer_to (58 samples, 0.02%)</title><rect x="419.2" y="213" width="0.2" height="15.0" fill="rgb(241,212,25)" rx="2" ry="2" />
<text  x="422.20" y="223.5" ></text>
</g>
<g >
<title>try_to_wake_up (3,182 samples, 0.85%)</title><rect x="129.1" y="69" width="10.1" height="15.0" fill="rgb(228,226,28)" rx="2" ry="2" />
<text  x="132.08" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::allocate (497 samples, 0.13%)</title><rect x="887.5" y="277" width="1.6" height="15.0" fill="rgb(232,32,11)" rx="2" ry="2" />
<text  x="890.55" y="287.5" ></text>
</g>
<g >
<title>kv::LRUCache::PushToFront (119 samples, 0.03%)</title><rect x="422.6" y="325" width="0.4" height="15.0" fill="rgb(239,91,4)" rx="2" ry="2" />
<text  x="425.64" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (69 samples, 0.02%)</title><rect x="884.0" y="229" width="0.2" height="15.0" fill="rgb(252,157,51)" rx="2" ry="2" />
<text  x="886.97" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::_M_node_allocator (79 samples, 0.02%)</title><rect x="887.3" y="277" width="0.2" height="15.0" fill="rgb(250,192,36)" rx="2" ry="2" />
<text  x="890.29" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (36 samples, 0.01%)</title><rect x="12.3" y="325" width="0.1" height="15.0" fill="rgb(218,129,38)" rx="2" ry="2" />
<text  x="15.26" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_ptr (38 samples, 0.01%)</title><rect x="420.8" y="181" width="0.1" height="15.0" fill="rgb(207,155,5)" rx="2" ry="2" />
<text  x="423.81" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (37 samples, 0.01%)</title><rect x="913.4" y="293" width="0.2" height="15.0" fill="rgb(210,225,38)" rx="2" ry="2" />
<text  x="916.45" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (366 samples, 0.10%)</title><rect x="835.2" y="229" width="1.1" height="15.0" fill="rgb(240,46,1)" rx="2" ry="2" />
<text  x="838.18" y="239.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (10,396 samples, 2.79%)</title><rect x="293.5" y="229" width="32.9" height="15.0" fill="rgb(234,201,27)" rx="2" ry="2" />
<text  x="296.54" y="239.5" >[l..</text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (149 samples, 0.04%)</title><rect x="834.2" y="245" width="0.4" height="15.0" fill="rgb(254,127,37)" rx="2" ry="2" />
<text  x="837.16" y="255.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (39 samples, 0.01%)</title><rect x="852.9" y="149" width="0.1" height="15.0" fill="rgb(211,167,37)" rx="2" ry="2" />
<text  x="855.86" y="159.5" ></text>
</g>
<g >
<title>rmap_walk_anon (54 samples, 0.01%)</title><rect x="1173.5" y="149" width="0.2" height="15.0" fill="rgb(242,68,40)" rx="2" ry="2" />
<text  x="1176.50" y="159.5" ></text>
</g>
<g >
<title>std::tuple&lt;unsigned long const&amp;&gt;::tuple (159 samples, 0.04%)</title><rect x="890.5" y="245" width="0.5" height="15.0" fill="rgb(224,8,22)" rx="2" ry="2" />
<text  x="893.45" y="255.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (41 samples, 0.01%)</title><rect x="884.4" y="229" width="0.1" height="15.0" fill="rgb(239,60,13)" rx="2" ry="2" />
<text  x="887.36" y="239.5" ></text>
</g>
<g >
<title>operator new (412 samples, 0.11%)</title><rect x="887.8" y="245" width="1.3" height="15.0" fill="rgb(251,226,16)" rx="2" ry="2" />
<text  x="890.82" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,998 samples, 3.49%)</title><rect x="451.1" y="165" width="41.2" height="15.0" fill="rgb(214,47,41)" rx="2" ry="2" />
<text  x="454.14" y="175.5" >do_..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (646 samples, 0.17%)</title><rect x="830.7" y="309" width="2.0" height="15.0" fill="rgb(221,57,38)" rx="2" ry="2" />
<text  x="833.65" y="319.5" ></text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (168 samples, 0.05%)</title><rect x="835.8" y="213" width="0.5" height="15.0" fill="rgb(242,17,48)" rx="2" ry="2" />
<text  x="838.81" y="223.5" ></text>
</g>
<g >
<title>get_futex_key (437 samples, 0.12%)</title><rect x="245.9" y="85" width="1.4" height="15.0" fill="rgb(210,191,51)" rx="2" ry="2" />
<text  x="248.92" y="95.5" ></text>
</g>
<g >
<title>__lock_text_start (2,936 samples, 0.79%)</title><rect x="249.6" y="53" width="9.3" height="15.0" fill="rgb(206,109,1)" rx="2" ry="2" />
<text  x="252.62" y="63.5" ></text>
</g>
<g >
<title>wake_up_q (3,260 samples, 0.87%)</title><rect x="128.8" y="85" width="10.4" height="15.0" fill="rgb(205,15,42)" rx="2" ry="2" />
<text  x="131.83" y="95.5" ></text>
</g>
<g >
<title>__lll_lock_wait (883 samples, 0.24%)</title><rect x="843.5" y="261" width="2.7" height="15.0" fill="rgb(250,130,44)" rx="2" ry="2" />
<text  x="846.45" y="271.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (128 samples, 0.03%)</title><rect x="315.0" y="213" width="0.4" height="15.0" fill="rgb(206,97,37)" rx="2" ry="2" />
<text  x="318.04" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (303 samples, 0.08%)</title><rect x="885.1" y="277" width="0.9" height="15.0" fill="rgb(207,165,48)" rx="2" ry="2" />
<text  x="888.08" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (80 samples, 0.02%)</title><rect x="883.3" y="229" width="0.3" height="15.0" fill="rgb(232,108,11)" rx="2" ry="2" />
<text  x="886.35" y="239.5" ></text>
</g>
<g >
<title>_int_malloc (37 samples, 0.01%)</title><rect x="556.5" y="149" width="0.1" height="15.0" fill="rgb(223,21,47)" rx="2" ry="2" />
<text  x="559.49" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (38 samples, 0.01%)</title><rect x="910.3" y="133" width="0.1" height="15.0" fill="rgb(237,225,26)" rx="2" ry="2" />
<text  x="913.32" y="143.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (18,803 samples, 5.04%)</title><rect x="79.9" y="213" width="59.5" height="15.0" fill="rgb(218,22,35)" rx="2" ry="2" />
<text  x="82.91" y="223.5" >__gthr..</text>
</g>
<g >
<title>migrate_misplaced_page (407 samples, 0.11%)</title><rect x="1173.2" y="213" width="1.3" height="15.0" fill="rgb(213,175,29)" rx="2" ry="2" />
<text  x="1176.24" y="223.5" ></text>
</g>
<g >
<title>_raw_spin_lock (755 samples, 0.20%)</title><rect x="498.2" y="117" width="2.4" height="15.0" fill="rgb(233,95,7)" rx="2" ry="2" />
<text  x="501.21" y="127.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (174 samples, 0.05%)</title><rect x="404.5" y="229" width="0.6" height="15.0" fill="rgb(227,79,1)" rx="2" ry="2" />
<text  x="407.53" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (100 samples, 0.03%)</title><rect x="416.7" y="213" width="0.3" height="15.0" fill="rgb(220,190,23)" rx="2" ry="2" />
<text  x="419.67" y="223.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,223 samples, 0.33%)</title><rect x="1171.3" y="277" width="3.9" height="15.0" fill="rgb(249,184,48)" rx="2" ry="2" />
<text  x="1174.30" y="287.5" ></text>
</g>
<g >
<title>tcache_get (159 samples, 0.04%)</title><rect x="888.6" y="213" width="0.5" height="15.0" fill="rgb(245,45,51)" rx="2" ry="2" />
<text  x="891.62" y="223.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (277 samples, 0.07%)</title><rect x="40.7" y="85" width="0.8" height="15.0" fill="rgb(212,89,4)" rx="2" ry="2" />
<text  x="43.67" y="95.5" ></text>
</g>
<g >
<title>std::mutex::lock (18,831 samples, 5.05%)</title><rect x="557.7" y="245" width="59.6" height="15.0" fill="rgb(214,118,35)" rx="2" ry="2" />
<text  x="560.68" y="255.5" >std::m..</text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::lock (16,143 samples, 4.33%)</title><rect x="28.5" y="245" width="51.1" height="15.0" fill="rgb(239,2,25)" rx="2" ry="2" />
<text  x="31.51" y="255.5" >std::..</text>
</g>
<g >
<title>kv::ConnQue::dequeue (38,314 samples, 10.28%)</title><rect x="433.2" y="293" width="121.3" height="15.0" fill="rgb(218,35,21)" rx="2" ry="2" />
<text  x="436.22" y="303.5" >kv::ConnQue::de..</text>
</g>
<g >
<title>__x64_sys_futex (44 samples, 0.01%)</title><rect x="83.8" y="149" width="0.2" height="15.0" fill="rgb(238,180,54)" rx="2" ry="2" />
<text  x="86.84" y="159.5" ></text>
</g>
<g >
<title>try_to_wake_up (2,949 samples, 0.79%)</title><rect x="249.6" y="69" width="9.3" height="15.0" fill="rgb(231,166,21)" rx="2" ry="2" />
<text  x="252.58" y="79.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, kv::ListNode*, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt; &gt;::erase (3,197 samples, 0.86%)</title><rect x="412.5" y="309" width="10.1" height="15.0" fill="rgb(242,131,27)" rx="2" ry="2" />
<text  x="415.52" y="319.5" ></text>
</g>
<g >
<title>std::operator==&lt;kv::RDMAConnection*, kv::RDMAConnection*&amp;, kv::RDMAConnection**&gt; (685 samples, 0.18%)</title><rect x="435.2" y="245" width="2.2" height="15.0" fill="rgb(244,78,24)" rx="2" ry="2" />
<text  x="438.20" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::deallocate (45 samples, 0.01%)</title><rect x="440.1" y="213" width="0.1" height="15.0" fill="rgb(222,142,24)" rx="2" ry="2" />
<text  x="443.06" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (170 samples, 0.05%)</title><rect x="877.9" y="261" width="0.6" height="15.0" fill="rgb(245,140,37)" rx="2" ry="2" />
<text  x="880.95" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;kv::RDMAConnection*&gt; &gt;::deallocate (44 samples, 0.01%)</title><rect x="28.1" y="197" width="0.1" height="15.0" fill="rgb(212,206,52)" rx="2" ry="2" />
<text  x="31.06" y="207.5" ></text>
</g>
<g >
<title>unlink_chunk (38 samples, 0.01%)</title><rect x="888.5" y="197" width="0.1" height="15.0" fill="rgb(231,116,37)" rx="2" ry="2" />
<text  x="891.48" y="207.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (16,319 samples, 4.38%)</title><rect x="440.7" y="229" width="51.6" height="15.0" fill="rgb(224,201,23)" rx="2" ry="2" />
<text  x="443.66" y="239.5" >__gth..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (110 samples, 0.03%)</title><rect x="833.0" y="245" width="0.3" height="15.0" fill="rgb(240,184,0)" rx="2" ry="2" />
<text  x="835.96" y="255.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::operator[] (35 samples, 0.01%)</title><rect x="1183.1" y="485" width="0.1" height="15.0" fill="rgb(250,51,44)" rx="2" ry="2" />
<text  x="1186.05" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_futex (13,764 samples, 3.69%)</title><rect x="573.6" y="149" width="43.6" height="15.0" fill="rgb(228,223,29)" rx="2" ry="2" />
<text  x="576.64" y="159.5" >__x6..</text>
</g>
<g >
<title>std::get&lt;0ul, unsigned long const, unsigned int&gt; (40 samples, 0.01%)</title><rect x="838.6" y="197" width="0.1" height="15.0" fill="rgb(218,173,32)" rx="2" ry="2" />
<text  x="841.57" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock (8,820 samples, 2.37%)</title><rect x="46.7" y="69" width="27.9" height="15.0" fill="rgb(208,183,37)" rx="2" ry="2" />
<text  x="49.66" y="79.5" >_..</text>
</g>
<g >
<title>__x64_sys_futex (3,058 samples, 0.82%)</title><rect x="850.5" y="213" width="9.7" height="15.0" fill="rgb(247,173,8)" rx="2" ry="2" />
<text  x="853.51" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (3,106 samples, 0.83%)</title><rect x="412.8" y="277" width="9.8" height="15.0" fill="rgb(215,149,38)" rx="2" ry="2" />
<text  x="415.81" y="287.5" ></text>
</g>
<g >
<title>rmap_walk (193 samples, 0.05%)</title><rect x="1173.7" y="165" width="0.6" height="15.0" fill="rgb(215,51,18)" rx="2" ry="2" />
<text  x="1176.68" y="175.5" ></text>
</g>
<g >
<title>hash_futex (74 samples, 0.02%)</title><rect x="678.0" y="117" width="0.2" height="15.0" fill="rgb(243,211,39)" rx="2" ry="2" />
<text  x="681.01" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (13,040 samples, 3.50%)</title><rect x="451.0" y="181" width="41.3" height="15.0" fill="rgb(206,190,18)" rx="2" ry="2" />
<text  x="454.00" y="191.5" >ent..</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (624 samples, 0.17%)</title><rect x="400.7" y="293" width="2.0" height="15.0" fill="rgb(253,123,49)" rx="2" ry="2" />
<text  x="403.75" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Node_iterator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false, false&gt;::_Node_iterator (44 samples, 0.01%)</title><rect x="876.8" y="277" width="0.2" height="15.0" fill="rgb(217,171,48)" rx="2" ry="2" />
<text  x="879.83" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (91 samples, 0.02%)</title><rect x="409.9" y="181" width="0.2" height="15.0" fill="rgb(220,228,3)" rx="2" ry="2" />
<text  x="412.86" y="191.5" ></text>
</g>
<g >
<title>__gthread_mutex_unlock (19,543 samples, 5.24%)</title><rect x="492.6" y="229" width="61.9" height="15.0" fill="rgb(215,195,9)" rx="2" ry="2" />
<text  x="495.62" y="239.5" >__gthr..</text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, kv::ListNode*, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt; &gt;::end (116 samples, 0.03%)</title><rect x="860.2" y="325" width="0.4" height="15.0" fill="rgb(232,77,53)" rx="2" ry="2" />
<text  x="863.21" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_hash_code (71 samples, 0.02%)</title><rect x="877.0" y="293" width="0.2" height="15.0" fill="rgb(244,228,6)" rx="2" ry="2" />
<text  x="879.97" y="303.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (58 samples, 0.02%)</title><rect x="1175.5" y="293" width="0.2" height="15.0" fill="rgb(247,21,9)" rx="2" ry="2" />
<text  x="1178.52" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (616 samples, 0.17%)</title><rect x="874.7" y="245" width="1.9" height="15.0" fill="rgb(238,124,45)" rx="2" ry="2" />
<text  x="877.67" y="255.5" ></text>
</g>
<g >
<title>kv::ConnQue::enqueue (37,862 samples, 10.15%)</title><rect x="139.4" y="277" width="119.8" height="15.0" fill="rgb(220,156,48)" rx="2" ry="2" />
<text  x="142.42" y="287.5" >kv::ConnQue::e..</text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (998 samples, 0.27%)</title><rect x="822.2" y="229" width="3.2" height="15.0" fill="rgb(205,215,46)" rx="2" ry="2" />
<text  x="825.22" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (57 samples, 0.02%)</title><rect x="1185.1" y="485" width="0.2" height="15.0" fill="rgb(216,144,6)" rx="2" ry="2" />
<text  x="1188.07" y="495.5" ></text>
</g>
<g >
<title>_raw_spin_lock (202 samples, 0.05%)</title><rect x="40.0" y="85" width="0.7" height="15.0" fill="rgb(244,207,9)" rx="2" ry="2" />
<text  x="43.02" y="95.5" ></text>
</g>
<g >
<title>schedule (40 samples, 0.01%)</title><rect x="154.8" y="69" width="0.2" height="15.0" fill="rgb(218,158,42)" rx="2" ry="2" />
<text  x="157.85" y="79.5" ></text>
</g>
<g >
<title>std::error_code::default_error_condition (369,476 samples, 99.10%)</title><rect x="10.0" y="469" width="1169.3" height="15.0" fill="rgb(235,74,37)" rx="2" ry="2" />
<text  x="13.01" y="479.5" >std::error_code::default_error_condition</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (6,523 samples, 1.75%)</title><rect x="260.1" y="261" width="20.6" height="15.0" fill="rgb(211,12,54)" rx="2" ry="2" />
<text  x="263.08" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (55 samples, 0.01%)</title><rect x="884.2" y="229" width="0.2" height="15.0" fill="rgb(232,200,28)" rx="2" ry="2" />
<text  x="887.18" y="239.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;kv::RDMAConnection*, kv::RDMAConnection*&amp;, kv::RDMAConnection**&gt;::_Deque_iterator (285 samples, 0.08%)</title><rect x="25.9" y="213" width="0.9" height="15.0" fill="rgb(232,189,40)" rx="2" ry="2" />
<text  x="28.92" y="223.5" ></text>
</g>
<g >
<title>std::mutex::lock (2,110 samples, 0.57%)</title><rect x="892.1" y="309" width="6.7" height="15.0" fill="rgb(207,146,12)" rx="2" ry="2" />
<text  x="895.10" y="319.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1l, 1000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,060 samples, 0.82%)</title><rect x="798.4" y="245" width="9.7" height="15.0" fill="rgb(244,55,10)" rx="2" ry="2" />
<text  x="801.39" y="255.5" ></text>
</g>
<g >
<title>do_futex (17,162 samples, 4.60%)</title><rect x="85.0" y="117" width="54.4" height="15.0" fill="rgb(237,205,28)" rx="2" ry="2" />
<text  x="88.04" y="127.5" >do_fu..</text>
</g>
<g >
<title>std::queue&lt;kv::RDMAConnection*, std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt; &gt;::front (361 samples, 0.10%)</title><rect x="25.7" y="261" width="1.1" height="15.0" fill="rgb(234,97,37)" rx="2" ry="2" />
<text  x="28.68" y="271.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (19,610 samples, 5.26%)</title><rect x="492.4" y="261" width="62.1" height="15.0" fill="rgb(215,59,33)" rx="2" ry="2" />
<text  x="495.41" y="271.5" >std::u..</text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (3,762 samples, 1.01%)</title><rect x="901.8" y="309" width="11.9" height="15.0" fill="rgb(222,53,0)" rx="2" ry="2" />
<text  x="904.80" y="319.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (151 samples, 0.04%)</title><rect x="1182.4" y="485" width="0.4" height="15.0" fill="rgb(234,36,13)" rx="2" ry="2" />
<text  x="1185.36" y="495.5" ></text>
</g>
<g >
<title>ibv_poll_cq (12,340 samples, 3.31%)</title><rect x="287.4" y="245" width="39.0" height="15.0" fill="rgb(234,65,30)" rx="2" ry="2" />
<text  x="290.39" y="255.5" >ibv..</text>
</g>
<g >
<title>__do_page_fault (152 samples, 0.04%)</title><rect x="1178.7" y="325" width="0.5" height="15.0" fill="rgb(232,48,15)" rx="2" ry="2" />
<text  x="1181.71" y="335.5" ></text>
</g>
<g >
<title>remove_migration_pte (54 samples, 0.01%)</title><rect x="1173.5" y="133" width="0.2" height="15.0" fill="rgb(224,39,49)" rx="2" ry="2" />
<text  x="1176.50" y="143.5" ></text>
</g>
<g >
<title>pthread_spin_lock (1,671 samples, 0.45%)</title><rect x="762.2" y="229" width="5.2" height="15.0" fill="rgb(228,54,10)" rx="2" ry="2" />
<text  x="765.15" y="239.5" ></text>
</g>
<g >
<title>ibv_poll_cq (13,193 samples, 3.54%)</title><rect x="712.5" y="261" width="41.8" height="15.0" fill="rgb(230,74,0)" rx="2" ry="2" />
<text  x="715.53" y="271.5" >ibv..</text>
</g>
<g >
<title>__lock_text_start (3,173 samples, 0.85%)</title><rect x="129.1" y="53" width="10.0" height="15.0" fill="rgb(249,164,33)" rx="2" ry="2" />
<text  x="132.10" y="63.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (125 samples, 0.03%)</title><rect x="873.3" y="229" width="0.4" height="15.0" fill="rgb(232,146,53)" rx="2" ry="2" />
<text  x="876.33" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (34 samples, 0.01%)</title><rect x="898.6" y="229" width="0.2" height="15.0" fill="rgb(239,125,0)" rx="2" ry="2" />
<text  x="901.65" y="239.5" ></text>
</g>
<g >
<title>kv::hash_map_t::find (79,257 samples, 21.26%)</title><rect x="913.7" y="341" width="250.8" height="15.0" fill="rgb(240,135,12)" rx="2" ry="2" />
<text  x="916.71" y="351.5" >kv::hash_map_t::find</text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, unsigned long const&amp;&gt;::_M_head (57 samples, 0.02%)</title><rect x="890.7" y="213" width="0.2" height="15.0" fill="rgb(247,45,46)" rx="2" ry="2" />
<text  x="893.73" y="223.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (57 samples, 0.02%)</title><rect x="1185.1" y="501" width="0.2" height="15.0" fill="rgb(248,224,0)" rx="2" ry="2" />
<text  x="1188.07" y="511.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (39 samples, 0.01%)</title><rect x="1189.8" y="501" width="0.1" height="15.0" fill="rgb(220,16,2)" rx="2" ry="2" />
<text  x="1192.80" y="511.5" ></text>
</g>
<g >
<title>get_futex_value_locked (844 samples, 0.23%)</title><rect x="488.8" y="85" width="2.7" height="15.0" fill="rgb(246,8,50)" rx="2" ry="2" />
<text  x="491.80" y="95.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (348 samples, 0.09%)</title><rect x="837.8" y="261" width="1.1" height="15.0" fill="rgb(229,95,25)" rx="2" ry="2" />
<text  x="840.82" y="271.5" ></text>
</g>
<g >
<title>__do_page_fault (47 samples, 0.01%)</title><rect x="910.3" y="165" width="0.1" height="15.0" fill="rgb(207,187,29)" rx="2" ry="2" />
<text  x="913.29" y="175.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::count (775 samples, 0.21%)</title><rect x="804.3" y="229" width="2.5" height="15.0" fill="rgb(245,122,53)" rx="2" ry="2" />
<text  x="807.32" y="239.5" ></text>
</g>
<g >
<title>__unqueue_futex (283 samples, 0.08%)</title><rect x="127.9" y="69" width="0.8" height="15.0" fill="rgb(248,68,45)" rx="2" ry="2" />
<text  x="130.85" y="79.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (4,593 samples, 1.23%)</title><rect x="877.2" y="309" width="14.6" height="15.0" fill="rgb(250,80,6)" rx="2" ry="2" />
<text  x="880.25" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (18,196 samples, 4.88%)</title><rect x="496.9" y="181" width="57.6" height="15.0" fill="rgb(247,198,33)" rx="2" ry="2" />
<text  x="499.88" y="191.5" >entry_..</text>
</g>
<g >
<title>kv::Spinlock::unlock (39 samples, 0.01%)</title><rect x="1183.3" y="485" width="0.1" height="15.0" fill="rgb(235,122,35)" rx="2" ry="2" />
<text  x="1186.30" y="495.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_valptr (56 samples, 0.02%)</title><rect x="1185.6" y="501" width="0.1" height="15.0" fill="rgb(249,113,18)" rx="2" ry="2" />
<text  x="1188.56" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (278 samples, 0.07%)</title><rect x="409.7" y="213" width="0.9" height="15.0" fill="rgb(210,203,16)" rx="2" ry="2" />
<text  x="412.67" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt; &gt;::destroy&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt; (55 samples, 0.01%)</title><rect x="419.5" y="229" width="0.2" height="15.0" fill="rgb(243,188,28)" rx="2" ry="2" />
<text  x="422.51" y="239.5" ></text>
</g>
<g >
<title>mlx5dv_open_device (3,880 samples, 1.04%)</title><rect x="755.2" y="245" width="12.2" height="15.0" fill="rgb(222,163,46)" rx="2" ry="2" />
<text  x="758.16" y="255.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (2,090 samples, 0.56%)</title><rect x="892.2" y="293" width="6.6" height="15.0" fill="rgb(234,98,53)" rx="2" ry="2" />
<text  x="895.17" y="303.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_node (794 samples, 0.21%)</title><rect x="405.1" y="261" width="2.5" height="15.0" fill="rgb(247,99,0)" rx="2" ry="2" />
<text  x="408.08" y="271.5" ></text>
</g>
<g >
<title>rmap_walk_anon (58 samples, 0.02%)</title><rect x="1178.9" y="181" width="0.2" height="15.0" fill="rgb(222,58,7)" rx="2" ry="2" />
<text  x="1181.94" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_v (106 samples, 0.03%)</title><rect x="405.9" y="197" width="0.3" height="15.0" fill="rgb(215,223,52)" rx="2" ry="2" />
<text  x="408.91" y="207.5" ></text>
</g>
<g >
<title>__lll_lock_wait (15,147 samples, 4.06%)</title><rect x="569.3" y="197" width="47.9" height="15.0" fill="rgb(254,173,39)" rx="2" ry="2" />
<text  x="572.27" y="207.5" >__ll..</text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (112 samples, 0.03%)</title><rect x="833.0" y="261" width="0.3" height="15.0" fill="rgb(227,51,37)" rx="2" ry="2" />
<text  x="835.95" y="271.5" ></text>
</g>
<g >
<title>kv::Spinlock::unlock (41 samples, 0.01%)</title><rect x="1183.2" y="485" width="0.1" height="15.0" fill="rgb(206,91,27)" rx="2" ry="2" />
<text  x="1186.17" y="495.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_insert_bucket_begin (37 samples, 0.01%)</title><rect x="909.8" y="277" width="0.1" height="15.0" fill="rgb(225,93,54)" rx="2" ry="2" />
<text  x="912.80" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (887 samples, 0.24%)</title><rect x="898.9" y="261" width="2.8" height="15.0" fill="rgb(210,59,46)" rx="2" ry="2" />
<text  x="901.92" y="271.5" ></text>
</g>
<g >
<title>futex_wake (16,370 samples, 4.39%)</title><rect x="87.3" y="101" width="51.9" height="15.0" fill="rgb(241,34,39)" rx="2" ry="2" />
<text  x="90.34" y="111.5" >futex..</text>
</g>
<g >
<title>ibv_post_send (4,157 samples, 1.11%)</title><rect x="754.3" y="261" width="13.1" height="15.0" fill="rgb(208,211,26)" rx="2" ry="2" />
<text  x="757.28" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,627 samples, 2.85%)</title><rect x="505.5" y="101" width="33.6" height="15.0" fill="rgb(212,134,34)" rx="2" ry="2" />
<text  x="508.50" y="111.5" >_r..</text>
</g>
<g >
<title>std::equal_to&lt;unsigned long&gt;::operator (301 samples, 0.08%)</title><rect x="421.2" y="213" width="1.0" height="15.0" fill="rgb(240,115,35)" rx="2" ry="2" />
<text  x="424.22" y="223.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (439 samples, 0.12%)</title><rect x="882.2" y="261" width="1.4" height="15.0" fill="rgb(244,39,0)" rx="2" ry="2" />
<text  x="885.25" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Select1st::operator (57 samples, 0.02%)</title><rect x="911.1" y="229" width="0.1" height="15.0" fill="rgb(239,6,21)" rx="2" ry="2" />
<text  x="914.06" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (535 samples, 0.14%)</title><rect x="420.5" y="229" width="1.7" height="15.0" fill="rgb(229,205,18)" rx="2" ry="2" />
<text  x="423.48" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock (272 samples, 0.07%)</title><rect x="574.2" y="101" width="0.9" height="15.0" fill="rgb(213,79,13)" rx="2" ry="2" />
<text  x="577.22" y="111.5" ></text>
</g>
<g >
<title>[libmlx5.so.1.19.35.0] (244 samples, 0.07%)</title><rect x="1179.4" y="485" width="0.8" height="15.0" fill="rgb(219,47,41)" rx="2" ry="2" />
<text  x="1182.45" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt;::construct&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (511 samples, 0.14%)</title><rect x="889.3" y="261" width="1.7" height="15.0" fill="rgb(235,140,43)" rx="2" ry="2" />
<text  x="892.34" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::construct&lt;kv::RDMAConnection*, kv::RDMAConnection* const&amp;&gt; (64 samples, 0.02%)</title><rect x="140.8" y="213" width="0.2" height="15.0" fill="rgb(250,113,13)" rx="2" ry="2" />
<text  x="143.81" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::begin (339 samples, 0.09%)</title><rect x="437.5" y="245" width="1.1" height="15.0" fill="rgb(222,7,40)" rx="2" ry="2" />
<text  x="440.48" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (81 samples, 0.02%)</title><rect x="420.7" y="213" width="0.2" height="15.0" fill="rgb(224,162,40)" rx="2" ry="2" />
<text  x="423.67" y="223.5" ></text>
</g>
<g >
<title>kv::hash_map_t::insert (39 samples, 0.01%)</title><rect x="1183.3" y="501" width="0.1" height="15.0" fill="rgb(247,135,18)" rx="2" ry="2" />
<text  x="1186.30" y="511.5" ></text>
</g>
<g >
<title>[[vdso]] (6,191 samples, 1.66%)</title><rect x="345.4" y="197" width="19.6" height="15.0" fill="rgb(220,115,43)" rx="2" ry="2" />
<text  x="348.41" y="207.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::end (36 samples, 0.01%)</title><rect x="403.4" y="293" width="0.1" height="15.0" fill="rgb(238,126,11)" rx="2" ry="2" />
<text  x="406.42" y="303.5" ></text>
</g>
<g >
<title>mem_cgroup_try_charge_delay (39 samples, 0.01%)</title><rect x="1173.0" y="213" width="0.2" height="15.0" fill="rgb(219,24,54)" rx="2" ry="2" />
<text  x="1176.04" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17,012 samples, 4.56%)</title><rect x="624.5" y="181" width="53.8" height="15.0" fill="rgb(226,58,9)" rx="2" ry="2" />
<text  x="627.46" y="191.5" >entry..</text>
</g>
<g >
<title>_int_malloc (99 samples, 0.03%)</title><rect x="888.3" y="213" width="0.3" height="15.0" fill="rgb(224,63,38)" rx="2" ry="2" />
<text  x="891.29" y="223.5" ></text>
</g>
<g >
<title>__unqueue_futex (227 samples, 0.06%)</title><rect x="668.2" y="85" width="0.7" height="15.0" fill="rgb(230,45,0)" rx="2" ry="2" />
<text  x="671.15" y="95.5" ></text>
</g>
<g >
<title>try_to_wake_up (1,811 samples, 0.49%)</title><rect x="854.4" y="149" width="5.7" height="15.0" fill="rgb(239,42,38)" rx="2" ry="2" />
<text  x="857.37" y="159.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (1,224 samples, 0.33%)</title><rect x="905.8" y="245" width="3.9" height="15.0" fill="rgb(222,61,0)" rx="2" ry="2" />
<text  x="908.80" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Map_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt;, true&gt;::operator[] (835 samples, 0.22%)</title><rect x="836.7" y="293" width="2.6" height="15.0" fill="rgb(207,55,30)" rx="2" ry="2" />
<text  x="839.70" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;unsigned long const, kv::ListNode*&gt;::pair&lt;unsigned long const&amp;, 0ul&gt; (169 samples, 0.05%)</title><rect x="889.9" y="229" width="0.6" height="15.0" fill="rgb(228,209,45)" rx="2" ry="2" />
<text  x="892.92" y="239.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (7,271 samples, 1.95%)</title><rect x="771.5" y="229" width="23.0" height="15.0" fill="rgb(254,201,32)" rx="2" ry="2" />
<text  x="774.51" y="239.5" >_..</text>
</g>
<g >
<title>do_page_fault (47 samples, 0.01%)</title><rect x="910.3" y="181" width="0.1" height="15.0" fill="rgb(251,173,15)" rx="2" ry="2" />
<text  x="913.29" y="191.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (161 samples, 0.04%)</title><rect x="1188.5" y="485" width="0.5" height="15.0" fill="rgb(240,205,10)" rx="2" ry="2" />
<text  x="1191.49" y="495.5" ></text>
</g>
<g >
<title>pthread_spin_lock (1,927 samples, 0.52%)</title><rect x="333.0" y="213" width="6.1" height="15.0" fill="rgb(223,165,46)" rx="2" ry="2" />
<text  x="335.97" y="223.5" ></text>
</g>
<g >
<title>get_futex_key (48 samples, 0.01%)</title><rect x="845.8" y="149" width="0.2" height="15.0" fill="rgb(235,131,34)" rx="2" ry="2" />
<text  x="848.83" y="159.5" ></text>
</g>
<g >
<title>native_flush_tlb_others (48 samples, 0.01%)</title><rect x="1179.0" y="117" width="0.1" height="15.0" fill="rgb(247,84,38)" rx="2" ry="2" />
<text  x="1181.97" y="127.5" ></text>
</g>
<g >
<title>std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;::duration&lt;long, void&gt; (696 samples, 0.19%)</title><rect x="395.5" y="213" width="2.2" height="15.0" fill="rgb(209,158,31)" rx="2" ry="2" />
<text  x="398.54" y="223.5" ></text>
</g>
<g >
<title>__do_page_fault (1,267 samples, 0.34%)</title><rect x="1171.3" y="293" width="4.0" height="15.0" fill="rgb(222,108,6)" rx="2" ry="2" />
<text  x="1174.30" y="303.5" ></text>
</g>
<g >
<title>futex_wait (556 samples, 0.15%)</title><rect x="844.5" y="181" width="1.7" height="15.0" fill="rgb(238,90,34)" rx="2" ry="2" />
<text  x="847.46" y="191.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::front (362 samples, 0.10%)</title><rect x="437.4" y="261" width="1.2" height="15.0" fill="rgb(225,94,43)" rx="2" ry="2" />
<text  x="440.40" y="271.5" ></text>
</g>
<g >
<title>flush_tlb_mm_range (53 samples, 0.01%)</title><rect x="1179.0" y="133" width="0.1" height="15.0" fill="rgb(226,108,22)" rx="2" ry="2" />
<text  x="1181.95" y="143.5" ></text>
</g>
<g >
<title>hash_futex (54 samples, 0.01%)</title><rect x="616.5" y="101" width="0.2" height="15.0" fill="rgb(234,191,41)" rx="2" ry="2" />
<text  x="619.52" y="111.5" ></text>
</g>
<g >
<title>std::__detail::_Equal_helper&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, unsigned long, false&gt;::_S_equals (215 samples, 0.06%)</title><rect x="883.8" y="245" width="0.7" height="15.0" fill="rgb(240,17,14)" rx="2" ry="2" />
<text  x="886.81" y="255.5" ></text>
</g>
<g >
<title>ptep_clear_flush (54 samples, 0.01%)</title><rect x="1178.9" y="149" width="0.2" height="15.0" fill="rgb(227,48,2)" rx="2" ry="2" />
<text  x="1181.95" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt; &gt;::allocate (470 samples, 0.13%)</title><rect x="887.6" y="261" width="1.5" height="15.0" fill="rgb(233,130,27)" rx="2" ry="2" />
<text  x="890.63" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (18,749 samples, 5.03%)</title><rect x="80.1" y="181" width="59.3" height="15.0" fill="rgb(243,111,44)" rx="2" ry="2" />
<text  x="83.05" y="191.5" >__pthr..</text>
</g>
<g >
<title>__lock_text_start (1,806 samples, 0.48%)</title><rect x="854.4" y="133" width="5.7" height="15.0" fill="rgb(212,116,19)" rx="2" ry="2" />
<text  x="857.38" y="143.5" ></text>
</g>
<g >
<title>do_swap_page (175 samples, 0.05%)</title><rect x="1174.5" y="229" width="0.6" height="15.0" fill="rgb(226,149,26)" rx="2" ry="2" />
<text  x="1177.53" y="239.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (121 samples, 0.03%)</title><rect x="403.0" y="245" width="0.4" height="15.0" fill="rgb(238,143,23)" rx="2" ry="2" />
<text  x="406.01" y="255.5" ></text>
</g>
<g >
<title>std::chrono::time_point&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt;::time_since_epoch (789 samples, 0.21%)</title><rect x="397.7" y="229" width="2.5" height="15.0" fill="rgb(251,136,33)" rx="2" ry="2" />
<text  x="400.74" y="239.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (1,436 samples, 0.39%)</title><rect x="860.9" y="293" width="4.6" height="15.0" fill="rgb(217,2,46)" rx="2" ry="2" />
<text  x="863.92" y="303.5" ></text>
</g>
<g >
<title>__GI___pthread_mutex_unlock (19,153 samples, 5.14%)</title><rect x="617.7" y="213" width="60.6" height="15.0" fill="rgb(227,186,2)" rx="2" ry="2" />
<text  x="620.68" y="223.5" >__GI__..</text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1l, 1000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (152 samples, 0.04%)</title><rect x="1186.7" y="501" width="0.4" height="15.0" fill="rgb(205,30,3)" rx="2" ry="2" />
<text  x="1189.66" y="511.5" ></text>
</g>
<g >
<title>std::__detail::_Mod_range_hashing::operator (188 samples, 0.05%)</title><rect x="902.2" y="261" width="0.6" height="15.0" fill="rgb(229,150,15)" rx="2" ry="2" />
<text  x="905.25" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (10,480 samples, 2.81%)</title><rect x="92.3" y="69" width="33.2" height="15.0" fill="rgb(234,139,43)" rx="2" ry="2" />
<text  x="95.34" y="79.5" >na..</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (72 samples, 0.02%)</title><rect x="1184.5" y="501" width="0.2" height="15.0" fill="rgb(238,61,14)" rx="2" ry="2" />
<text  x="1187.51" y="511.5" ></text>
</g>
<g >
<title>std::mutex::lock (16,101 samples, 4.32%)</title><rect x="28.6" y="229" width="51.0" height="15.0" fill="rgb(218,9,32)" rx="2" ry="2" />
<text  x="31.64" y="239.5" >std::..</text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (8,797 samples, 2.36%)</title><rect x="459.2" y="69" width="27.9" height="15.0" fill="rgb(218,192,16)" rx="2" ry="2" />
<text  x="462.21" y="79.5" >n..</text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_erase (1,573 samples, 0.42%)</title><rect x="414.8" y="261" width="5.0" height="15.0" fill="rgb(240,87,22)" rx="2" ry="2" />
<text  x="417.78" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt;, false&gt;::_M_next (47 samples, 0.01%)</title><rect x="417.2" y="245" width="0.1" height="15.0" fill="rgb(220,118,11)" rx="2" ry="2" />
<text  x="420.19" y="255.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (77 samples, 0.02%)</title><rect x="1178.3" y="309" width="0.3" height="15.0" fill="rgb(211,106,37)" rx="2" ry="2" />
<text  x="1181.32" y="319.5" ></text>
</g>
<g >
<title>wake_up_q (1,867 samples, 0.50%)</title><rect x="854.2" y="165" width="5.9" height="15.0" fill="rgb(224,174,18)" rx="2" ry="2" />
<text  x="857.19" y="175.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (6,972 samples, 1.87%)</title><rect x="342.9" y="213" width="22.1" height="15.0" fill="rgb(208,173,34)" rx="2" ry="2" />
<text  x="345.94" y="223.5" >_..</text>
</g>
<g >
<title>_raw_spin_lock (32 samples, 0.01%)</title><rect x="1173.6" y="101" width="0.1" height="15.0" fill="rgb(248,211,22)" rx="2" ry="2" />
<text  x="1176.57" y="111.5" ></text>
</g>
<g >
<title>std::_Deque_base&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::_M_allocate_node (52 samples, 0.01%)</title><rect x="556.5" y="229" width="0.1" height="15.0" fill="rgb(211,191,49)" rx="2" ry="2" />
<text  x="559.46" y="239.5" ></text>
</g>
<g >
<title>std::mutex::unlock (159 samples, 0.04%)</title><rect x="832.8" y="293" width="0.5" height="15.0" fill="rgb(230,57,52)" rx="2" ry="2" />
<text  x="835.83" y="303.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::operator[] (3,774 samples, 1.01%)</title><rect x="901.8" y="325" width="11.9" height="15.0" fill="rgb(225,20,11)" rx="2" ry="2" />
<text  x="904.77" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (37 samples, 0.01%)</title><rect x="905.6" y="245" width="0.1" height="15.0" fill="rgb(238,192,49)" rx="2" ry="2" />
<text  x="908.61" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_Hash_node_value_base (40 samples, 0.01%)</title><rect x="887.0" y="261" width="0.1" height="15.0" fill="rgb(220,218,20)" rx="2" ry="2" />
<text  x="890.00" y="271.5" ></text>
</g>
<g >
<title>_int_free (75 samples, 0.02%)</title><rect x="418.9" y="181" width="0.3" height="15.0" fill="rgb(224,81,22)" rx="2" ry="2" />
<text  x="421.91" y="191.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (159 samples, 0.04%)</title><rect x="1187.8" y="501" width="0.5" height="15.0" fill="rgb(254,192,28)" rx="2" ry="2" />
<text  x="1190.81" y="511.5" ></text>
</g>
<g >
<title>std::_Deque_iterator&lt;kv::ListNode*, kv::ListNode*&amp;, kv::ListNode**&gt;::_S_buffer_size (122 samples, 0.03%)</title><rect x="430.9" y="261" width="0.4" height="15.0" fill="rgb(207,154,48)" rx="2" ry="2" />
<text  x="433.87" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (822 samples, 0.22%)</title><rect x="871.9" y="261" width="2.6" height="15.0" fill="rgb(224,78,30)" rx="2" ry="2" />
<text  x="874.94" y="271.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::remote_write (44,549 samples, 11.95%)</title><rect x="259.2" y="277" width="141.0" height="15.0" fill="rgb(226,4,21)" rx="2" ry="2" />
<text  x="262.25" y="287.5" >kv::RDMAConnectio..</text>
</g>
<g >
<title>operator new (49 samples, 0.01%)</title><rect x="556.5" y="181" width="0.1" height="15.0" fill="rgb(252,91,21)" rx="2" ry="2" />
<text  x="559.47" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::RDMAConnection*&gt;::deallocate (44 samples, 0.01%)</title><rect x="28.1" y="181" width="0.1" height="15.0" fill="rgb(205,205,8)" rx="2" ry="2" />
<text  x="31.06" y="191.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;long, std::ratio&lt;1l, 1000000000l&gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (5,009 samples, 1.34%)</title><rect x="811.8" y="245" width="15.9" height="15.0" fill="rgb(223,163,29)" rx="2" ry="2" />
<text  x="814.81" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_futex (17,209 samples, 4.62%)</title><rect x="84.9" y="133" width="54.5" height="15.0" fill="rgb(232,36,36)" rx="2" ry="2" />
<text  x="87.90" y="143.5" >__x64..</text>
</g>
<g >
<title>mlx5dv_open_device (3,820 samples, 1.02%)</title><rect x="327.0" y="229" width="12.1" height="15.0" fill="rgb(220,146,19)" rx="2" ry="2" />
<text  x="329.98" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_valptr (40 samples, 0.01%)</title><rect x="882.8" y="213" width="0.1" height="15.0" fill="rgb(240,173,4)" rx="2" ry="2" />
<text  x="885.81" y="223.5" ></text>
</g>
<g >
<title>operator new (73 samples, 0.02%)</title><rect x="12.0" y="325" width="0.3" height="15.0" fill="rgb(249,132,54)" rx="2" ry="2" />
<text  x="15.03" y="335.5" ></text>
</g>
<g >
<title>std::atomic_flag::test_and_set (1,559 samples, 0.42%)</title><rect x="1165.6" y="309" width="5.0" height="15.0" fill="rgb(248,6,24)" rx="2" ry="2" />
<text  x="1168.65" y="319.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (395 samples, 0.11%)</title><rect x="246.1" y="69" width="1.2" height="15.0" fill="rgb(216,100,2)" rx="2" ry="2" />
<text  x="249.05" y="79.5" ></text>
</g>
<g >
<title>wake_up_q (2,834 samples, 0.76%)</title><rect x="669.0" y="101" width="9.0" height="15.0" fill="rgb(226,150,11)" rx="2" ry="2" />
<text  x="672.01" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_ptr (37 samples, 0.01%)</title><rect x="891.5" y="261" width="0.1" height="15.0" fill="rgb(219,57,52)" rx="2" ry="2" />
<text  x="894.50" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock (10,630 samples, 2.85%)</title><rect x="212.3" y="85" width="33.6" height="15.0" fill="rgb(252,45,43)" rx="2" ry="2" />
<text  x="215.28" y="95.5" >_r..</text>
</g>
<g >
<title>mark_wake_futex (601 samples, 0.16%)</title><rect x="247.3" y="85" width="1.9" height="15.0" fill="rgb(234,7,7)" rx="2" ry="2" />
<text  x="250.33" y="95.5" ></text>
</g>
<g >
<title>kv::LRUCache::Insert (276,742 samples, 74.22%)</title><rect x="15.9" y="341" width="875.9" height="15.0" fill="rgb(216,61,21)" rx="2" ry="2" />
<text  x="18.94" y="351.5" >kv::LRUCache::Insert</text>
</g>
<g >
<title>plist_add (135 samples, 0.04%)</title><rect x="195.4" y="85" width="0.4" height="15.0" fill="rgb(207,220,41)" rx="2" ry="2" />
<text  x="198.37" y="95.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (51 samples, 0.01%)</title><rect x="12.1" y="309" width="0.2" height="15.0" fill="rgb(245,203,0)" rx="2" ry="2" />
<text  x="15.10" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (247 samples, 0.07%)</title><rect x="902.1" y="277" width="0.7" height="15.0" fill="rgb(231,87,48)" rx="2" ry="2" />
<text  x="905.06" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, unsigned long const&amp;, false&gt;::_M_head (33 samples, 0.01%)</title><rect x="890.8" y="197" width="0.1" height="15.0" fill="rgb(245,222,43)" rx="2" ry="2" />
<text  x="893.81" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (46 samples, 0.01%)</title><rect x="412.3" y="181" width="0.2" height="15.0" fill="rgb(245,123,8)" rx="2" ry="2" />
<text  x="415.33" y="191.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_extract (34 samples, 0.01%)</title><rect x="882.5" y="229" width="0.1" height="15.0" fill="rgb(239,215,30)" rx="2" ry="2" />
<text  x="885.50" y="239.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (348 samples, 0.09%)</title><rect x="666.1" y="85" width="1.1" height="15.0" fill="rgb(213,181,0)" rx="2" ry="2" />
<text  x="669.08" y="95.5" ></text>
</g>
<g >
<title>_raw_spin_lock (39 samples, 0.01%)</title><rect x="1172.1" y="229" width="0.1" height="15.0" fill="rgb(211,185,8)" rx="2" ry="2" />
<text  x="1175.10" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,045 samples, 0.28%)</title><rect x="1171.9" y="261" width="3.3" height="15.0" fill="rgb(243,1,27)" rx="2" ry="2" />
<text  x="1174.86" y="271.5" ></text>
</g>
<g >
<title>migrate_pages (393 samples, 0.11%)</title><rect x="1173.2" y="197" width="1.3" height="15.0" fill="rgb(208,162,51)" rx="2" ry="2" />
<text  x="1176.24" y="207.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (508 samples, 0.14%)</title><rect x="487.2" y="69" width="1.6" height="15.0" fill="rgb(213,228,54)" rx="2" ry="2" />
<text  x="490.17" y="79.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::find (973 samples, 0.26%)</title><rect x="833.6" y="293" width="3.1" height="15.0" fill="rgb(213,225,28)" rx="2" ry="2" />
<text  x="836.58" y="303.5" ></text>
</g>
<g >
<title>std::chrono::operator-&lt;std::chrono::_V2::system_clock, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt;, std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; &gt; (6,823 samples, 1.83%)</title><rect x="378.6" y="245" width="21.6" height="15.0" fill="rgb(247,176,48)" rx="2" ry="2" />
<text  x="381.65" y="255.5" >s..</text>
</g>
<g >
<title>__memcmp_avx2_movbe (72,685 samples, 19.49%)</title><rect x="924.3" y="325" width="230.1" height="15.0" fill="rgb(214,77,4)" rx="2" ry="2" />
<text  x="927.32" y="335.5" >__memcmp_avx2_movbe</text>
</g>
<g >
<title>std::__detail::_Hash_code_base&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::__detail::_Select1st, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false&gt;::_M_bucket_index (520 samples, 0.14%)</title><rect x="415.4" y="229" width="1.6" height="15.0" fill="rgb(252,187,16)" rx="2" ry="2" />
<text  x="418.37" y="239.5" ></text>
</g>
<g >
<title>std::mutex::unlock (4,367 samples, 1.17%)</title><rect x="846.4" y="309" width="13.8" height="15.0" fill="rgb(239,25,21)" rx="2" ry="2" />
<text  x="849.39" y="319.5" ></text>
</g>
<g >
<title>__lll_lock_wait (40 samples, 0.01%)</title><rect x="898.6" y="261" width="0.2" height="15.0" fill="rgb(246,117,44)" rx="2" ry="2" />
<text  x="901.63" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_ptr (34 samples, 0.01%)</title><rect x="887.2" y="261" width="0.1" height="15.0" fill="rgb(217,10,7)" rx="2" ry="2" />
<text  x="890.18" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, kv::ListNode*&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (154 samples, 0.04%)</title><rect x="885.5" y="261" width="0.5" height="15.0" fill="rgb(223,202,44)" rx="2" ry="2" />
<text  x="888.53" y="271.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (9,529 samples, 2.56%)</title><rect x="581.9" y="69" width="30.1" height="15.0" fill="rgb(220,204,20)" rx="2" ry="2" />
<text  x="584.85" y="79.5" >na..</text>
</g>
<g >
<title>std::__detail::_Select1st::operator (94 samples, 0.03%)</title><rect x="835.5" y="213" width="0.3" height="15.0" fill="rgb(234,87,29)" rx="2" ry="2" />
<text  x="838.51" y="223.5" ></text>
</g>
<g >
<title>std::deque&lt;kv::RDMAConnection*, std::allocator&lt;kv::RDMAConnection*&gt; &gt;::push_back (536 samples, 0.14%)</title><rect x="139.7" y="245" width="1.7" height="15.0" fill="rgb(250,217,11)" rx="2" ry="2" />
<text  x="142.70" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_malloc (383 samples, 0.10%)</title><rect x="887.9" y="229" width="1.2" height="15.0" fill="rgb(232,204,0)" rx="2" ry="2" />
<text  x="890.91" y="239.5" ></text>
</g>
<g >
<title>hash_futex (58 samples, 0.02%)</title><rect x="491.6" y="101" width="0.2" height="15.0" fill="rgb(242,174,50)" rx="2" ry="2" />
<text  x="494.61" y="111.5" ></text>
</g>
<g >
<title>kv::RDMAConnection::rdma_remote_read (296 samples, 0.08%)</title><rect x="1180.9" y="501" width="0.9" height="15.0" fill="rgb(233,32,18)" rx="2" ry="2" />
<text  x="1183.90" y="511.5" ></text>
</g>
<g >
<title>std::unique_lock&lt;std::mutex&gt;::unlock (19,991 samples, 5.36%)</title><rect x="196.0" y="245" width="63.2" height="15.0" fill="rgb(205,50,41)" rx="2" ry="2" />
<text  x="198.98" y="255.5" >std::u..</text>
</g>
<g >
<title>std::_Deque_base&lt;kv::ListNode*, std::allocator&lt;kv::ListNode*&gt; &gt;::_M_deallocate_node (42 samples, 0.01%)</title><rect x="427.3" y="261" width="0.1" height="15.0" fill="rgb(209,216,23)" rx="2" ry="2" />
<text  x="430.27" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__aligned_buffer&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;::_M_ptr (56 samples, 0.02%)</title><rect x="1185.6" y="485" width="0.1" height="15.0" fill="rgb(214,58,6)" rx="2" ry="2" />
<text  x="1188.56" y="495.5" ></text>
</g>
<g >
<title>do_futex (17,181 samples, 4.61%)</title><rect x="204.8" y="117" width="54.4" height="15.0" fill="rgb(228,70,44)" rx="2" ry="2" />
<text  x="207.78" y="127.5" >do_fu..</text>
</g>
<g >
<title>futex_wait_setup (362 samples, 0.10%)</title><rect x="844.9" y="165" width="1.2" height="15.0" fill="rgb(249,46,52)" rx="2" ry="2" />
<text  x="847.93" y="175.5" ></text>
</g>
<g >
<title>on_each_cpu_cond_mask (148 samples, 0.04%)</title><rect x="1173.8" y="69" width="0.4" height="15.0" fill="rgb(238,19,27)" rx="2" ry="2" />
<text  x="1176.78" y="79.5" ></text>
</g>
<g >
<title>futex_wake (2,856 samples, 0.77%)</title><rect x="851.1" y="181" width="9.0" height="15.0" fill="rgb(209,209,40)" rx="2" ry="2" />
<text  x="854.06" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (656 samples, 0.18%)</title><rect x="844.2" y="229" width="2.0" height="15.0" fill="rgb(228,188,38)" rx="2" ry="2" />
<text  x="847.17" y="239.5" ></text>
</g>
<g >
<title>std::chrono::_V2::system_clock::now (148 samples, 0.04%)</title><rect x="1180.9" y="485" width="0.5" height="15.0" fill="rgb(206,0,22)" rx="2" ry="2" />
<text  x="1183.91" y="495.5" ></text>
</g>
<g >
<title>native_queued_spin_lock_slowpath (9,378 samples, 2.52%)</title><rect x="161.0" y="53" width="29.7" height="15.0" fill="rgb(222,14,46)" rx="2" ry="2" />
<text  x="164.02" y="63.5" >na..</text>
</g>
<g >
<title>page_fault (152 samples, 0.04%)</title><rect x="1178.7" y="357" width="0.5" height="15.0" fill="rgb(242,64,38)" rx="2" ry="2" />
<text  x="1181.71" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_futex (12,771 samples, 3.43%)</title><rect x="451.8" y="149" width="40.5" height="15.0" fill="rgb(232,61,40)" rx="2" ry="2" />
<text  x="454.84" y="159.5" >__x..</text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, unsigned int, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt; &gt;::end (65 samples, 0.02%)</title><rect x="833.3" y="309" width="0.2" height="15.0" fill="rgb(210,99,8)" rx="2" ry="2" />
<text  x="836.33" y="319.5" ></text>
</g>
<g >
<title>do_numa_page (433 samples, 0.12%)</title><rect x="1173.2" y="229" width="1.3" height="15.0" fill="rgb(243,92,14)" rx="2" ry="2" />
<text  x="1176.16" y="239.5" ></text>
</g>
<g >
<title>std::chrono::duration_cast&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, long, std::ratio&lt;1l, 1000000000l&gt; &gt; (212 samples, 0.06%)</title><rect x="1187.1" y="501" width="0.7" height="15.0" fill="rgb(241,109,47)" rx="2" ry="2" />
<text  x="1190.14" y="511.5" ></text>
</g>
<g >
<title>get_futex_key_refs.isra.0 (392 samples, 0.11%)</title><rect x="74.7" y="53" width="1.2" height="15.0" fill="rgb(208,229,5)" rx="2" ry="2" />
<text  x="77.71" y="63.5" ></text>
</g>
<g >
<title>wake_q_add_safe (35 samples, 0.01%)</title><rect x="854.1" y="165" width="0.1" height="15.0" fill="rgb(232,139,13)" rx="2" ry="2" />
<text  x="857.08" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;kv::ListNode*&gt;::construct&lt;kv::ListNode*, kv::ListNode* const&amp;&gt; (76 samples, 0.02%)</title><rect x="412.0" y="261" width="0.2" height="15.0" fill="rgb(229,30,27)" rx="2" ry="2" />
<text  x="414.98" y="271.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_find_before_node (522 samples, 0.14%)</title><rect x="834.8" y="261" width="1.7" height="15.0" fill="rgb(213,82,15)" rx="2" ry="2" />
<text  x="837.82" y="271.5" ></text>
</g>
<g >
<title>std::unordered_map&lt;unsigned long, kv::ListNode*, std::hash&lt;unsigned long&gt;, std::equal_to&lt;unsigned long&gt;, std::allocator&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt; &gt;::find (5,248 samples, 1.41%)</title><rect x="860.6" y="325" width="16.6" height="15.0" fill="rgb(251,184,23)" rx="2" ry="2" />
<text  x="863.58" y="335.5" ></text>
</g>
<g >
<title>std::__detail::_Hash_node_value_base&lt;std::pair&lt;unsigned long const, kv::ListNode*&gt; &gt;::_M_v (65 samples, 0.02%)</title><rect x="882.7" y="229" width="0.2" height="15.0" fill="rgb(243,48,28)" rx="2" ry="2" />
<text  x="885.73" y="239.5" ></text>
</g>
<g >
<title>std::chrono::__duration_cast_impl&lt;std::chrono::duration&lt;long, std::ratio&lt;1l, 1000000l&gt; &gt;, std::ratio&lt;1l, 1000l&gt;, long, true, false&gt;::__cast&lt;long, std::ratio&lt;1l, 1000000000l&gt; &gt; (3,043 samples, 0.82%)</title><rect x="369.0" y="229" width="9.6" height="15.0" fill="rgb(254,31,10)" rx="2" ry="2" />
<text  x="372.02" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Hashtable_alloc&lt;std::allocator&lt;std::__detail::_Hash_node&lt;std::pair&lt;unsigned long const, unsigned int&gt;, false&gt; &gt; &gt;::_M_allocate_node&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;unsigned long const&amp;&gt;, std::tuple&lt;&gt; &gt; (41 samples, 0.01%)</title><rect x="913.6" y="293" width="0.1" height="15.0" fill="rgb(221,214,4)" rx="2" ry="2" />
<text  x="916.56" y="303.5" ></text>
</g>
<g >
<title>std::mutex::lock (609 samples, 0.16%)</title><rect x="400.8" y="277" width="1.9" height="15.0" fill="rgb(230,181,27)" rx="2" ry="2" />
<text  x="403.80" y="287.5" ></text>
</g>
<g >
<title>std::_Hashtable&lt;unsigned long, std::pair&lt;unsigned long const, unsigned int&gt;, std::allocator&lt;std::pair&lt;unsigned long const, unsigned int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;unsigned long&gt;, std::hash&lt;unsigned long&gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;false, false, true&gt; &gt;::_M_bucket_index (277 samples, 0.07%)</title><rect x="408.3" y="261" width="0.9" height="15.0" fill="rgb(233,170,47)" rx="2" ry="2" />
<text  x="411.28" y="271.5" ></text>
</g>
</g>
</svg>
